define(['dart_sdk', 'packages/vector_math/hash.dart'], (function load__packages__vector_math__vector_math_64_dart(dart_sdk, packages__vector_math__hash$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const _native_typed_data = dart_sdk._native_typed_data;
  const typed_data = dart_sdk.typed_data;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const hash = packages__vector_math__hash$46dart.hash;
  var vector_math_64 = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T = {
    ListOfint: () => (T.ListOfint = dart.constFn(core.List$(core.int)))(),
    intToint: () => (T.intToint = dart.constFn(dart.fnType(core.int, [core.int])))(),
    JSArrayOfdouble: () => (T.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    ListOfdouble: () => (T.ListOfdouble = dart.constFn(core.List$(core.double)))(),
    JSArrayOfListOfdouble: () => (T.JSArrayOfListOfdouble = dart.constFn(_interceptors.JSArray$(T.ListOfdouble())))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _min: dart.privateName(vector_math_64, "_min"),
    _max: dart.privateName(vector_math_64, "_max"),
    _updateCenterAndHalfExtents: dart.privateName(vector_math_64, "_updateCenterAndHalfExtents"),
    _center: dart.privateName(vector_math_64, "_center"),
    _point0: dart.privateName(vector_math_64, "_point0"),
    _point1: dart.privateName(vector_math_64, "_point1"),
    _point2: dart.privateName(vector_math_64, "_point2"),
    _point3: dart.privateName(vector_math_64, "_point3"),
    $abs: dartx.abs,
    _depth: dart.privateName(vector_math_64, "_depth"),
    $matchAsPrefix: dartx.matchAsPrefix,
    $floor: dartx.floor,
    $rightShift: dartx['>>'],
    $toRadixString: dartx.toRadixString,
    $padLeft: dartx.padLeft,
    $toDouble: dartx.toDouble,
    $modulo: dartx['%'],
    _plane0: dart.privateName(vector_math_64, "_plane0"),
    _plane1: dart.privateName(vector_math_64, "_plane1"),
    _plane2: dart.privateName(vector_math_64, "_plane2"),
    _plane3: dart.privateName(vector_math_64, "_plane3"),
    _plane4: dart.privateName(vector_math_64, "_plane4"),
    _plane5: dart.privateName(vector_math_64, "_plane5"),
    $_get: dartx._get,
    _intersectsWithAabb3CheckPlane: dart.privateName(vector_math_64, "_intersectsWithAabb3CheckPlane"),
    _normal: dart.privateName(vector_math_64, "_normal"),
    axis: dart.privateName(vector_math_64, "IntersectionResult.axis"),
    _m2storage: dart.privateName(vector_math_64, "_m2storage"),
    $_set: dartx._set,
    _v2storage: dart.privateName(vector_math_64, "_v2storage"),
    $_equals: dartx._equals,
    _m3storage: dart.privateName(vector_math_64, "_m3storage"),
    _v3storage: dart.privateName(vector_math_64, "_v3storage"),
    $length: dartx.length,
    _m4storage: dart.privateName(vector_math_64, "_m4storage"),
    _v4storage: dart.privateName(vector_math_64, "_v4storage"),
    _qStorage: dart.privateName(vector_math_64, "_qStorage"),
    _halfExtents: dart.privateName(vector_math_64, "_halfExtents"),
    _axis0: dart.privateName(vector_math_64, "_axis0"),
    _axis1: dart.privateName(vector_math_64, "_axis1"),
    _axis2: dart.privateName(vector_math_64, "_axis2"),
    $clamp: dartx.clamp,
    constant: dart.privateName(vector_math_64, "Plane.constant"),
    _origin: dart.privateName(vector_math_64, "_origin"),
    _direction: dart.privateName(vector_math_64, "_direction"),
    radius: dart.privateName(vector_math_64, "Sphere.radius"),
    __SimplexNoise__perm: dart.privateName(vector_math_64, "_#SimplexNoise#_perm"),
    __SimplexNoise__perm_isSet: dart.privateName(vector_math_64, "_#SimplexNoise#_perm#isSet"),
    __SimplexNoise__permMod12: dart.privateName(vector_math_64, "_#SimplexNoise#_permMod12"),
    __SimplexNoise__permMod12_isSet: dart.privateName(vector_math_64, "_#SimplexNoise#_permMod12#isSet"),
    _perm: dart.privateName(vector_math_64, "_perm"),
    _permMod12: dart.privateName(vector_math_64, "_permMod12"),
    _dot2: dart.privateName(vector_math_64, "_dot2"),
    _dot3: dart.privateName(vector_math_64, "_dot3"),
    _dot4: dart.privateName(vector_math_64, "_dot4"),
    $isInfinite: dartx.isInfinite,
    $isNaN: dartx.isNaN,
    $floorToDouble: dartx.floorToDouble,
    $ceilToDouble: dartx.ceilToDouble,
    $roundToDouble: dartx.roundToDouble
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var C = [];
  var I = [
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/aabb2.dart",
    "package:vector_math/vector_math_64.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/aabb3.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/colors.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/frustum.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/matrix2.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/matrix3.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/matrix4.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/obb3.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/plane.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/quad.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/quaternion.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/ray.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/sphere.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/third_party/noise.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/triangle.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/vector2.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/vector3.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/vector4.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/opengl.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/utilities.dart",
    "file:///C:/src/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0/lib/src/vector_math_64/vector.dart"
  ];
  vector_math_64.Aabb2 = class Aabb2 extends core.Object {
    get min() {
      return this[S._min];
    }
    get max() {
      return this[S._max];
    }
    get center() {
      let t0;
      t0 = this[S._min].clone();
      return (() => {
        t0.add(this[S._max]);
        t0.scale(0.5);
        return t0;
      })();
    }
    static centerAndHalfExtents(center, halfExtents) {
      let t0;
      if (center == null) dart.nullFailed(I[0], 40, 46, "center");
      if (halfExtents == null) dart.nullFailed(I[0], 40, 62, "halfExtents");
      t0 = new vector_math_64.Aabb2.new();
      return (() => {
        t0.setCenterAndHalfExtents(center, halfExtents);
        return t0;
      })();
    }
    setCenterAndHalfExtents(center, halfExtents) {
      let t0, t0$;
      if (center == null) dart.nullFailed(I[0], 52, 40, "center");
      if (halfExtents == null) dart.nullFailed(I[0], 52, 56, "halfExtents");
      t0 = this[S._min];
      (() => {
        t0.setFrom(center);
        t0.sub(halfExtents);
        return t0;
      })();
      t0$ = this[S._max];
      (() => {
        t0$.setFrom(center);
        t0$.add(halfExtents);
        return t0$;
      })();
    }
    copyCenterAndHalfExtents(center, halfExtents) {
      let t0, t0$;
      if (center == null) dart.nullFailed(I[0], 62, 41, "center");
      if (halfExtents == null) dart.nullFailed(I[0], 62, 57, "halfExtents");
      t0 = center;
      (() => {
        t0.setFrom(this[S._min]);
        t0.add(this[S._max]);
        t0.scale(0.5);
        return t0;
      })();
      t0$ = halfExtents;
      (() => {
        t0$.setFrom(this[S._max]);
        t0$.sub(this[S._min]);
        t0$.scale(0.5);
        return t0$;
      })();
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[0], 74, 23, "other");
      this[S._min].setFrom(other[S._min]);
      this[S._max].setFrom(other[S._max]);
    }
    [S._updateCenterAndHalfExtents]() {
      return this.copyCenterAndHalfExtents(vector_math_64.Aabb2._center, vector_math_64.Aabb2._halfExtents);
    }
    transform(t) {
      let t0, t0$, t0$0;
      if (t == null) dart.nullFailed(I[0], 85, 26, "t");
      this[S._updateCenterAndHalfExtents]();
      t0 = t;
      (() => {
        t0.transform2(vector_math_64.Aabb2._center);
        t0.absoluteRotate2(vector_math_64.Aabb2._halfExtents);
        return t0;
      })();
      t0$ = this[S._min];
      (() => {
        t0$.setFrom(vector_math_64.Aabb2._center);
        t0$.sub(vector_math_64.Aabb2._halfExtents);
        return t0$;
      })();
      t0$0 = this[S._max];
      (() => {
        t0$0.setFrom(vector_math_64.Aabb2._center);
        t0$0.add(vector_math_64.Aabb2._halfExtents);
        return t0$0;
      })();
    }
    rotate(t) {
      let t0, t0$;
      if (t == null) dart.nullFailed(I[0], 99, 23, "t");
      this[S._updateCenterAndHalfExtents]();
      t.absoluteRotate2(vector_math_64.Aabb2._halfExtents);
      t0 = this[S._min];
      (() => {
        t0.setFrom(vector_math_64.Aabb2._center);
        t0.sub(vector_math_64.Aabb2._halfExtents);
        return t0;
      })();
      t0$ = this[S._max];
      (() => {
        t0$.setFrom(vector_math_64.Aabb2._center);
        t0$.add(vector_math_64.Aabb2._halfExtents);
        return t0$;
      })();
    }
    transformed(t, out) {
      let t0;
      if (t == null) dart.nullFailed(I[0], 112, 29, "t");
      if (out == null) dart.nullFailed(I[0], 112, 38, "out");
      t0 = out;
      return (() => {
        t0.copyFrom(this);
        t0.transform(t);
        return t0;
      })();
    }
    rotated(t, out) {
      let t0;
      if (t == null) dart.nullFailed(I[0], 118, 25, "t");
      if (out == null) dart.nullFailed(I[0], 118, 34, "out");
      t0 = out;
      return (() => {
        t0.copyFrom(this);
        t0.rotate(t);
        return t0;
      })();
    }
    hull(other) {
      if (other == null) dart.nullFailed(I[0], 124, 19, "other");
      vector_math_64.Vector2.min(this[S._min], other[S._min], this[S._min]);
      vector_math_64.Vector2.max(this[S._max], other[S._max], this[S._max]);
    }
    hullPoint(point) {
      if (point == null) dart.nullFailed(I[0], 130, 26, "point");
      vector_math_64.Vector2.min(this[S._min], point, this[S._min]);
      vector_math_64.Vector2.max(this[S._max], point, this[S._max]);
    }
    containsAabb2(other) {
      if (other == null) dart.nullFailed(I[0], 136, 28, "other");
      let otherMax = other[S._max];
      let otherMin = other[S._min];
      return dart.notNull(this[S._min].x) < dart.notNull(otherMin.x) && dart.notNull(this[S._min].y) < dart.notNull(otherMin.y) && dart.notNull(this[S._max].y) > dart.notNull(otherMax.y) && dart.notNull(this[S._max].x) > dart.notNull(otherMax.x);
    }
    containsVector2(other) {
      if (other == null) dart.nullFailed(I[0], 147, 32, "other");
      return dart.notNull(this[S._min].x) < dart.notNull(other.x) && dart.notNull(this[S._min].y) < dart.notNull(other.y) && dart.notNull(this[S._max].x) > dart.notNull(other.x) && dart.notNull(this[S._max].y) > dart.notNull(other.y);
    }
    intersectsWithAabb2(other) {
      if (other == null) dart.nullFailed(I[0], 154, 34, "other");
      let otherMax = other[S._max];
      let otherMin = other[S._min];
      return dart.notNull(this[S._min].x) <= dart.notNull(otherMax.x) && dart.notNull(this[S._min].y) <= dart.notNull(otherMax.y) && dart.notNull(this[S._max].x) >= dart.notNull(otherMin.x) && dart.notNull(this[S._max].y) >= dart.notNull(otherMin.y);
    }
    intersectsWithVector2(other) {
      if (other == null) dart.nullFailed(I[0], 165, 38, "other");
      return dart.notNull(this[S._min].x) <= dart.notNull(other.x) && dart.notNull(this[S._min].y) <= dart.notNull(other.y) && dart.notNull(this[S._max].x) >= dart.notNull(other.x) && dart.notNull(this[S._max].y) >= dart.notNull(other.y);
    }
  };
  (vector_math_64.Aabb2.new = function() {
    this[S._min] = new vector_math_64.Vector2.zero();
    this[S._max] = new vector_math_64.Vector2.zero();
    ;
  }).prototype = vector_math_64.Aabb2.prototype;
  (vector_math_64.Aabb2.copy = function(other) {
    if (other == null) dart.nullFailed(I[0], 30, 20, "other");
    this[S._min] = vector_math_64.Vector2.copy(other[S._min]);
    this[S._max] = vector_math_64.Vector2.copy(other[S._max]);
    ;
  }).prototype = vector_math_64.Aabb2.prototype;
  (vector_math_64.Aabb2.minMax = function(min, max) {
    if (min == null) dart.nullFailed(I[0], 35, 24, "min");
    if (max == null) dart.nullFailed(I[0], 35, 37, "max");
    this[S._min] = vector_math_64.Vector2.copy(min);
    this[S._max] = vector_math_64.Vector2.copy(max);
    ;
  }).prototype = vector_math_64.Aabb2.prototype;
  (vector_math_64.Aabb2.fromBuffer = function(buffer, offset) {
    if (buffer == null) dart.nullFailed(I[0], 46, 31, "buffer");
    if (offset == null) dart.nullFailed(I[0], 46, 43, "offset");
    this[S._min] = new vector_math_64.Vector2.fromBuffer(buffer, offset);
    this[S._max] = new vector_math_64.Vector2.fromBuffer(buffer, dart.notNull(offset) + 8 * 2);
    ;
  }).prototype = vector_math_64.Aabb2.prototype;
  dart.addTypeTests(vector_math_64.Aabb2);
  dart.addTypeCaches(vector_math_64.Aabb2);
  dart.setMethodSignature(vector_math_64.Aabb2, () => ({
    __proto__: dart.getMethods(vector_math_64.Aabb2.__proto__),
    setCenterAndHalfExtents: dart.fnType(dart.void, [vector_math_64.Vector2, vector_math_64.Vector2]),
    copyCenterAndHalfExtents: dart.fnType(dart.void, [vector_math_64.Vector2, vector_math_64.Vector2]),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Aabb2]),
    [S._updateCenterAndHalfExtents]: dart.fnType(dart.void, []),
    transform: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    rotate: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    transformed: dart.fnType(vector_math_64.Aabb2, [vector_math_64.Matrix3, vector_math_64.Aabb2]),
    rotated: dart.fnType(vector_math_64.Aabb2, [vector_math_64.Matrix3, vector_math_64.Aabb2]),
    hull: dart.fnType(dart.void, [vector_math_64.Aabb2]),
    hullPoint: dart.fnType(dart.void, [vector_math_64.Vector2]),
    containsAabb2: dart.fnType(core.bool, [vector_math_64.Aabb2]),
    containsVector2: dart.fnType(core.bool, [vector_math_64.Vector2]),
    intersectsWithAabb2: dart.fnType(core.bool, [vector_math_64.Aabb2]),
    intersectsWithVector2: dart.fnType(core.bool, [vector_math_64.Vector2])
  }));
  dart.setGetterSignature(vector_math_64.Aabb2, () => ({
    __proto__: dart.getGetters(vector_math_64.Aabb2.__proto__),
    min: vector_math_64.Vector2,
    max: vector_math_64.Vector2,
    center: vector_math_64.Vector2
  }));
  dart.setLibraryUri(vector_math_64.Aabb2, I[1]);
  dart.setFieldSignature(vector_math_64.Aabb2, () => ({
    __proto__: dart.getFields(vector_math_64.Aabb2.__proto__),
    [S._min]: dart.finalFieldType(vector_math_64.Vector2),
    [S._max]: dart.finalFieldType(vector_math_64.Vector2)
  }));
  dart.defineLazy(vector_math_64.Aabb2, {
    /*vector_math_64.Aabb2._center*/get _center() {
      return new vector_math_64.Vector2.zero();
    },
    /*vector_math_64.Aabb2._halfExtents*/get _halfExtents() {
      return new vector_math_64.Vector2.zero();
    }
  }, false);
  vector_math_64.Aabb3 = class Aabb3 extends core.Object {
    get min() {
      return this[S._min];
    }
    get max() {
      return this[S._max];
    }
    get center() {
      let t0;
      t0 = this[S._min].clone();
      return (() => {
        t0.add(this[S._max]);
        t0.scale(0.5);
        return t0;
      })();
    }
    static fromSphere(sphere) {
      let t0;
      if (sphere == null) dart.nullFailed(I[2], 37, 35, "sphere");
      t0 = new vector_math_64.Aabb3.new();
      return (() => {
        t0.setSphere(sphere);
        return t0;
      })();
    }
    static fromTriangle(triangle) {
      let t0;
      if (triangle == null) dart.nullFailed(I[2], 40, 39, "triangle");
      t0 = new vector_math_64.Aabb3.new();
      return (() => {
        t0.setTriangle(triangle);
        return t0;
      })();
    }
    static fromQuad(quad) {
      let t0;
      if (quad == null) dart.nullFailed(I[2], 44, 31, "quad");
      t0 = new vector_math_64.Aabb3.new();
      return (() => {
        t0.setQuad(quad);
        return t0;
      })();
    }
    static fromObb3(obb) {
      let t0;
      if (obb == null) dart.nullFailed(I[2], 47, 31, "obb");
      t0 = new vector_math_64.Aabb3.new();
      return (() => {
        t0.setObb3(obb);
        return t0;
      })();
    }
    static fromRay(ray, limitMin, limitMax) {
      let t0;
      if (ray == null) dart.nullFailed(I[2], 51, 29, "ray");
      if (limitMin == null) dart.nullFailed(I[2], 51, 41, "limitMin");
      if (limitMax == null) dart.nullFailed(I[2], 51, 58, "limitMax");
      t0 = new vector_math_64.Aabb3.new();
      return (() => {
        t0.setRay(ray, limitMin, limitMax);
        return t0;
      })();
    }
    static centerAndHalfExtents(center, halfExtents) {
      let t0;
      if (center == null) dart.nullFailed(I[2], 55, 46, "center");
      if (halfExtents == null) dart.nullFailed(I[2], 55, 62, "halfExtents");
      t0 = new vector_math_64.Aabb3.new();
      return (() => {
        t0.setCenterAndHalfExtents(center, halfExtents);
        return t0;
      })();
    }
    setCenterAndHalfExtents(center, halfExtents) {
      let t0, t0$;
      if (center == null) dart.nullFailed(I[2], 67, 40, "center");
      if (halfExtents == null) dart.nullFailed(I[2], 67, 56, "halfExtents");
      t0 = this[S._min];
      (() => {
        t0.setFrom(center);
        t0.sub(halfExtents);
        return t0;
      })();
      t0$ = this[S._max];
      (() => {
        t0$.setFrom(center);
        t0$.add(halfExtents);
        return t0$;
      })();
    }
    setSphere(sphere) {
      let t0, t0$;
      if (sphere == null) dart.nullFailed(I[2], 77, 25, "sphere");
      t0 = this[S._min];
      (() => {
        t0.splat(-dart.notNull(sphere.radius));
        t0.add(sphere[S._center]);
        return t0;
      })();
      t0$ = this[S._max];
      (() => {
        t0$.splat(sphere.radius);
        t0$.add(sphere[S._center]);
        return t0$;
      })();
    }
    setTriangle(triangle) {
      if (triangle == null) dart.nullFailed(I[2], 87, 29, "triangle");
      this[S._min].setValues(math.min(core.double, triangle[S._point0].x, math.min(core.double, triangle[S._point1].x, triangle[S._point2].x)), math.min(core.double, triangle[S._point0].y, math.min(core.double, triangle[S._point1].y, triangle[S._point2].y)), math.min(core.double, triangle[S._point0].z, math.min(core.double, triangle[S._point1].z, triangle[S._point2].z)));
      this[S._max].setValues(math.max(core.double, triangle[S._point0].x, math.max(core.double, triangle[S._point1].x, triangle[S._point2].x)), math.max(core.double, triangle[S._point0].y, math.max(core.double, triangle[S._point1].y, triangle[S._point2].y)), math.max(core.double, triangle[S._point0].z, math.max(core.double, triangle[S._point1].z, triangle[S._point2].z)));
    }
    setQuad(quad) {
      if (quad == null) dart.nullFailed(I[2], 105, 21, "quad");
      this[S._min].setValues(math.min(core.double, quad[S._point0].x, math.min(core.double, quad[S._point1].x, math.min(core.double, quad[S._point2].x, quad[S._point3].x))), math.min(core.double, quad[S._point0].y, math.min(core.double, quad[S._point1].y, math.min(core.double, quad[S._point2].y, quad[S._point3].y))), math.min(core.double, quad[S._point0].z, math.min(core.double, quad[S._point1].z, math.min(core.double, quad[S._point2].z, quad[S._point3].z))));
      this[S._max].setValues(math.max(core.double, quad[S._point0].x, math.max(core.double, quad[S._point1].x, math.max(core.double, quad[S._point2].x, quad[S._point3].x))), math.max(core.double, quad[S._point0].y, math.max(core.double, quad[S._point1].y, math.max(core.double, quad[S._point2].y, quad[S._point3].y))), math.max(core.double, quad[S._point0].z, math.max(core.double, quad[S._point1].z, math.max(core.double, quad[S._point2].z, quad[S._point3].z))));
    }
    setObb3(obb) {
      if (obb == null) dart.nullFailed(I[2], 127, 21, "obb");
      let corner = new vector_math_64.Vector3.zero();
      obb.copyCorner(0, corner);
      this[S._min].setFrom(corner);
      this[S._max].setFrom(corner);
      obb.copyCorner(1, corner);
      this.hullPoint(corner);
      obb.copyCorner(2, corner);
      this.hullPoint(corner);
      obb.copyCorner(3, corner);
      this.hullPoint(corner);
      obb.copyCorner(4, corner);
      this.hullPoint(corner);
      obb.copyCorner(5, corner);
      this.hullPoint(corner);
      obb.copyCorner(6, corner);
      this.hullPoint(corner);
      obb.copyCorner(7, corner);
      this.hullPoint(corner);
    }
    setRay(ray, limitMin, limitMax) {
      let t0;
      if (ray == null) dart.nullFailed(I[2], 158, 19, "ray");
      if (limitMin == null) dart.nullFailed(I[2], 158, 31, "limitMin");
      if (limitMax == null) dart.nullFailed(I[2], 158, 48, "limitMax");
      t0 = ray;
      (() => {
        t0.copyAt(this[S._min], limitMin);
        t0.copyAt(this[S._max], limitMax);
        return t0;
      })();
      if (dart.notNull(this[S._max].x) < dart.notNull(this[S._min].x)) {
        let temp = this[S._max].x;
        this[S._max].x = this[S._min].x;
        this[S._min].x = temp;
      }
      if (dart.notNull(this[S._max].y) < dart.notNull(this[S._min].y)) {
        let temp = this[S._max].y;
        this[S._max].y = this[S._min].y;
        this[S._min].y = temp;
      }
      if (dart.notNull(this[S._max].z) < dart.notNull(this[S._min].z)) {
        let temp = this[S._max].z;
        this[S._max].z = this[S._min].z;
        this[S._min].z = temp;
      }
    }
    copyCenterAndHalfExtents(center, halfExtents) {
      let t0, t0$;
      if (center == null) dart.nullFailed(I[2], 181, 41, "center");
      if (halfExtents == null) dart.nullFailed(I[2], 181, 57, "halfExtents");
      t0 = center;
      (() => {
        t0.setFrom(this[S._min]);
        t0.add(this[S._max]);
        t0.scale(0.5);
        return t0;
      })();
      t0$ = halfExtents;
      (() => {
        t0$.setFrom(this[S._max]);
        t0$.sub(this[S._min]);
        t0$.scale(0.5);
        return t0$;
      })();
    }
    copyCenter(center) {
      let t0;
      if (center == null) dart.nullFailed(I[2], 193, 27, "center");
      t0 = center;
      (() => {
        t0.setFrom(this[S._min]);
        t0.add(this[S._max]);
        t0.scale(0.5);
        return t0;
      })();
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[2], 201, 23, "other");
      this[S._min].setFrom(other[S._min]);
      this[S._max].setFrom(other[S._max]);
    }
    [S._updateCenterAndHalfExtents]() {
      return this.copyCenterAndHalfExtents(vector_math_64.Aabb3._center, vector_math_64.Aabb3._halfExtents);
    }
    transform(t) {
      let t0, t0$, t0$0;
      if (t == null) dart.nullFailed(I[2], 212, 26, "t");
      this[S._updateCenterAndHalfExtents]();
      t0 = t;
      (() => {
        t0.transform3(vector_math_64.Aabb3._center);
        t0.absoluteRotate(vector_math_64.Aabb3._halfExtents);
        return t0;
      })();
      t0$ = this[S._min];
      (() => {
        t0$.setFrom(vector_math_64.Aabb3._center);
        t0$.sub(vector_math_64.Aabb3._halfExtents);
        return t0$;
      })();
      t0$0 = this[S._max];
      (() => {
        t0$0.setFrom(vector_math_64.Aabb3._center);
        t0$0.add(vector_math_64.Aabb3._halfExtents);
        return t0$0;
      })();
    }
    rotate(t) {
      let t0, t0$;
      if (t == null) dart.nullFailed(I[2], 226, 23, "t");
      this[S._updateCenterAndHalfExtents]();
      t.absoluteRotate(vector_math_64.Aabb3._halfExtents);
      t0 = this[S._min];
      (() => {
        t0.setFrom(vector_math_64.Aabb3._center);
        t0.sub(vector_math_64.Aabb3._halfExtents);
        return t0;
      })();
      t0$ = this[S._max];
      (() => {
        t0$.setFrom(vector_math_64.Aabb3._center);
        t0$.add(vector_math_64.Aabb3._halfExtents);
        return t0$;
      })();
    }
    transformed(t, out) {
      let t0;
      if (t == null) dart.nullFailed(I[2], 239, 29, "t");
      if (out == null) dart.nullFailed(I[2], 239, 38, "out");
      t0 = out;
      return (() => {
        t0.copyFrom(this);
        t0.transform(t);
        return t0;
      })();
    }
    rotated(t, out) {
      let t0;
      if (t == null) dart.nullFailed(I[2], 245, 25, "t");
      if (out == null) dart.nullFailed(I[2], 245, 34, "out");
      t0 = out;
      return (() => {
        t0.copyFrom(this);
        t0.rotate(t);
        return t0;
      })();
    }
    getPN(planeNormal, outP, outN) {
      if (planeNormal == null) dart.nullFailed(I[2], 249, 22, "planeNormal");
      if (outP == null) dart.nullFailed(I[2], 249, 43, "outP");
      if (outN == null) dart.nullFailed(I[2], 249, 57, "outN");
      if (dart.notNull(planeNormal.x) < 0.0) {
        outP.x = this[S._min].x;
        outN.x = this[S._max].x;
      } else {
        outP.x = this[S._max].x;
        outN.x = this[S._min].x;
      }
      if (dart.notNull(planeNormal.y) < 0.0) {
        outP.y = this[S._min].y;
        outN.y = this[S._max].y;
      } else {
        outP.y = this[S._max].y;
        outN.y = this[S._min].y;
      }
      if (dart.notNull(planeNormal.z) < 0.0) {
        outP.z = this[S._min].z;
        outN.z = this[S._max].z;
      } else {
        outP.z = this[S._max].z;
        outN.z = this[S._min].z;
      }
    }
    hull(other) {
      if (other == null) dart.nullFailed(I[2], 277, 19, "other");
      vector_math_64.Vector3.min(this[S._min], other[S._min], this[S._min]);
      vector_math_64.Vector3.max(this[S._max], other[S._max], this[S._max]);
    }
    hullPoint(point) {
      if (point == null) dart.nullFailed(I[2], 283, 26, "point");
      vector_math_64.Vector3.min(this[S._min], point, this[S._min]);
      vector_math_64.Vector3.max(this[S._max], point, this[S._max]);
    }
    containsAabb3(other) {
      if (other == null) dart.nullFailed(I[2], 289, 28, "other");
      let otherMax = other[S._max];
      let otherMin = other[S._min];
      return dart.notNull(this[S._min].x) < dart.notNull(otherMin.x) && dart.notNull(this[S._min].y) < dart.notNull(otherMin.y) && dart.notNull(this[S._min].z) < dart.notNull(otherMin.z) && dart.notNull(this[S._max].x) > dart.notNull(otherMax.x) && dart.notNull(this[S._max].y) > dart.notNull(otherMax.y) && dart.notNull(this[S._max].z) > dart.notNull(otherMax.z);
    }
    containsSphere(other) {
      if (other == null) dart.nullFailed(I[2], 302, 30, "other");
      let boxExtends = vector_math_64.Vector3.all(other.radius);
      let sphereBox = vector_math_64.Aabb3.centerAndHalfExtents(other[S._center], boxExtends);
      return this.containsAabb3(sphereBox);
    }
    containsVector3(other) {
      if (other == null) dart.nullFailed(I[2], 310, 32, "other");
      return dart.notNull(this[S._min].x) < dart.notNull(other.x) && dart.notNull(this[S._min].y) < dart.notNull(other.y) && dart.notNull(this[S._min].z) < dart.notNull(other.z) && dart.notNull(this[S._max].x) > dart.notNull(other.x) && dart.notNull(this[S._max].y) > dart.notNull(other.y) && dart.notNull(this[S._max].z) > dart.notNull(other.z);
    }
    containsTriangle(other) {
      if (other == null) dart.nullFailed(I[2], 319, 34, "other");
      return dart.test(this.containsVector3(other[S._point0])) && dart.test(this.containsVector3(other[S._point1])) && dart.test(this.containsVector3(other[S._point2]));
    }
    intersectsWithAabb3(other) {
      if (other == null) dart.nullFailed(I[2], 325, 34, "other");
      let otherMax = other[S._max];
      let otherMin = other[S._min];
      return dart.notNull(this[S._min].x) <= dart.notNull(otherMax.x) && dart.notNull(this[S._min].y) <= dart.notNull(otherMax.y) && dart.notNull(this[S._min].z) <= dart.notNull(otherMax.z) && dart.notNull(this[S._max].x) >= dart.notNull(otherMin.x) && dart.notNull(this[S._max].y) >= dart.notNull(otherMin.y) && dart.notNull(this[S._max].z) >= dart.notNull(otherMin.z);
    }
    intersectsWithSphere(other) {
      if (other == null) dart.nullFailed(I[2], 338, 36, "other");
      let center = other[S._center];
      let radius = other.radius;
      let d = 0.0;
      let e = 0.0;
      for (let i = 0; i < 3; i = i + 1) {
        if ((e = dart.notNull(center._get(i)) - dart.notNull(this[S._min]._get(i))) < 0.0) {
          if (e < -dart.notNull(radius)) {
            return false;
          }
          d = d + e * e;
        } else {
          if ((e = dart.notNull(center._get(i)) - dart.notNull(this[S._max]._get(i))) > 0.0) {
            if (e > dart.notNull(radius)) {
              return false;
            }
            d = d + e * e;
          }
        }
      }
      return d <= dart.notNull(radius) * dart.notNull(radius);
    }
    intersectsWithVector3(other) {
      if (other == null) dart.nullFailed(I[2], 366, 38, "other");
      return dart.notNull(this[S._min].x) <= dart.notNull(other.x) && dart.notNull(this[S._min].y) <= dart.notNull(other.y) && dart.notNull(this[S._min].z) <= dart.notNull(other.z) && dart.notNull(this[S._max].x) >= dart.notNull(other.x) && dart.notNull(this[S._max].y) >= dart.notNull(other.y) && dart.notNull(this[S._max].z) >= dart.notNull(other.z);
    }
    intersectsWithTriangle(other, opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3;
      if (other == null) dart.nullFailed(I[2], 394, 40, "other");
      let epsilon = opts && 'epsilon' in opts ? opts.epsilon : 0.001;
      if (epsilon == null) dart.nullFailed(I[2], 395, 15, "epsilon");
      let result = opts && 'result' in opts ? opts.result : null;
      let p0 = null;
      let p1 = null;
      let p2 = null;
      let r = null;
      let len = null;
      let a = null;
      this.copyCenterAndHalfExtents(vector_math_64.Aabb3._aabbCenter, vector_math_64.Aabb3._aabbHalfExtents);
      t0 = vector_math_64.Aabb3._v0;
      (() => {
        t0.setFrom(other.point0);
        t0.sub(vector_math_64.Aabb3._aabbCenter);
        return t0;
      })();
      t0$ = vector_math_64.Aabb3._v1;
      (() => {
        t0$.setFrom(other.point1);
        t0$.sub(vector_math_64.Aabb3._aabbCenter);
        return t0$;
      })();
      t0$0 = vector_math_64.Aabb3._v2;
      (() => {
        t0$0.setFrom(other.point2);
        t0$0.sub(vector_math_64.Aabb3._aabbCenter);
        return t0$0;
      })();
      t0$1 = vector_math_64.Aabb3._f0;
      (() => {
        t0$1.setFrom(vector_math_64.Aabb3._v1);
        t0$1.sub(vector_math_64.Aabb3._v0);
        return t0$1;
      })();
      t0$2 = vector_math_64.Aabb3._f1;
      (() => {
        t0$2.setFrom(vector_math_64.Aabb3._v2);
        t0$2.sub(vector_math_64.Aabb3._v1);
        return t0$2;
      })();
      t0$3 = vector_math_64.Aabb3._f2;
      (() => {
        t0$3.setFrom(vector_math_64.Aabb3._v0);
        t0$3.sub(vector_math_64.Aabb3._v2);
        return t0$3;
      })();
      len = dart.notNull(vector_math_64.Aabb3._f0.y) * dart.notNull(vector_math_64.Aabb3._f0.y) + dart.notNull(vector_math_64.Aabb3._f0.z) * dart.notNull(vector_math_64.Aabb3._f0.z);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.z) * dart.notNull(vector_math_64.Aabb3._f0.y) - dart.notNull(vector_math_64.Aabb3._v0.y) * dart.notNull(vector_math_64.Aabb3._f0.z);
        p2 = dart.notNull(vector_math_64.Aabb3._v2.z) * dart.notNull(vector_math_64.Aabb3._f0.y) - dart.notNull(vector_math_64.Aabb3._v2.y) * dart.notNull(vector_math_64.Aabb3._f0.z);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) * vector_math_64.Aabb3._f0.z[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) * vector_math_64.Aabb3._f0.y[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p2), math.min(core.double, p0, p2)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p2) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u0.crossInto(vector_math_64.Aabb3._f0, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f1.y) * dart.notNull(vector_math_64.Aabb3._f1.y) + dart.notNull(vector_math_64.Aabb3._f1.z) * dart.notNull(vector_math_64.Aabb3._f1.z);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.z) * dart.notNull(vector_math_64.Aabb3._f1.y) - dart.notNull(vector_math_64.Aabb3._v0.y) * dart.notNull(vector_math_64.Aabb3._f1.z);
        p1 = dart.notNull(vector_math_64.Aabb3._v1.z) * dart.notNull(vector_math_64.Aabb3._f1.y) - dart.notNull(vector_math_64.Aabb3._v1.y) * dart.notNull(vector_math_64.Aabb3._f1.z);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) * vector_math_64.Aabb3._f1.z[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) * vector_math_64.Aabb3._f1.y[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p1), math.min(core.double, p0, p1)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p1) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u0.crossInto(vector_math_64.Aabb3._f1, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f2.y) * dart.notNull(vector_math_64.Aabb3._f2.y) + dart.notNull(vector_math_64.Aabb3._f2.z) * dart.notNull(vector_math_64.Aabb3._f2.z);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.z) * dart.notNull(vector_math_64.Aabb3._f2.y) - dart.notNull(vector_math_64.Aabb3._v0.y) * dart.notNull(vector_math_64.Aabb3._f2.z);
        p1 = dart.notNull(vector_math_64.Aabb3._v1.z) * dart.notNull(vector_math_64.Aabb3._f2.y) - dart.notNull(vector_math_64.Aabb3._v1.y) * dart.notNull(vector_math_64.Aabb3._f2.z);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) * vector_math_64.Aabb3._f2.z[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) * vector_math_64.Aabb3._f2.y[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p1), math.min(core.double, p0, p1)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p1) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u0.crossInto(vector_math_64.Aabb3._f2, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f0.x) * dart.notNull(vector_math_64.Aabb3._f0.x) + dart.notNull(vector_math_64.Aabb3._f0.z) * dart.notNull(vector_math_64.Aabb3._f0.z);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.x) * dart.notNull(vector_math_64.Aabb3._f0.z) - dart.notNull(vector_math_64.Aabb3._v0.z) * dart.notNull(vector_math_64.Aabb3._f0.x);
        p2 = dart.notNull(vector_math_64.Aabb3._v2.x) * dart.notNull(vector_math_64.Aabb3._f0.z) - dart.notNull(vector_math_64.Aabb3._v2.z) * dart.notNull(vector_math_64.Aabb3._f0.x);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) * vector_math_64.Aabb3._f0.z[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) * vector_math_64.Aabb3._f0.x[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p2), math.min(core.double, p0, p2)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p2) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u1.crossInto(vector_math_64.Aabb3._f0, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f1.x) * dart.notNull(vector_math_64.Aabb3._f1.x) + dart.notNull(vector_math_64.Aabb3._f1.z) * dart.notNull(vector_math_64.Aabb3._f1.z);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.x) * dart.notNull(vector_math_64.Aabb3._f1.z) - dart.notNull(vector_math_64.Aabb3._v0.z) * dart.notNull(vector_math_64.Aabb3._f1.x);
        p1 = dart.notNull(vector_math_64.Aabb3._v1.x) * dart.notNull(vector_math_64.Aabb3._f1.z) - dart.notNull(vector_math_64.Aabb3._v1.z) * dart.notNull(vector_math_64.Aabb3._f1.x);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) * vector_math_64.Aabb3._f1.z[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) * vector_math_64.Aabb3._f1.x[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p1), math.min(core.double, p0, p1)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p1) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u1.crossInto(vector_math_64.Aabb3._f1, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f2.x) * dart.notNull(vector_math_64.Aabb3._f2.x) + dart.notNull(vector_math_64.Aabb3._f2.z) * dart.notNull(vector_math_64.Aabb3._f2.z);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.x) * dart.notNull(vector_math_64.Aabb3._f2.z) - dart.notNull(vector_math_64.Aabb3._v0.z) * dart.notNull(vector_math_64.Aabb3._f2.x);
        p1 = dart.notNull(vector_math_64.Aabb3._v1.x) * dart.notNull(vector_math_64.Aabb3._f2.z) - dart.notNull(vector_math_64.Aabb3._v1.z) * dart.notNull(vector_math_64.Aabb3._f2.x);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) * vector_math_64.Aabb3._f2.z[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) * vector_math_64.Aabb3._f2.x[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p1), math.min(core.double, p0, p1)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p1) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u1.crossInto(vector_math_64.Aabb3._f2, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f0.x) * dart.notNull(vector_math_64.Aabb3._f0.x) + dart.notNull(vector_math_64.Aabb3._f0.y) * dart.notNull(vector_math_64.Aabb3._f0.y);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.y) * dart.notNull(vector_math_64.Aabb3._f0.x) - dart.notNull(vector_math_64.Aabb3._v0.x) * dart.notNull(vector_math_64.Aabb3._f0.y);
        p2 = dart.notNull(vector_math_64.Aabb3._v2.y) * dart.notNull(vector_math_64.Aabb3._f0.x) - dart.notNull(vector_math_64.Aabb3._v2.x) * dart.notNull(vector_math_64.Aabb3._f0.y);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) * vector_math_64.Aabb3._f0.y[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) * vector_math_64.Aabb3._f0.x[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p2), math.min(core.double, p0, p2)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p2) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u2.crossInto(vector_math_64.Aabb3._f0, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f1.x) * dart.notNull(vector_math_64.Aabb3._f1.x) + dart.notNull(vector_math_64.Aabb3._f1.y) * dart.notNull(vector_math_64.Aabb3._f1.y);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.y) * dart.notNull(vector_math_64.Aabb3._f1.x) - dart.notNull(vector_math_64.Aabb3._v0.x) * dart.notNull(vector_math_64.Aabb3._f1.y);
        p1 = dart.notNull(vector_math_64.Aabb3._v1.y) * dart.notNull(vector_math_64.Aabb3._f1.x) - dart.notNull(vector_math_64.Aabb3._v1.x) * dart.notNull(vector_math_64.Aabb3._f1.y);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) * vector_math_64.Aabb3._f1.y[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) * vector_math_64.Aabb3._f1.x[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p1), math.min(core.double, p0, p1)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p1) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u2.crossInto(vector_math_64.Aabb3._f1, result.axis);
        }
      }
      len = dart.notNull(vector_math_64.Aabb3._f2.x) * dart.notNull(vector_math_64.Aabb3._f2.x) + dart.notNull(vector_math_64.Aabb3._f2.y) * dart.notNull(vector_math_64.Aabb3._f2.y);
      if (dart.notNull(len) > dart.notNull(epsilon)) {
        p0 = dart.notNull(vector_math_64.Aabb3._v0.y) * dart.notNull(vector_math_64.Aabb3._f2.x) - dart.notNull(vector_math_64.Aabb3._v0.x) * dart.notNull(vector_math_64.Aabb3._f2.y);
        p1 = dart.notNull(vector_math_64.Aabb3._v1.y) * dart.notNull(vector_math_64.Aabb3._f2.x) - dart.notNull(vector_math_64.Aabb3._v1.x) * dart.notNull(vector_math_64.Aabb3._f2.y);
        r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) * vector_math_64.Aabb3._f2.y[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) * vector_math_64.Aabb3._f2.x[S.$abs]();
        if (math.max(core.double, -math.max(core.double, p0, p1), math.min(core.double, p0, p1)) > dart.notNull(r) + dart.notNull(epsilon)) {
          return false;
        }
        a = math.min(core.double, p0, p1) - dart.notNull(r);
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
          result[S._depth] = a;
          vector_math_64.Aabb3._u2.crossInto(vector_math_64.Aabb3._f2, result.axis);
        }
      }
      if (math.max(core.double, vector_math_64.Aabb3._v0.x, math.max(core.double, vector_math_64.Aabb3._v1.x, vector_math_64.Aabb3._v2.x)) < -dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) || math.min(core.double, vector_math_64.Aabb3._v0.x, math.min(core.double, vector_math_64.Aabb3._v1.x, vector_math_64.Aabb3._v2.x)) > dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0))) {
        return false;
      }
      a = math.min(core.double, vector_math_64.Aabb3._v0.x, math.min(core.double, vector_math_64.Aabb3._v1.x, vector_math_64.Aabb3._v2.x)) - dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0));
      if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
        result[S._depth] = a;
        result.axis.setFrom(vector_math_64.Aabb3._u0);
      }
      if (math.max(core.double, vector_math_64.Aabb3._v0.y, math.max(core.double, vector_math_64.Aabb3._v1.y, vector_math_64.Aabb3._v2.y)) < -dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) || math.min(core.double, vector_math_64.Aabb3._v0.y, math.min(core.double, vector_math_64.Aabb3._v1.y, vector_math_64.Aabb3._v2.y)) > dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1))) {
        return false;
      }
      a = math.min(core.double, vector_math_64.Aabb3._v0.y, math.min(core.double, vector_math_64.Aabb3._v1.y, vector_math_64.Aabb3._v2.y)) - dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1));
      if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
        result[S._depth] = a;
        result.axis.setFrom(vector_math_64.Aabb3._u1);
      }
      if (math.max(core.double, vector_math_64.Aabb3._v0.z, math.max(core.double, vector_math_64.Aabb3._v1.z, vector_math_64.Aabb3._v2.z)) < -dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) || math.min(core.double, vector_math_64.Aabb3._v0.z, math.min(core.double, vector_math_64.Aabb3._v1.z, vector_math_64.Aabb3._v2.z)) > dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2))) {
        return false;
      }
      a = math.min(core.double, vector_math_64.Aabb3._v0.z, math.min(core.double, vector_math_64.Aabb3._v1.z, vector_math_64.Aabb3._v2.z)) - dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2));
      if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < dart.notNull(a))) {
        result[S._depth] = a;
        result.axis.setFrom(vector_math_64.Aabb3._u2);
      }
      vector_math_64.Aabb3._v0.add(vector_math_64.Aabb3._aabbCenter);
      vector_math_64.Aabb3._f0.crossInto(vector_math_64.Aabb3._f1, vector_math_64.Aabb3._trianglePlane.normal);
      vector_math_64.Aabb3._trianglePlane.constant = vector_math_64.Aabb3._trianglePlane.normal.dot(vector_math_64.Aabb3._v0);
      return this.intersectsWithPlane(vector_math_64.Aabb3._trianglePlane, {result: result});
    }
    intersectsWithPlane(other, opts) {
      if (other == null) dart.nullFailed(I[2], 631, 34, "other");
      let result = opts && 'result' in opts ? opts.result : null;
      this.copyCenterAndHalfExtents(vector_math_64.Aabb3._aabbCenter, vector_math_64.Aabb3._aabbHalfExtents);
      let r = dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(0)) * other.normal._get(0)[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(1)) * other.normal._get(1)[S.$abs]() + dart.notNull(vector_math_64.Aabb3._aabbHalfExtents._get(2)) * other.normal._get(2)[S.$abs]();
      let s = dart.notNull(other.normal.dot(vector_math_64.Aabb3._aabbCenter)) - dart.notNull(other.constant);
      if (s[S.$abs]() <= r) {
        let a = s - r;
        if (result != null && (result[S._depth] == null || dart.nullCheck(result[S._depth]) < a)) {
          result[S._depth] = a;
          result.axis.setFrom(other.normal);
        }
        return true;
      }
      return false;
    }
    intersectsWithQuad(other, opts) {
      if (other == null) dart.nullFailed(I[2], 663, 32, "other");
      let result = opts && 'result' in opts ? opts.result : null;
      other.copyTriangles(vector_math_64.Aabb3._quadTriangle0, vector_math_64.Aabb3._quadTriangle1);
      return dart.test(this.intersectsWithTriangle(vector_math_64.Aabb3._quadTriangle0, {result: result})) || dart.test(this.intersectsWithTriangle(vector_math_64.Aabb3._quadTriangle1, {result: result}));
    }
  };
  (vector_math_64.Aabb3.new = function() {
    this[S._min] = new vector_math_64.Vector3.zero();
    this[S._max] = new vector_math_64.Vector3.zero();
    ;
  }).prototype = vector_math_64.Aabb3.prototype;
  (vector_math_64.Aabb3.copy = function(other) {
    if (other == null) dart.nullFailed(I[2], 27, 20, "other");
    this[S._min] = vector_math_64.Vector3.copy(other[S._min]);
    this[S._max] = vector_math_64.Vector3.copy(other[S._max]);
    ;
  }).prototype = vector_math_64.Aabb3.prototype;
  (vector_math_64.Aabb3.minMax = function(min, max) {
    if (min == null) dart.nullFailed(I[2], 32, 24, "min");
    if (max == null) dart.nullFailed(I[2], 32, 37, "max");
    this[S._min] = vector_math_64.Vector3.copy(min);
    this[S._max] = vector_math_64.Vector3.copy(max);
    ;
  }).prototype = vector_math_64.Aabb3.prototype;
  (vector_math_64.Aabb3.fromBuffer = function(buffer, offset) {
    if (buffer == null) dart.nullFailed(I[2], 61, 31, "buffer");
    if (offset == null) dart.nullFailed(I[2], 61, 43, "offset");
    this[S._min] = new vector_math_64.Vector3.fromBuffer(buffer, offset);
    this[S._max] = new vector_math_64.Vector3.fromBuffer(buffer, dart.notNull(offset) + 8 * 3);
    ;
  }).prototype = vector_math_64.Aabb3.prototype;
  dart.addTypeTests(vector_math_64.Aabb3);
  dart.addTypeCaches(vector_math_64.Aabb3);
  dart.setMethodSignature(vector_math_64.Aabb3, () => ({
    __proto__: dart.getMethods(vector_math_64.Aabb3.__proto__),
    setCenterAndHalfExtents: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3]),
    setSphere: dart.fnType(dart.void, [vector_math_64.Sphere]),
    setTriangle: dart.fnType(dart.void, [vector_math_64.Triangle]),
    setQuad: dart.fnType(dart.void, [vector_math_64.Quad]),
    setObb3: dart.fnType(dart.void, [vector_math_64.Obb3]),
    setRay: dart.fnType(dart.void, [vector_math_64.Ray, core.double, core.double]),
    copyCenterAndHalfExtents: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3]),
    copyCenter: dart.fnType(dart.void, [vector_math_64.Vector3]),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Aabb3]),
    [S._updateCenterAndHalfExtents]: dart.fnType(dart.void, []),
    transform: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    rotate: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    transformed: dart.fnType(vector_math_64.Aabb3, [vector_math_64.Matrix4, vector_math_64.Aabb3]),
    rotated: dart.fnType(vector_math_64.Aabb3, [vector_math_64.Matrix4, vector_math_64.Aabb3]),
    getPN: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3]),
    hull: dart.fnType(dart.void, [vector_math_64.Aabb3]),
    hullPoint: dart.fnType(dart.void, [vector_math_64.Vector3]),
    containsAabb3: dart.fnType(core.bool, [vector_math_64.Aabb3]),
    containsSphere: dart.fnType(core.bool, [vector_math_64.Sphere]),
    containsVector3: dart.fnType(core.bool, [vector_math_64.Vector3]),
    containsTriangle: dart.fnType(core.bool, [vector_math_64.Triangle]),
    intersectsWithAabb3: dart.fnType(core.bool, [vector_math_64.Aabb3]),
    intersectsWithSphere: dart.fnType(core.bool, [vector_math_64.Sphere]),
    intersectsWithVector3: dart.fnType(core.bool, [vector_math_64.Vector3]),
    intersectsWithTriangle: dart.fnType(core.bool, [vector_math_64.Triangle], {epsilon: core.double, result: dart.nullable(vector_math_64.IntersectionResult)}, {}),
    intersectsWithPlane: dart.fnType(core.bool, [vector_math_64.Plane], {result: dart.nullable(vector_math_64.IntersectionResult)}, {}),
    intersectsWithQuad: dart.fnType(core.bool, [vector_math_64.Quad], {result: dart.nullable(vector_math_64.IntersectionResult)}, {})
  }));
  dart.setGetterSignature(vector_math_64.Aabb3, () => ({
    __proto__: dart.getGetters(vector_math_64.Aabb3.__proto__),
    min: vector_math_64.Vector3,
    max: vector_math_64.Vector3,
    center: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Aabb3, I[1]);
  dart.setFieldSignature(vector_math_64.Aabb3, () => ({
    __proto__: dart.getFields(vector_math_64.Aabb3.__proto__),
    [S._min]: dart.finalFieldType(vector_math_64.Vector3),
    [S._max]: dart.finalFieldType(vector_math_64.Vector3)
  }));
  dart.defineLazy(vector_math_64.Aabb3, {
    /*vector_math_64.Aabb3._center*/get _center() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._halfExtents*/get _halfExtents() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._aabbCenter*/get _aabbCenter() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._aabbHalfExtents*/get _aabbHalfExtents() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._v0*/get _v0() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._v1*/get _v1() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._v2*/get _v2() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._f0*/get _f0() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._f1*/get _f1() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._f2*/get _f2() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Aabb3._trianglePlane*/get _trianglePlane() {
      return new vector_math_64.Plane.new();
    },
    /*vector_math_64.Aabb3._u0*/get _u0() {
      return vector_math_64.Vector3.new(1.0, 0.0, 0.0);
    },
    /*vector_math_64.Aabb3._u1*/get _u1() {
      return vector_math_64.Vector3.new(0.0, 1.0, 0.0);
    },
    /*vector_math_64.Aabb3._u2*/get _u2() {
      return vector_math_64.Vector3.new(0.0, 0.0, 1.0);
    },
    /*vector_math_64.Aabb3._quadTriangle0*/get _quadTriangle0() {
      return new vector_math_64.Triangle.new();
    },
    /*vector_math_64.Aabb3._quadTriangle1*/get _quadTriangle1() {
      return new vector_math_64.Triangle.new();
    }
  }, false);
  vector_math_64.Colors = class Colors extends core.Object {
    static fromRgba(r, g, b, a, result) {
      if (r == null) dart.nullFailed(I[3], 20, 28, "r");
      if (g == null) dart.nullFailed(I[3], 20, 35, "g");
      if (b == null) dart.nullFailed(I[3], 20, 42, "b");
      if (a == null) dart.nullFailed(I[3], 20, 49, "a");
      if (result == null) dart.nullFailed(I[3], 20, 60, "result");
      result.setValues(dart.notNull(r) / 255.0, dart.notNull(g) / 255.0, dart.notNull(b) / 255.0, dart.notNull(a) / 255.0);
    }
    static fromHexString(value, result) {
      if (value == null) dart.nullFailed(I[3], 28, 36, "value");
      if (result == null) dart.nullFailed(I[3], 28, 51, "result");
      let fullMatch = vector_math_64.Colors._hexStringFullRegex[S.$matchAsPrefix](value);
      if (fullMatch != null) {
        if (fullMatch._get(4) == null) {
          let r = core.int.parse(dart.nullCheck(fullMatch._get(1)), {radix: 16});
          let g = core.int.parse(dart.nullCheck(fullMatch._get(2)), {radix: 16});
          let b = core.int.parse(dart.nullCheck(fullMatch._get(3)), {radix: 16});
          vector_math_64.Colors.fromRgba(r, g, b, 255, result);
          return;
        } else {
          let a = core.int.parse(dart.nullCheck(fullMatch._get(1)), {radix: 16});
          let r = core.int.parse(dart.nullCheck(fullMatch._get(2)), {radix: 16});
          let g = core.int.parse(dart.nullCheck(fullMatch._get(3)), {radix: 16});
          let b = core.int.parse(dart.nullCheck(fullMatch._get(4)), {radix: 16});
          vector_math_64.Colors.fromRgba(r, g, b, a, result);
          return;
        }
      }
      let smallMatch = vector_math_64.Colors._hexStringSmallRegex[S.$matchAsPrefix](value);
      if (smallMatch != null) {
        if (smallMatch._get(4) == null) {
          let r = core.int.parse(dart.nullCheck(smallMatch._get(1)) + dart.nullCheck(smallMatch._get(1)), {radix: 16});
          let g = core.int.parse(dart.nullCheck(smallMatch._get(2)) + dart.nullCheck(smallMatch._get(2)), {radix: 16});
          let b = core.int.parse(dart.nullCheck(smallMatch._get(3)) + dart.nullCheck(smallMatch._get(3)), {radix: 16});
          vector_math_64.Colors.fromRgba(r, g, b, 255, result);
          return;
        } else {
          let a = core.int.parse(dart.nullCheck(smallMatch._get(1)) + dart.nullCheck(smallMatch._get(1)), {radix: 16});
          let r = core.int.parse(dart.nullCheck(smallMatch._get(2)) + dart.nullCheck(smallMatch._get(2)), {radix: 16});
          let g = core.int.parse(dart.nullCheck(smallMatch._get(3)) + dart.nullCheck(smallMatch._get(3)), {radix: 16});
          let b = core.int.parse(dart.nullCheck(smallMatch._get(4)) + dart.nullCheck(smallMatch._get(4)), {radix: 16});
          vector_math_64.Colors.fromRgba(r, g, b, a, result);
          return;
        }
      }
      dart.throw(new core.FormatException.new("Could not parse hex color " + dart.str(value)));
    }
    static toHexString(input, opts) {
      if (input == null) dart.nullFailed(I[3], 78, 37, "input");
      let alpha = opts && 'alpha' in opts ? opts.alpha : false;
      if (alpha == null) dart.nullFailed(I[3], 79, 13, "alpha");
      let short = opts && 'short' in opts ? opts.short : false;
      if (short == null) dart.nullFailed(I[3], 79, 33, "short");
      let r = (dart.notNull(input.r) * 255)[S.$floor]() & 255;
      let g = (dart.notNull(input.g) * 255)[S.$floor]() & 255;
      let b = (dart.notNull(input.b) * 255)[S.$floor]() & 255;
      let a = (dart.notNull(input.a) * 255)[S.$floor]() & 255;
      let isShort = dart.test(short) && r[S.$rightShift](4) === (r & 15) && g[S.$rightShift](4) === (g & 15) && b[S.$rightShift](4) === (b & 15) && (!dart.test(alpha) || a[S.$rightShift](4) === (a & 15));
      if (isShort) {
        let rgb = (r & 15)[S.$toRadixString](16) + (g & 15)[S.$toRadixString](16) + (b & 15)[S.$toRadixString](16);
        return dart.test(alpha) ? (a & 15)[S.$toRadixString](16) + rgb : rgb;
      } else {
        let rgb = r[S.$toRadixString](16)[S.$padLeft](2, "0") + g[S.$toRadixString](16)[S.$padLeft](2, "0") + b[S.$toRadixString](16)[S.$padLeft](2, "0");
        return dart.test(alpha) ? a[S.$toRadixString](16)[S.$padLeft](2, "0") + rgb : rgb;
      }
    }
    static alphaBlend(foreground, background, result) {
      if (foreground == null) dart.nullFailed(I[3], 109, 15, "foreground");
      if (background == null) dart.nullFailed(I[3], 109, 35, "background");
      if (result == null) dart.nullFailed(I[3], 109, 55, "result");
      let a = dart.notNull(foreground.a) + (1.0 - dart.notNull(foreground.a)) * dart.notNull(background.a);
      let factor = 1.0 / a;
      let r = factor * (dart.notNull(foreground.a) * dart.notNull(foreground.r) + (1.0 - dart.notNull(foreground.a)) * dart.notNull(background.a) * dart.notNull(background.r));
      let g = factor * (dart.notNull(foreground.a) * dart.notNull(foreground.g) + (1.0 - dart.notNull(foreground.a)) * dart.notNull(background.a) * dart.notNull(background.g));
      let b = factor * (dart.notNull(foreground.a) * dart.notNull(foreground.b) + (1.0 - dart.notNull(foreground.a)) * dart.notNull(background.a) * dart.notNull(background.b));
      result.setValues(r, g, b, a);
    }
    static toGrayscale(input, result) {
      let t0;
      if (input == null) dart.nullFailed(I[3], 127, 35, "input");
      if (result == null) dart.nullFailed(I[3], 127, 50, "result");
      let value = 0.21 * dart.notNull(input.r) + 0.71 * dart.notNull(input.g) + 0.07 * dart.notNull(input.b);
      t0 = result;
      (() => {
        t0.r = value;
        t0.g = value;
        t0.b = value;
        t0.a = input.a;
        return t0;
      })();
    }
    static linearToGamma(linearColor, gammaColor, gamma = 2.2) {
      let t0;
      if (linearColor == null) dart.nullFailed(I[3], 140, 37, "linearColor");
      if (gammaColor == null) dart.nullFailed(I[3], 140, 58, "gammaColor");
      if (gamma == null) dart.nullFailed(I[3], 141, 15, "gamma");
      let exponent = 1.0 / dart.notNull(gamma);
      t0 = gammaColor;
      (() => {
        t0.r = math.pow(linearColor.r, exponent)[S.$toDouble]();
        t0.g = math.pow(linearColor.g, exponent)[S.$toDouble]();
        t0.b = math.pow(linearColor.b, exponent)[S.$toDouble]();
        t0.a = linearColor.a;
        return t0;
      })();
    }
    static gammaToLinear(gammaColor, linearColor, gamma = 2.2) {
      let t0;
      if (gammaColor == null) dart.nullFailed(I[3], 154, 37, "gammaColor");
      if (linearColor == null) dart.nullFailed(I[3], 154, 57, "linearColor");
      if (gamma == null) dart.nullFailed(I[3], 155, 15, "gamma");
      t0 = linearColor;
      (() => {
        t0.r = math.pow(gammaColor.r, gamma)[S.$toDouble]();
        t0.g = math.pow(gammaColor.g, gamma)[S.$toDouble]();
        t0.b = math.pow(gammaColor.b, gamma)[S.$toDouble]();
        t0.a = gammaColor.a;
        return t0;
      })();
    }
    static rgbToHsv(rgbColor, hsvColor) {
      if (rgbColor == null) dart.nullFailed(I[3], 165, 32, "rgbColor");
      if (hsvColor == null) dart.nullFailed(I[3], 165, 50, "hsvColor");
      let max = math.max(core.double, math.max(core.double, rgbColor.r, rgbColor.g), rgbColor.b);
      let min = math.min(core.double, math.min(core.double, rgbColor.r, rgbColor.g), rgbColor.b);
      let d = max - min;
      let v = max;
      let s = max === 0.0 ? 0.0 : d / max;
      let h = 0.0;
      if (max !== min) {
        if (max === rgbColor.r) {
          h = (dart.notNull(rgbColor.g) - dart.notNull(rgbColor.b)) / d + (dart.notNull(rgbColor.g) < dart.notNull(rgbColor.b) ? 6.0 : 0.0);
        } else if (max === rgbColor.g) {
          h = (dart.notNull(rgbColor.b) - dart.notNull(rgbColor.r)) / d + 2.0;
        } else {
          h = (dart.notNull(rgbColor.r) - dart.notNull(rgbColor.g)) / d + 4.0;
        }
        h = h / 6.0;
      }
      hsvColor.setValues(h, s, v, rgbColor.a);
    }
    static hsvToRgb(hsvColor, rgbColor) {
      if (hsvColor == null) dart.nullFailed(I[3], 191, 32, "hsvColor");
      if (rgbColor == null) dart.nullFailed(I[3], 191, 50, "rgbColor");
      let i = (dart.notNull(hsvColor.x) * 6.0)[S.$floor]();
      let f = dart.notNull(hsvColor.x) * 6.0 - i[S.$toDouble]();
      let p = dart.notNull(hsvColor.z) * (1.0 - dart.notNull(hsvColor.y));
      let q = dart.notNull(hsvColor.z) * (1.0 - f * dart.notNull(hsvColor.y));
      let t = dart.notNull(hsvColor.z) * (1.0 - (1.0 - f) * dart.notNull(hsvColor.y));
      switch (i[S.$modulo](6)) {
        case 0:
        {
          rgbColor.setValues(hsvColor.z, t, p, hsvColor.a);
          break;
        }
        case 1:
        {
          rgbColor.setValues(q, hsvColor.z, p, hsvColor.a);
          break;
        }
        case 2:
        {
          rgbColor.setValues(p, hsvColor.z, t, hsvColor.a);
          break;
        }
        case 3:
        {
          rgbColor.setValues(p, q, hsvColor.z, hsvColor.a);
          break;
        }
        case 4:
        {
          rgbColor.setValues(t, p, hsvColor.z, hsvColor.a);
          break;
        }
        case 5:
        {
          rgbColor.setValues(hsvColor.z, p, q, hsvColor.a);
          break;
        }
      }
    }
    static rgbToHsl(rgbColor, hslColor) {
      if (rgbColor == null) dart.nullFailed(I[3], 222, 32, "rgbColor");
      if (hslColor == null) dart.nullFailed(I[3], 222, 50, "hslColor");
      let max = math.max(core.double, math.max(core.double, rgbColor.r, rgbColor.g), rgbColor.b);
      let min = math.min(core.double, math.min(core.double, rgbColor.r, rgbColor.g), rgbColor.b);
      let l = (max + min) / 2.0;
      let h = 0.0;
      let s = 0.0;
      if (max !== min) {
        let d = max - min;
        s = l > 0.5 ? d / (2.0 - max - min) : d / (max + min);
        if (max === rgbColor.r) {
          h = (dart.notNull(rgbColor.g) - dart.notNull(rgbColor.b)) / d + (dart.notNull(rgbColor.g) < dart.notNull(rgbColor.b) ? 6.0 : 0.0);
        } else if (max === rgbColor.g) {
          h = (dart.notNull(rgbColor.b) - dart.notNull(rgbColor.r)) / d + 2.0;
        } else {
          h = (dart.notNull(rgbColor.r) - dart.notNull(rgbColor.g)) / d + 4.0;
        }
        h = h / 6.0;
      }
      hslColor.setValues(h, s, l, rgbColor.a);
    }
    static hslToRgb(hslColor, rgbColor) {
      if (hslColor == null) dart.nullFailed(I[3], 251, 32, "hslColor");
      if (rgbColor == null) dart.nullFailed(I[3], 251, 50, "rgbColor");
      if (hslColor.y === 0.0) {
        rgbColor.setValues(hslColor.z, hslColor.z, hslColor.z, hslColor.a);
      } else {
        let q = dart.notNull(hslColor.z) < 0.5 ? dart.notNull(hslColor.z) * (1.0 + dart.notNull(hslColor.y)) : dart.notNull(hslColor.z) + dart.notNull(hslColor.y) - dart.notNull(hslColor.z) * dart.notNull(hslColor.y);
        let p = 2.0 * dart.notNull(hslColor.z) - q;
        let r = vector_math_64.Colors._hueToRgb(p, q, dart.notNull(hslColor.x) + 1.0 / 3.0);
        let g = vector_math_64.Colors._hueToRgb(p, q, hslColor.x);
        let b = vector_math_64.Colors._hueToRgb(p, q, dart.notNull(hslColor.x) - 1.0 / 3.0);
        rgbColor.setValues(r, g, b, hslColor.a);
      }
    }
    static _hueToRgb(p, q, t) {
      if (p == null) dart.nullFailed(I[3], 268, 34, "p");
      if (q == null) dart.nullFailed(I[3], 268, 44, "q");
      if (t == null) dart.nullFailed(I[3], 268, 54, "t");
      if (dart.notNull(t) < 0.0) {
        t = dart.notNull(t) + 1.0;
      } else if (dart.notNull(t) > 1.0) {
        t = dart.notNull(t) - 1.0;
      }
      if (dart.notNull(t) < 1.0 / 6.0) {
        return dart.notNull(p) + (dart.notNull(q) - dart.notNull(p)) * 6.0 * dart.notNull(t);
      } else if (dart.notNull(t) < 1.0 / 2.0) {
        return q;
      } else if (dart.notNull(t) < 2.0 / 3.0) {
        return dart.notNull(p) + (dart.notNull(q) - dart.notNull(p)) * (2.0 / 3.0 - dart.notNull(t)) * 6.0;
      } else {
        return p;
      }
    }
    static get transparent() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0);
    }
    static get aliceBlue() {
      return vector_math_64.Vector4.new(240.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get antiqueWhite() {
      return vector_math_64.Vector4.new(250.0 / 255.0, 235.0 / 255.0, 215.0 / 255.0, 255.0 / 255.0);
    }
    static get aqua() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get aquamarine() {
      return vector_math_64.Vector4.new(127.0 / 255.0, 255.0 / 255.0, 212.0 / 255.0, 255.0 / 255.0);
    }
    static get azure() {
      return vector_math_64.Vector4.new(240.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get beige() {
      return vector_math_64.Vector4.new(245.0 / 255.0, 245.0 / 255.0, 220.0 / 255.0, 255.0 / 255.0);
    }
    static get bisque() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 228.0 / 255.0, 196.0 / 255.0, 255.0 / 255.0);
    }
    static get black() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get blanchedAlmond() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 235.0 / 255.0, 205.0 / 255.0, 255.0 / 255.0);
    }
    static get blue() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get blueViolet() {
      return vector_math_64.Vector4.new(138.0 / 255.0, 43.0 / 255.0, 226.0 / 255.0, 255.0 / 255.0);
    }
    static get brown() {
      return vector_math_64.Vector4.new(165.0 / 255.0, 42.0 / 255.0, 42.0 / 255.0, 255.0 / 255.0);
    }
    static get burlyWood() {
      return vector_math_64.Vector4.new(222.0 / 255.0, 184.0 / 255.0, 135.0 / 255.0, 255.0 / 255.0);
    }
    static get cadetBlue() {
      return vector_math_64.Vector4.new(95.0 / 255.0, 158.0 / 255.0, 160.0 / 255.0, 255.0 / 255.0);
    }
    static get chartreuse() {
      return vector_math_64.Vector4.new(127.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get chocolate() {
      return vector_math_64.Vector4.new(210.0 / 255.0, 105.0 / 255.0, 30.0 / 255.0, 255.0 / 255.0);
    }
    static get coral() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 127.0 / 255.0, 80.0 / 255.0, 255.0 / 255.0);
    }
    static get cornflowerBlue() {
      return vector_math_64.Vector4.new(100.0 / 255.0, 149.0 / 255.0, 237.0 / 255.0, 255.0 / 255.0);
    }
    static get cornsilk() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 248.0 / 255.0, 220.0 / 255.0, 255.0 / 255.0);
    }
    static get crimson() {
      return vector_math_64.Vector4.new(220.0 / 255.0, 20.0 / 255.0, 60.0 / 255.0, 255.0 / 255.0);
    }
    static get cyan() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get darkBlue() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0, 255.0 / 255.0);
    }
    static get darkCyan() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 139.0 / 255.0, 139.0 / 255.0, 255.0 / 255.0);
    }
    static get darkGoldenrod() {
      return vector_math_64.Vector4.new(184.0 / 255.0, 134.0 / 255.0, 11.0 / 255.0, 255.0 / 255.0);
    }
    static get darkGray() {
      return vector_math_64.Vector4.new(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0, 255.0 / 255.0);
    }
    static get darkGreen() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 100.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get darkKhaki() {
      return vector_math_64.Vector4.new(189.0 / 255.0, 183.0 / 255.0, 107.0 / 255.0, 255.0 / 255.0);
    }
    static get darkMagenta() {
      return vector_math_64.Vector4.new(139.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0, 255.0 / 255.0);
    }
    static get darkOliveGreen() {
      return vector_math_64.Vector4.new(85.0 / 255.0, 107.0 / 255.0, 47.0 / 255.0, 255.0 / 255.0);
    }
    static get darkOrange() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 140.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get darkOrchid() {
      return vector_math_64.Vector4.new(153.0 / 255.0, 50.0 / 255.0, 204.0 / 255.0, 255.0 / 255.0);
    }
    static get darkRed() {
      return vector_math_64.Vector4.new(139.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get darkSalmon() {
      return vector_math_64.Vector4.new(233.0 / 255.0, 150.0 / 255.0, 122.0 / 255.0, 255.0 / 255.0);
    }
    static get darkSeaGreen() {
      return vector_math_64.Vector4.new(143.0 / 255.0, 188.0 / 255.0, 139.0 / 255.0, 255.0 / 255.0);
    }
    static get darkSlateBlue() {
      return vector_math_64.Vector4.new(72.0 / 255.0, 61.0 / 255.0, 139.0 / 255.0, 255.0 / 255.0);
    }
    static get darkSlateGray() {
      return vector_math_64.Vector4.new(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0, 255.0 / 255.0);
    }
    static get darkTurquoise() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 206.0 / 255.0, 209.0 / 255.0, 255.0 / 255.0);
    }
    static get darkViolet() {
      return vector_math_64.Vector4.new(148.0 / 255.0, 0.0 / 255.0, 211.0 / 255.0, 255.0 / 255.0);
    }
    static get deepPink() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 20.0 / 255.0, 147.0 / 255.0, 255.0 / 255.0);
    }
    static get deepSkyBlue() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 191.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get dimGray() {
      return vector_math_64.Vector4.new(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0, 255.0 / 255.0);
    }
    static get dodgerBlue() {
      return vector_math_64.Vector4.new(30.0 / 255.0, 144.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get firebrick() {
      return vector_math_64.Vector4.new(178.0 / 255.0, 34.0 / 255.0, 34.0 / 255.0, 255.0 / 255.0);
    }
    static get floralWhite() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 250.0 / 255.0, 240.0 / 255.0, 255.0 / 255.0);
    }
    static get forestGreen() {
      return vector_math_64.Vector4.new(34.0 / 255.0, 139.0 / 255.0, 34.0 / 255.0, 255.0 / 255.0);
    }
    static get fuchsia() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get gainsboro() {
      return vector_math_64.Vector4.new(220.0 / 255.0, 220.0 / 255.0, 220.0 / 255.0, 255.0 / 255.0);
    }
    static get ghostWhite() {
      return vector_math_64.Vector4.new(248.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get gold() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 215.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get goldenrod() {
      return vector_math_64.Vector4.new(218.0 / 255.0, 165.0 / 255.0, 32.0 / 255.0, 255.0 / 255.0);
    }
    static get gray() {
      return vector_math_64.Vector4.new(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0, 255.0 / 255.0);
    }
    static get green() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get greenYellow() {
      return vector_math_64.Vector4.new(173.0 / 255.0, 255.0 / 255.0, 47.0 / 255.0, 255.0 / 255.0);
    }
    static get honeydew() {
      return vector_math_64.Vector4.new(240.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0, 255.0 / 255.0);
    }
    static get hotPink() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 105.0 / 255.0, 180.0 / 255.0, 255.0 / 255.0);
    }
    static get indianRed() {
      return vector_math_64.Vector4.new(205.0 / 255.0, 92.0 / 255.0, 92.0 / 255.0, 255.0 / 255.0);
    }
    static get indigo() {
      return vector_math_64.Vector4.new(75.0 / 255.0, 0.0 / 255.0, 130.0 / 255.0, 255.0 / 255.0);
    }
    static get ivory() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0, 255.0 / 255.0);
    }
    static get khaki() {
      return vector_math_64.Vector4.new(240.0 / 255.0, 230.0 / 255.0, 140.0 / 255.0, 255.0 / 255.0);
    }
    static get lavender() {
      return vector_math_64.Vector4.new(230.0 / 255.0, 230.0 / 255.0, 250.0 / 255.0, 255.0 / 255.0);
    }
    static get lavenderBlush() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 240.0 / 255.0, 245.0 / 255.0, 255.0 / 255.0);
    }
    static get lawnGreen() {
      return vector_math_64.Vector4.new(124.0 / 255.0, 252.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get lemonChiffon() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 250.0 / 255.0, 205.0 / 255.0, 255.0 / 255.0);
    }
    static get lightBlue() {
      return vector_math_64.Vector4.new(173.0 / 255.0, 216.0 / 255.0, 230.0 / 255.0, 255.0 / 255.0);
    }
    static get lightCoral() {
      return vector_math_64.Vector4.new(240.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0, 255.0 / 255.0);
    }
    static get lightCyan() {
      return vector_math_64.Vector4.new(224.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get lightGoldenrodYellow() {
      return vector_math_64.Vector4.new(250.0 / 255.0, 250.0 / 255.0, 210.0 / 255.0, 255.0 / 255.0);
    }
    static get lightGreen() {
      return vector_math_64.Vector4.new(144.0 / 255.0, 238.0 / 255.0, 144.0 / 255.0, 255.0 / 255.0);
    }
    static get lightGray() {
      return vector_math_64.Vector4.new(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0, 255.0 / 255.0);
    }
    static get lightPink() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 182.0 / 255.0, 193.0 / 255.0, 255.0 / 255.0);
    }
    static get lightSalmon() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 160.0 / 255.0, 122.0 / 255.0, 255.0 / 255.0);
    }
    static get lightSeaGreen() {
      return vector_math_64.Vector4.new(32.0 / 255.0, 178.0 / 255.0, 170.0 / 255.0, 255.0 / 255.0);
    }
    static get lightSkyBlue() {
      return vector_math_64.Vector4.new(135.0 / 255.0, 206.0 / 255.0, 250.0 / 255.0, 255.0 / 255.0);
    }
    static get lightSlateGray() {
      return vector_math_64.Vector4.new(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0, 255.0 / 255.0);
    }
    static get lightSteelBlue() {
      return vector_math_64.Vector4.new(176.0 / 255.0, 196.0 / 255.0, 222.0 / 255.0, 255.0 / 255.0);
    }
    static get lightYellow() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 255.0 / 255.0, 224.0 / 255.0, 255.0 / 255.0);
    }
    static get lime() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get limeGreen() {
      return vector_math_64.Vector4.new(50.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0, 255.0 / 255.0);
    }
    static get linen() {
      return vector_math_64.Vector4.new(250.0 / 255.0, 240.0 / 255.0, 230.0 / 255.0, 255.0 / 255.0);
    }
    static get magenta() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get maroon() {
      return vector_math_64.Vector4.new(128.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumAquamarine() {
      return vector_math_64.Vector4.new(102.0 / 255.0, 205.0 / 255.0, 170.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumBlue() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 0.0 / 255.0, 205.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumOrchid() {
      return vector_math_64.Vector4.new(186.0 / 255.0, 85.0 / 255.0, 211.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumPurple() {
      return vector_math_64.Vector4.new(147.0 / 255.0, 112.0 / 255.0, 219.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumSeaGreen() {
      return vector_math_64.Vector4.new(60.0 / 255.0, 179.0 / 255.0, 113.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumSlateBlue() {
      return vector_math_64.Vector4.new(123.0 / 255.0, 104.0 / 255.0, 238.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumSpringGreen() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 250.0 / 255.0, 154.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumTurquoise() {
      return vector_math_64.Vector4.new(72.0 / 255.0, 209.0 / 255.0, 204.0 / 255.0, 255.0 / 255.0);
    }
    static get mediumVioletRed() {
      return vector_math_64.Vector4.new(199.0 / 255.0, 21.0 / 255.0, 133.0 / 255.0, 255.0 / 255.0);
    }
    static get midnightBlue() {
      return vector_math_64.Vector4.new(25.0 / 255.0, 25.0 / 255.0, 112.0 / 255.0, 255.0 / 255.0);
    }
    static get mintCream() {
      return vector_math_64.Vector4.new(245.0 / 255.0, 255.0 / 255.0, 250.0 / 255.0, 255.0 / 255.0);
    }
    static get mistyRose() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 228.0 / 255.0, 225.0 / 255.0, 255.0 / 255.0);
    }
    static get moccasin() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 228.0 / 255.0, 181.0 / 255.0, 255.0 / 255.0);
    }
    static get navajoWhite() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 222.0 / 255.0, 173.0 / 255.0, 255.0 / 255.0);
    }
    static get navy() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0, 255.0 / 255.0);
    }
    static get oldLace() {
      return vector_math_64.Vector4.new(253.0 / 255.0, 245.0 / 255.0, 230.0 / 255.0, 255.0 / 255.0);
    }
    static get olive() {
      return vector_math_64.Vector4.new(128.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get oliveDrab() {
      return vector_math_64.Vector4.new(107.0 / 255.0, 142.0 / 255.0, 35.0 / 255.0, 255.0 / 255.0);
    }
    static get orange() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 165.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get orangeRed() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 69.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get orchid() {
      return vector_math_64.Vector4.new(218.0 / 255.0, 112.0 / 255.0, 214.0 / 255.0, 255.0 / 255.0);
    }
    static get paleGoldenrod() {
      return vector_math_64.Vector4.new(238.0 / 255.0, 232.0 / 255.0, 170.0 / 255.0, 255.0 / 255.0);
    }
    static get paleGreen() {
      return vector_math_64.Vector4.new(152.0 / 255.0, 251.0 / 255.0, 152.0 / 255.0, 255.0 / 255.0);
    }
    static get paleTurquoise() {
      return vector_math_64.Vector4.new(175.0 / 255.0, 238.0 / 255.0, 238.0 / 255.0, 255.0 / 255.0);
    }
    static get paleVioletRed() {
      return vector_math_64.Vector4.new(219.0 / 255.0, 112.0 / 255.0, 147.0 / 255.0, 255.0 / 255.0);
    }
    static get papayaWhip() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 239.0 / 255.0, 213.0 / 255.0, 255.0 / 255.0);
    }
    static get peachPuff() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 218.0 / 255.0, 185.0 / 255.0, 255.0 / 255.0);
    }
    static get peru() {
      return vector_math_64.Vector4.new(205.0 / 255.0, 133.0 / 255.0, 63.0 / 255.0, 255.0 / 255.0);
    }
    static get pink() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 192.0 / 255.0, 203.0 / 255.0, 255.0 / 255.0);
    }
    static get plum() {
      return vector_math_64.Vector4.new(221.0 / 255.0, 160.0 / 255.0, 221.0 / 255.0, 255.0 / 255.0);
    }
    static get powderBlue() {
      return vector_math_64.Vector4.new(176.0 / 255.0, 224.0 / 255.0, 230.0 / 255.0, 255.0 / 255.0);
    }
    static get purple() {
      return vector_math_64.Vector4.new(128.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0, 255.0 / 255.0);
    }
    static get red() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get rosyBrown() {
      return vector_math_64.Vector4.new(188.0 / 255.0, 143.0 / 255.0, 143.0 / 255.0, 255.0 / 255.0);
    }
    static get royalBlue() {
      return vector_math_64.Vector4.new(65.0 / 255.0, 105.0 / 255.0, 225.0 / 255.0, 255.0 / 255.0);
    }
    static get saddleBrown() {
      return vector_math_64.Vector4.new(139.0 / 255.0, 69.0 / 255.0, 19.0 / 255.0, 255.0 / 255.0);
    }
    static get salmon() {
      return vector_math_64.Vector4.new(250.0 / 255.0, 128.0 / 255.0, 114.0 / 255.0, 255.0 / 255.0);
    }
    static get sandyBrown() {
      return vector_math_64.Vector4.new(244.0 / 255.0, 164.0 / 255.0, 96.0 / 255.0, 255.0 / 255.0);
    }
    static get seaGreen() {
      return vector_math_64.Vector4.new(46.0 / 255.0, 139.0 / 255.0, 87.0 / 255.0, 255.0 / 255.0);
    }
    static get seaShell() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 245.0 / 255.0, 238.0 / 255.0, 255.0 / 255.0);
    }
    static get sienna() {
      return vector_math_64.Vector4.new(160.0 / 255.0, 82.0 / 255.0, 45.0 / 255.0, 255.0 / 255.0);
    }
    static get silver() {
      return vector_math_64.Vector4.new(192.0 / 255.0, 192.0 / 255.0, 192.0 / 255.0, 255.0 / 255.0);
    }
    static get skyBlue() {
      return vector_math_64.Vector4.new(135.0 / 255.0, 206.0 / 255.0, 235.0 / 255.0, 255.0 / 255.0);
    }
    static get slateBlue() {
      return vector_math_64.Vector4.new(106.0 / 255.0, 90.0 / 255.0, 205.0 / 255.0, 255.0 / 255.0);
    }
    static get slateGray() {
      return vector_math_64.Vector4.new(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0, 255.0 / 255.0);
    }
    static get snow() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 250.0 / 255.0, 250.0 / 255.0, 255.0 / 255.0);
    }
    static get springGreen() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 255.0 / 255.0, 127.0 / 255.0, 255.0 / 255.0);
    }
    static get steelBlue() {
      return vector_math_64.Vector4.new(70.0 / 255.0, 130.0 / 255.0, 180.0 / 255.0, 255.0 / 255.0);
    }
    static get tan() {
      return vector_math_64.Vector4.new(210.0 / 255.0, 180.0 / 255.0, 140.0 / 255.0, 255.0 / 255.0);
    }
    static get teal() {
      return vector_math_64.Vector4.new(0.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0, 255.0 / 255.0);
    }
    static get thistle() {
      return vector_math_64.Vector4.new(216.0 / 255.0, 191.0 / 255.0, 216.0 / 255.0, 255.0 / 255.0);
    }
    static get tomato() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 99.0 / 255.0, 71.0 / 255.0, 255.0 / 255.0);
    }
    static get turquoise() {
      return vector_math_64.Vector4.new(64.0 / 255.0, 224.0 / 255.0, 208.0 / 255.0, 255.0 / 255.0);
    }
    static get violet() {
      return vector_math_64.Vector4.new(238.0 / 255.0, 130.0 / 255.0, 238.0 / 255.0, 255.0 / 255.0);
    }
    static get wheat() {
      return vector_math_64.Vector4.new(245.0 / 255.0, 222.0 / 255.0, 179.0 / 255.0, 255.0 / 255.0);
    }
    static get white() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0);
    }
    static get whiteSmoke() {
      return vector_math_64.Vector4.new(245.0 / 255.0, 245.0 / 255.0, 245.0 / 255.0, 255.0 / 255.0);
    }
    static get yellow() {
      return vector_math_64.Vector4.new(255.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0);
    }
    static get yellowGreen() {
      return vector_math_64.Vector4.new(154.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0, 255.0 / 255.0);
    }
  };
  (vector_math_64.Colors.__ = function() {
    ;
  }).prototype = vector_math_64.Colors.prototype;
  dart.addTypeTests(vector_math_64.Colors);
  dart.addTypeCaches(vector_math_64.Colors);
  dart.setLibraryUri(vector_math_64.Colors, I[1]);
  dart.defineLazy(vector_math_64.Colors, {
    /*vector_math_64.Colors._hexStringFullRegex*/get _hexStringFullRegex() {
      return core.RegExp.new("\\#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})(?:([0-9a-f]{2}))?", {caseSensitive: false});
    },
    /*vector_math_64.Colors._hexStringSmallRegex*/get _hexStringSmallRegex() {
      return core.RegExp.new("\\#?([0-9a-f])([0-9a-f])([0-9a-f])(?:([0-9a-f]))?", {caseSensitive: false});
    }
  }, false);
  vector_math_64.Frustum = class Frustum extends core.Object {
    get plane0() {
      return this[S._plane0];
    }
    get plane1() {
      return this[S._plane1];
    }
    get plane2() {
      return this[S._plane2];
    }
    get plane3() {
      return this[S._plane3];
    }
    get plane4() {
      return this[S._plane4];
    }
    get plane5() {
      return this[S._plane5];
    }
    static copy(other) {
      let t0;
      if (other == null) dart.nullFailed(I[4], 44, 32, "other");
      t0 = new vector_math_64.Frustum.new();
      return (() => {
        t0.copyFrom(other);
        return t0;
      })();
    }
    static matrix(matrix) {
      let t0;
      if (matrix == null) dart.nullFailed(I[4], 47, 34, "matrix");
      t0 = new vector_math_64.Frustum.new();
      return (() => {
        t0.setFromMatrix(matrix);
        return t0;
      })();
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[4], 50, 25, "other");
      this[S._plane0].copyFrom(other[S._plane0]);
      this[S._plane1].copyFrom(other[S._plane1]);
      this[S._plane2].copyFrom(other[S._plane2]);
      this[S._plane3].copyFrom(other[S._plane3]);
      this[S._plane4].copyFrom(other[S._plane4]);
      this[S._plane5].copyFrom(other[S._plane5]);
    }
    setFromMatrix(matrix) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3;
      if (matrix == null) dart.nullFailed(I[4], 60, 30, "matrix");
      let me = matrix.storage;
      let me0 = me[S.$_get](0);
      let me1 = me[S.$_get](1);
      let me2 = me[S.$_get](2);
      let me3 = me[S.$_get](3);
      let me4 = me[S.$_get](4);
      let me5 = me[S.$_get](5);
      let me6 = me[S.$_get](6);
      let me7 = me[S.$_get](7);
      let me8 = me[S.$_get](8);
      let me9 = me[S.$_get](9);
      let me10 = me[S.$_get](10);
      let me11 = me[S.$_get](11);
      let me12 = me[S.$_get](12);
      let me13 = me[S.$_get](13);
      let me14 = me[S.$_get](14);
      let me15 = me[S.$_get](15);
      t0 = this[S._plane0];
      (() => {
        t0.setFromComponents(dart.notNull(me3) - dart.notNull(me0), dart.notNull(me7) - dart.notNull(me4), dart.notNull(me11) - dart.notNull(me8), dart.notNull(me15) - dart.notNull(me12));
        t0.normalize();
        return t0;
      })();
      t0$ = this[S._plane1];
      (() => {
        t0$.setFromComponents(dart.notNull(me3) + dart.notNull(me0), dart.notNull(me7) + dart.notNull(me4), dart.notNull(me11) + dart.notNull(me8), dart.notNull(me15) + dart.notNull(me12));
        t0$.normalize();
        return t0$;
      })();
      t0$0 = this[S._plane2];
      (() => {
        t0$0.setFromComponents(dart.notNull(me3) + dart.notNull(me1), dart.notNull(me7) + dart.notNull(me5), dart.notNull(me11) + dart.notNull(me9), dart.notNull(me15) + dart.notNull(me13));
        t0$0.normalize();
        return t0$0;
      })();
      t0$1 = this[S._plane3];
      (() => {
        t0$1.setFromComponents(dart.notNull(me3) - dart.notNull(me1), dart.notNull(me7) - dart.notNull(me5), dart.notNull(me11) - dart.notNull(me9), dart.notNull(me15) - dart.notNull(me13));
        t0$1.normalize();
        return t0$1;
      })();
      t0$2 = this[S._plane4];
      (() => {
        t0$2.setFromComponents(dart.notNull(me3) - dart.notNull(me2), dart.notNull(me7) - dart.notNull(me6), dart.notNull(me11) - dart.notNull(me10), dart.notNull(me15) - dart.notNull(me14));
        t0$2.normalize();
        return t0$2;
      })();
      t0$3 = this[S._plane5];
      (() => {
        t0$3.setFromComponents(dart.notNull(me3) + dart.notNull(me2), dart.notNull(me7) + dart.notNull(me6), dart.notNull(me11) + dart.notNull(me10), dart.notNull(me15) + dart.notNull(me14));
        t0$3.normalize();
        return t0$3;
      })();
    }
    containsVector3(point) {
      if (point == null) dart.nullFailed(I[4], 88, 32, "point");
      if (dart.notNull(this[S._plane0].distanceToVector3(point)) < 0.0) {
        return false;
      }
      if (dart.notNull(this[S._plane1].distanceToVector3(point)) < 0.0) {
        return false;
      }
      if (dart.notNull(this[S._plane2].distanceToVector3(point)) < 0.0) {
        return false;
      }
      if (dart.notNull(this[S._plane3].distanceToVector3(point)) < 0.0) {
        return false;
      }
      if (dart.notNull(this[S._plane4].distanceToVector3(point)) < 0.0) {
        return false;
      }
      if (dart.notNull(this[S._plane5].distanceToVector3(point)) < 0.0) {
        return false;
      }
      return true;
    }
    intersectsWithAabb3(aabb) {
      if (aabb == null) dart.nullFailed(I[4], 117, 34, "aabb");
      if (dart.test(this[S._intersectsWithAabb3CheckPlane](aabb, this[S._plane0]))) {
        return false;
      }
      if (dart.test(this[S._intersectsWithAabb3CheckPlane](aabb, this[S._plane1]))) {
        return false;
      }
      if (dart.test(this[S._intersectsWithAabb3CheckPlane](aabb, this[S._plane2]))) {
        return false;
      }
      if (dart.test(this[S._intersectsWithAabb3CheckPlane](aabb, this[S._plane3]))) {
        return false;
      }
      if (dart.test(this[S._intersectsWithAabb3CheckPlane](aabb, this[S._plane4]))) {
        return false;
      }
      if (dart.test(this[S._intersectsWithAabb3CheckPlane](aabb, this[S._plane5]))) {
        return false;
      }
      return true;
    }
    intersectsWithSphere(sphere) {
      if (sphere == null) dart.nullFailed(I[4], 146, 36, "sphere");
      let negativeRadius = -dart.notNull(sphere.radius);
      let center = sphere.center;
      if (dart.notNull(this[S._plane0].distanceToVector3(center)) < negativeRadius) {
        return false;
      }
      if (dart.notNull(this[S._plane1].distanceToVector3(center)) < negativeRadius) {
        return false;
      }
      if (dart.notNull(this[S._plane2].distanceToVector3(center)) < negativeRadius) {
        return false;
      }
      if (dart.notNull(this[S._plane3].distanceToVector3(center)) < negativeRadius) {
        return false;
      }
      if (dart.notNull(this[S._plane4].distanceToVector3(center)) < negativeRadius) {
        return false;
      }
      if (dart.notNull(this[S._plane5].distanceToVector3(center)) < negativeRadius) {
        return false;
      }
      return true;
    }
    calculateCorners(corner0, corner1, corner2, corner3, corner4, corner5, corner6, corner7) {
      if (corner0 == null) dart.nullFailed(I[4], 180, 15, "corner0");
      if (corner1 == null) dart.nullFailed(I[4], 181, 15, "corner1");
      if (corner2 == null) dart.nullFailed(I[4], 182, 15, "corner2");
      if (corner3 == null) dart.nullFailed(I[4], 183, 15, "corner3");
      if (corner4 == null) dart.nullFailed(I[4], 184, 15, "corner4");
      if (corner5 == null) dart.nullFailed(I[4], 185, 15, "corner5");
      if (corner6 == null) dart.nullFailed(I[4], 186, 15, "corner6");
      if (corner7 == null) dart.nullFailed(I[4], 187, 15, "corner7");
      vector_math_64.Plane.intersection(this[S._plane0], this[S._plane2], this[S._plane4], corner0);
      vector_math_64.Plane.intersection(this[S._plane0], this[S._plane3], this[S._plane4], corner1);
      vector_math_64.Plane.intersection(this[S._plane0], this[S._plane3], this[S._plane5], corner2);
      vector_math_64.Plane.intersection(this[S._plane0], this[S._plane2], this[S._plane5], corner3);
      vector_math_64.Plane.intersection(this[S._plane1], this[S._plane2], this[S._plane4], corner4);
      vector_math_64.Plane.intersection(this[S._plane1], this[S._plane3], this[S._plane4], corner5);
      vector_math_64.Plane.intersection(this[S._plane1], this[S._plane3], this[S._plane5], corner6);
      vector_math_64.Plane.intersection(this[S._plane1], this[S._plane2], this[S._plane5], corner7);
    }
    [S._intersectsWithAabb3CheckPlane](aabb, plane) {
      if (aabb == null) dart.nullFailed(I[4], 198, 45, "aabb");
      if (plane == null) dart.nullFailed(I[4], 198, 57, "plane");
      let outPx = null;
      let outPy = null;
      let outPz = null;
      let outNx = null;
      let outNy = null;
      let outNz = null;
      if (dart.notNull(plane[S._normal].x) < 0.0) {
        outPx = aabb.min.x;
        outNx = aabb.max.x;
      } else {
        outPx = aabb.max.x;
        outNx = aabb.min.x;
      }
      if (dart.notNull(plane[S._normal].y) < 0.0) {
        outPy = aabb.min.y;
        outNy = aabb.max.y;
      } else {
        outPy = aabb.max.y;
        outNy = aabb.min.y;
      }
      if (dart.notNull(plane[S._normal].z) < 0.0) {
        outPz = aabb.min.z;
        outNz = aabb.max.z;
      } else {
        outPz = aabb.max.z;
        outNz = aabb.min.z;
      }
      let d1 = dart.notNull(plane[S._normal].x) * dart.notNull(outPx) + dart.notNull(plane[S._normal].y) * dart.notNull(outPy) + dart.notNull(plane[S._normal].z) * dart.notNull(outPz) + dart.notNull(plane.constant);
      let d2 = dart.notNull(plane[S._normal].x) * dart.notNull(outNx) + dart.notNull(plane[S._normal].y) * dart.notNull(outNy) + dart.notNull(plane[S._normal].z) * dart.notNull(outNz) + dart.notNull(plane.constant);
      return d1 < 0 && d2 < 0;
    }
  };
  (vector_math_64.Frustum.new = function() {
    this[S._plane0] = new vector_math_64.Plane.new();
    this[S._plane1] = new vector_math_64.Plane.new();
    this[S._plane2] = new vector_math_64.Plane.new();
    this[S._plane3] = new vector_math_64.Plane.new();
    this[S._plane4] = new vector_math_64.Plane.new();
    this[S._plane5] = new vector_math_64.Plane.new();
    ;
  }).prototype = vector_math_64.Frustum.prototype;
  dart.addTypeTests(vector_math_64.Frustum);
  dart.addTypeCaches(vector_math_64.Frustum);
  dart.setMethodSignature(vector_math_64.Frustum, () => ({
    __proto__: dart.getMethods(vector_math_64.Frustum.__proto__),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Frustum]),
    setFromMatrix: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    containsVector3: dart.fnType(core.bool, [vector_math_64.Vector3]),
    intersectsWithAabb3: dart.fnType(core.bool, [vector_math_64.Aabb3]),
    intersectsWithSphere: dart.fnType(core.bool, [vector_math_64.Sphere]),
    calculateCorners: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3]),
    [S._intersectsWithAabb3CheckPlane]: dart.fnType(core.bool, [vector_math_64.Aabb3, vector_math_64.Plane])
  }));
  dart.setGetterSignature(vector_math_64.Frustum, () => ({
    __proto__: dart.getGetters(vector_math_64.Frustum.__proto__),
    plane0: vector_math_64.Plane,
    plane1: vector_math_64.Plane,
    plane2: vector_math_64.Plane,
    plane3: vector_math_64.Plane,
    plane4: vector_math_64.Plane,
    plane5: vector_math_64.Plane
  }));
  dart.setLibraryUri(vector_math_64.Frustum, I[1]);
  dart.setFieldSignature(vector_math_64.Frustum, () => ({
    __proto__: dart.getFields(vector_math_64.Frustum.__proto__),
    [S._plane0]: dart.finalFieldType(vector_math_64.Plane),
    [S._plane1]: dart.finalFieldType(vector_math_64.Plane),
    [S._plane2]: dart.finalFieldType(vector_math_64.Plane),
    [S._plane3]: dart.finalFieldType(vector_math_64.Plane),
    [S._plane4]: dart.finalFieldType(vector_math_64.Plane),
    [S._plane5]: dart.finalFieldType(vector_math_64.Plane)
  }));
  vector_math_64.IntersectionResult = class IntersectionResult extends core.Object {
    get axis() {
      return this[S.axis];
    }
    set axis(value) {
      super.axis = value;
    }
    get depth() {
      return this[S._depth];
    }
  };
  (vector_math_64.IntersectionResult.new = function() {
    this[S._depth] = null;
    this[S.axis] = new vector_math_64.Vector3.zero();
    ;
  }).prototype = vector_math_64.IntersectionResult.prototype;
  dart.addTypeTests(vector_math_64.IntersectionResult);
  dart.addTypeCaches(vector_math_64.IntersectionResult);
  dart.setGetterSignature(vector_math_64.IntersectionResult, () => ({
    __proto__: dart.getGetters(vector_math_64.IntersectionResult.__proto__),
    depth: dart.nullable(core.double)
  }));
  dart.setLibraryUri(vector_math_64.IntersectionResult, I[1]);
  dart.setFieldSignature(vector_math_64.IntersectionResult, () => ({
    __proto__: dart.getFields(vector_math_64.IntersectionResult.__proto__),
    [S._depth]: dart.fieldType(dart.nullable(core.double)),
    axis: dart.finalFieldType(vector_math_64.Vector3)
  }));
  vector_math_64.Matrix2 = class Matrix2 extends core.Object {
    get storage() {
      return this[S._m2storage];
    }
    static solve(A, x, b) {
      let t0;
      if (A == null) dart.nullFailed(I[5], 16, 29, "A");
      if (x == null) dart.nullFailed(I[5], 16, 40, "x");
      if (b == null) dart.nullFailed(I[5], 16, 51, "b");
      let a11 = A.entry(0, 0);
      let a12 = A.entry(0, 1);
      let a21 = A.entry(1, 0);
      let a22 = A.entry(1, 1);
      let bx = b.x;
      let by = b.y;
      let det = dart.notNull(a11) * dart.notNull(a22) - dart.notNull(a12) * dart.notNull(a21);
      if (det !== 0.0) {
        det = 1.0 / det;
      }
      t0 = x;
      (() => {
        t0.x = det * (dart.notNull(a22) * dart.notNull(bx) - dart.notNull(a12) * dart.notNull(by));
        t0.y = det * (dart.notNull(a11) * dart.notNull(by) - dart.notNull(a21) * dart.notNull(bx));
        return t0;
      })();
    }
    index(row, col) {
      if (row == null) dart.nullFailed(I[5], 35, 17, "row");
      if (col == null) dart.nullFailed(I[5], 35, 26, "col");
      return dart.notNull(col) * 2 + dart.notNull(row);
    }
    entry(row, col) {
      if (row == null) dart.nullFailed(I[5], 38, 20, "row");
      if (col == null) dart.nullFailed(I[5], 38, 29, "col");
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed(null, I[5], 39, 12, "(row >= 0) && (row < dimension)");
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed(null, I[5], 40, 12, "(col >= 0) && (col < dimension)");
      return this[S._m2storage][S.$_get](this.index(row, col));
    }
    setEntry(row, col, v) {
      if (row == null) dart.nullFailed(I[5], 46, 21, "row");
      if (col == null) dart.nullFailed(I[5], 46, 30, "col");
      if (v == null) dart.nullFailed(I[5], 46, 42, "v");
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed(null, I[5], 47, 12, "(row >= 0) && (row < dimension)");
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed(null, I[5], 48, 12, "(col >= 0) && (col < dimension)");
      this[S._m2storage][S.$_set](this.index(row, col), v);
    }
    static new(arg0, arg1, arg2, arg3) {
      let t0;
      if (arg0 == null) dart.nullFailed(I[5], 54, 26, "arg0");
      if (arg1 == null) dart.nullFailed(I[5], 54, 39, "arg1");
      if (arg2 == null) dart.nullFailed(I[5], 54, 52, "arg2");
      if (arg3 == null) dart.nullFailed(I[5], 54, 65, "arg3");
      t0 = new vector_math_64.Matrix2.zero();
      return (() => {
        t0.setValues(arg0, arg1, arg2, arg3);
        return t0;
      })();
    }
    static fromList(values) {
      let t0;
      if (values == null) dart.nullFailed(I[5], 58, 41, "values");
      t0 = new vector_math_64.Matrix2.zero();
      return (() => {
        t0.setValues(values[S.$_get](0), values[S.$_get](1), values[S.$_get](2), values[S.$_get](3));
        return t0;
      })();
    }
    static identity() {
      let t0;
      t0 = new vector_math_64.Matrix2.zero();
      return (() => {
        t0.setIdentity();
        return t0;
      })();
    }
    static copy(other) {
      let t0;
      if (other == null) dart.nullFailed(I[5], 68, 32, "other");
      t0 = new vector_math_64.Matrix2.zero();
      return (() => {
        t0.setFrom(other);
        return t0;
      })();
    }
    static columns(arg0, arg1) {
      let t0;
      if (arg0 == null) dart.nullFailed(I[5], 71, 35, "arg0");
      if (arg1 == null) dart.nullFailed(I[5], 71, 49, "arg1");
      t0 = new vector_math_64.Matrix2.zero();
      return (() => {
        t0.setColumns(arg0, arg1);
        return t0;
      })();
    }
    static outer(u, v) {
      let t0;
      if (u == null) dart.nullFailed(I[5], 75, 33, "u");
      if (v == null) dart.nullFailed(I[5], 75, 44, "v");
      t0 = new vector_math_64.Matrix2.zero();
      return (() => {
        t0.setOuter(u, v);
        return t0;
      })();
    }
    static rotation(radians) {
      let t0;
      if (radians == null) dart.nullFailed(I[5], 78, 35, "radians");
      t0 = new vector_math_64.Matrix2.zero();
      return (() => {
        t0.setRotation(radians);
        return t0;
      })();
    }
    setValues(arg0, arg1, arg2, arg3) {
      if (arg0 == null) dart.nullFailed(I[5], 82, 25, "arg0");
      if (arg1 == null) dart.nullFailed(I[5], 82, 38, "arg1");
      if (arg2 == null) dart.nullFailed(I[5], 82, 51, "arg2");
      if (arg3 == null) dart.nullFailed(I[5], 82, 64, "arg3");
      this[S._m2storage][S.$_set](3, arg3);
      this[S._m2storage][S.$_set](2, arg2);
      this[S._m2storage][S.$_set](1, arg1);
      this[S._m2storage][S.$_set](0, arg0);
    }
    setColumns(arg0, arg1) {
      if (arg0 == null) dart.nullFailed(I[5], 90, 27, "arg0");
      if (arg1 == null) dart.nullFailed(I[5], 90, 41, "arg1");
      let arg0Storage = arg0[S._v2storage];
      let arg1Storage = arg1[S._v2storage];
      this[S._m2storage][S.$_set](0, arg0Storage[S.$_get](0));
      this[S._m2storage][S.$_set](1, arg0Storage[S.$_get](1));
      this[S._m2storage][S.$_set](2, arg1Storage[S.$_get](0));
      this[S._m2storage][S.$_set](3, arg1Storage[S.$_get](1));
    }
    setFrom(arg) {
      if (arg == null) dart.nullFailed(I[5], 100, 24, "arg");
      let argStorage = arg[S._m2storage];
      this[S._m2storage][S.$_set](3, argStorage[S.$_get](3));
      this[S._m2storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._m2storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._m2storage][S.$_set](0, argStorage[S.$_get](0));
    }
    setOuter(u, v) {
      if (u == null) dart.nullFailed(I[5], 109, 25, "u");
      if (v == null) dart.nullFailed(I[5], 109, 36, "v");
      let uStorage = u[S._v2storage];
      let vStorage = v[S._v2storage];
      this[S._m2storage][S.$_set](0, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m2storage][S.$_set](1, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m2storage][S.$_set](2, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m2storage][S.$_set](3, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](1)));
    }
    splatDiagonal(arg) {
      if (arg == null) dart.nullFailed(I[5], 119, 29, "arg");
      this[S._m2storage][S.$_set](0, arg);
      this[S._m2storage][S.$_set](3, arg);
    }
    setDiagonal(arg) {
      if (arg == null) dart.nullFailed(I[5], 125, 28, "arg");
      let argStorage = arg[S._v2storage];
      this[S._m2storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._m2storage][S.$_set](3, argStorage[S.$_get](1));
    }
    toString() {
      return "[0] " + dart.str(this.getRow(0)) + "\n[1] " + dart.str(this.getRow(1)) + "\n";
    }
    get dimension() {
      return 2;
    }
    _get(i) {
      if (i == null) dart.nullFailed(I[5], 139, 26, "i");
      return this[S._m2storage][S.$_get](i);
    }
    _set(i, v$) {
      let v = v$;
      if (i == null) dart.nullFailed(I[5], 142, 25, "i");
      if (v == null) dart.nullFailed(I[5], 142, 35, "v");
      this[S._m2storage][S.$_set](i, v);
      return v$;
    }
    _equals(other) {
      if (other == null) return false;
      return vector_math_64.Matrix2.is(other) && this[S._m2storage][S.$_get](0) == other[S._m2storage][S.$_get](0) && this[S._m2storage][S.$_get](1) == other[S._m2storage][S.$_get](1) && this[S._m2storage][S.$_get](2) == other[S._m2storage][S.$_get](2) && this[S._m2storage][S.$_get](3) == other[S._m2storage][S.$_get](3);
    }
    get hashCode() {
      return hash.hashObjects(this[S._m2storage]);
    }
    get row0() {
      return this.getRow(0);
    }
    get row1() {
      return this.getRow(1);
    }
    set row0(arg) {
      if (arg == null) dart.nullFailed(I[5], 165, 20, "arg");
      return this.setRow(0, arg);
    }
    set row1(arg) {
      if (arg == null) dart.nullFailed(I[5], 168, 20, "arg");
      return this.setRow(1, arg);
    }
    setRow(row, arg) {
      if (row == null) dart.nullFailed(I[5], 171, 19, "row");
      if (arg == null) dart.nullFailed(I[5], 171, 32, "arg");
      let argStorage = arg[S._v2storage];
      this[S._m2storage][S.$_set](this.index(row, 0), argStorage[S.$_get](0));
      this[S._m2storage][S.$_set](this.index(row, 1), argStorage[S.$_get](1));
    }
    getRow(row) {
      if (row == null) dart.nullFailed(I[5], 178, 22, "row");
      let r = new vector_math_64.Vector2.zero();
      let rStorage = r[S._v2storage];
      rStorage[S.$_set](0, this[S._m2storage][S.$_get](this.index(row, 0)));
      rStorage[S.$_set](1, this[S._m2storage][S.$_get](this.index(row, 1)));
      return r;
    }
    setColumn(column, arg) {
      if (column == null) dart.nullFailed(I[5], 187, 22, "column");
      if (arg == null) dart.nullFailed(I[5], 187, 38, "arg");
      let argStorage = arg[S._v2storage];
      let entry = dart.notNull(column) * 2;
      this[S._m2storage][S.$_set](entry + 1, argStorage[S.$_get](1));
      this[S._m2storage][S.$_set](entry + 0, argStorage[S.$_get](0));
    }
    getColumn(column) {
      if (column == null) dart.nullFailed(I[5], 195, 25, "column");
      let r = new vector_math_64.Vector2.zero();
      let entry = dart.notNull(column) * 2;
      let rStorage = r[S._v2storage];
      rStorage[S.$_set](1, this[S._m2storage][S.$_get](entry + 1));
      rStorage[S.$_set](0, this[S._m2storage][S.$_get](entry + 0));
      return r;
    }
    clone() {
      return vector_math_64.Matrix2.copy(this);
    }
    copyInto(arg) {
      if (arg == null) dart.nullFailed(I[5], 208, 28, "arg");
      let argStorage = arg[S._m2storage];
      argStorage[S.$_set](0, this[S._m2storage][S.$_get](0));
      argStorage[S.$_set](1, this[S._m2storage][S.$_get](1));
      argStorage[S.$_set](2, this[S._m2storage][S.$_get](2));
      argStorage[S.$_set](3, this[S._m2storage][S.$_get](3));
      return arg;
    }
    ['*'](arg) {
      if (typeof arg == 'number') {
        return this.scaled(arg);
      }
      if (vector_math_64.Vector2.is(arg)) {
        return this.transformed(arg);
      }
      if (vector_math_64.Matrix2.is(arg)) {
        return this.multiplied(arg);
      }
      dart.throw(new core.ArgumentError.new(arg));
    }
    ['+'](arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[5], 232, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.add(arg);
        return t0;
      })();
    }
    ['-'](arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[5], 235, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.sub(arg);
        return t0;
      })();
    }
    _negate() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.negate();
        return t0;
      })();
    }
    setZero() {
      this[S._m2storage][S.$_set](0, 0.0);
      this[S._m2storage][S.$_set](1, 0.0);
      this[S._m2storage][S.$_set](2, 0.0);
      this[S._m2storage][S.$_set](3, 0.0);
    }
    setIdentity() {
      this[S._m2storage][S.$_set](0, 1.0);
      this[S._m2storage][S.$_set](1, 0.0);
      this[S._m2storage][S.$_set](2, 0.0);
      this[S._m2storage][S.$_set](3, 1.0);
    }
    transposed() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.transpose();
        return t0;
      })();
    }
    transpose() {
      let temp = this[S._m2storage][S.$_get](2);
      this[S._m2storage][S.$_set](2, this[S._m2storage][S.$_get](1));
      this[S._m2storage][S.$_set](1, temp);
    }
    absolute() {
      let r = new vector_math_64.Matrix2.zero();
      let rStorage = r[S._m2storage];
      rStorage[S.$_set](0, this[S._m2storage][S.$_get](0)[S.$abs]());
      rStorage[S.$_set](1, this[S._m2storage][S.$_get](1)[S.$abs]());
      rStorage[S.$_set](2, this[S._m2storage][S.$_get](2)[S.$abs]());
      rStorage[S.$_set](3, this[S._m2storage][S.$_get](3)[S.$abs]());
      return r;
    }
    determinant() {
      return dart.notNull(this[S._m2storage][S.$_get](0)) * dart.notNull(this[S._m2storage][S.$_get](3)) - dart.notNull(this[S._m2storage][S.$_get](1)) * dart.notNull(this[S._m2storage][S.$_get](2));
    }
    dotRow(i, v) {
      if (i == null) dart.nullFailed(I[5], 281, 21, "i");
      if (v == null) dart.nullFailed(I[5], 281, 32, "v");
      let vStorage = v[S._v2storage];
      return dart.notNull(this[S._m2storage][S.$_get](i)) * dart.notNull(vStorage[S.$_get](0)) + dart.notNull(this[S._m2storage][S.$_get](2 + dart.notNull(i))) * dart.notNull(vStorage[S.$_get](1));
    }
    dotColumn(j, v) {
      if (j == null) dart.nullFailed(I[5], 287, 24, "j");
      if (v == null) dart.nullFailed(I[5], 287, 35, "v");
      let vStorage = v[S._v2storage];
      return dart.notNull(this[S._m2storage][S.$_get](dart.notNull(j) * 2)) * dart.notNull(vStorage[S.$_get](0)) + dart.notNull(this[S._m2storage][S.$_get](dart.notNull(j) * 2 + 1)) * dart.notNull(vStorage[S.$_get](1));
    }
    trace() {
      let t = 0.0;
      t = t + dart.notNull(this[S._m2storage][S.$_get](0));
      t = t + dart.notNull(this[S._m2storage][S.$_get](3));
      return t;
    }
    infinityNorm() {
      let norm = 0.0;
      {
        let rowNorm = 0.0;
        rowNorm = rowNorm + this[S._m2storage][S.$_get](0)[S.$abs]();
        rowNorm = rowNorm + this[S._m2storage][S.$_get](1)[S.$abs]();
        norm = rowNorm > norm ? rowNorm : norm;
      }
      {
        let rowNorm = 0.0;
        rowNorm = rowNorm + this[S._m2storage][S.$_get](2)[S.$abs]();
        rowNorm = rowNorm + this[S._m2storage][S.$_get](3)[S.$abs]();
        norm = rowNorm > norm ? rowNorm : norm;
      }
      return norm;
    }
    relativeError(correct) {
      if (correct == null) dart.nullFailed(I[5], 320, 32, "correct");
      let diff = correct['-'](this);
      let correctNorm = correct.infinityNorm();
      let diff_norm = diff.infinityNorm();
      return dart.notNull(diff_norm) / dart.notNull(correctNorm);
    }
    absoluteError(correct) {
      if (correct == null) dart.nullFailed(I[5], 328, 32, "correct");
      let this_norm = this.infinityNorm();
      let correct_norm = correct.infinityNorm();
      let diff_norm = (dart.notNull(this_norm) - dart.notNull(correct_norm))[S.$abs]();
      return diff_norm;
    }
    invert() {
      let det = this.determinant();
      if (det === 0.0) {
        return 0.0;
      }
      let invDet = 1.0 / dart.notNull(det);
      let temp = this[S._m2storage][S.$_get](0);
      this[S._m2storage][S.$_set](0, dart.notNull(this[S._m2storage][S.$_get](3)) * invDet);
      this[S._m2storage][S.$_set](1, -dart.notNull(this[S._m2storage][S.$_get](1)) * invDet);
      this[S._m2storage][S.$_set](2, -dart.notNull(this[S._m2storage][S.$_get](2)) * invDet);
      this[S._m2storage][S.$_set](3, dart.notNull(temp) * invDet);
      return det;
    }
    copyInverse(arg) {
      if (arg == null) dart.nullFailed(I[5], 351, 30, "arg");
      let det = arg.determinant();
      if (det === 0.0) {
        this.setFrom(arg);
        return 0.0;
      }
      let invDet = 1.0 / dart.notNull(det);
      let argStorage = arg[S._m2storage];
      this[S._m2storage][S.$_set](0, dart.notNull(argStorage[S.$_get](3)) * invDet);
      this[S._m2storage][S.$_set](1, -dart.notNull(argStorage[S.$_get](1)) * invDet);
      this[S._m2storage][S.$_set](2, -dart.notNull(argStorage[S.$_get](2)) * invDet);
      this[S._m2storage][S.$_set](3, dart.notNull(argStorage[S.$_get](0)) * invDet);
      return det;
    }
    setRotation(radians) {
      if (radians == null) dart.nullFailed(I[5], 367, 27, "radians");
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[S._m2storage][S.$_set](0, c);
      this[S._m2storage][S.$_set](1, s);
      this[S._m2storage][S.$_set](2, -s);
      this[S._m2storage][S.$_set](3, c);
    }
    scaleAdjoint(scale) {
      if (scale == null) dart.nullFailed(I[5], 377, 28, "scale");
      let temp = this[S._m2storage][S.$_get](0);
      this[S._m2storage][S.$_set](0, dart.notNull(this[S._m2storage][S.$_get](3)) * dart.notNull(scale));
      this[S._m2storage][S.$_set](2, -dart.notNull(this[S._m2storage][S.$_get](2)) * dart.notNull(scale));
      this[S._m2storage][S.$_set](1, -dart.notNull(this[S._m2storage][S.$_get](1)) * dart.notNull(scale));
      this[S._m2storage][S.$_set](3, dart.notNull(temp) * dart.notNull(scale));
    }
    scale(scale) {
      if (scale == null) dart.nullFailed(I[5], 386, 21, "scale");
      this[S._m2storage][S.$_set](0, dart.notNull(this[S._m2storage][S.$_get](0)) * dart.notNull(scale));
      this[S._m2storage][S.$_set](1, dart.notNull(this[S._m2storage][S.$_get](1)) * dart.notNull(scale));
      this[S._m2storage][S.$_set](2, dart.notNull(this[S._m2storage][S.$_get](2)) * dart.notNull(scale));
      this[S._m2storage][S.$_set](3, dart.notNull(this[S._m2storage][S.$_get](3)) * dart.notNull(scale));
    }
    scaled(scale) {
      let t0;
      if (scale == null) dart.nullFailed(I[5], 394, 25, "scale");
      t0 = this.clone();
      return (() => {
        t0.scale(scale);
        return t0;
      })();
    }
    add(o) {
      if (o == null) dart.nullFailed(I[5], 397, 20, "o");
      let oStorage = o[S._m2storage];
      this[S._m2storage][S.$_set](0, dart.notNull(this[S._m2storage][S.$_get](0)) + dart.notNull(oStorage[S.$_get](0)));
      this[S._m2storage][S.$_set](1, dart.notNull(this[S._m2storage][S.$_get](1)) + dart.notNull(oStorage[S.$_get](1)));
      this[S._m2storage][S.$_set](2, dart.notNull(this[S._m2storage][S.$_get](2)) + dart.notNull(oStorage[S.$_get](2)));
      this[S._m2storage][S.$_set](3, dart.notNull(this[S._m2storage][S.$_get](3)) + dart.notNull(oStorage[S.$_get](3)));
    }
    sub(o) {
      if (o == null) dart.nullFailed(I[5], 406, 20, "o");
      let oStorage = o[S._m2storage];
      this[S._m2storage][S.$_set](0, dart.notNull(this[S._m2storage][S.$_get](0)) - dart.notNull(oStorage[S.$_get](0)));
      this[S._m2storage][S.$_set](1, dart.notNull(this[S._m2storage][S.$_get](1)) - dart.notNull(oStorage[S.$_get](1)));
      this[S._m2storage][S.$_set](2, dart.notNull(this[S._m2storage][S.$_get](2)) - dart.notNull(oStorage[S.$_get](2)));
      this[S._m2storage][S.$_set](3, dart.notNull(this[S._m2storage][S.$_get](3)) - dart.notNull(oStorage[S.$_get](3)));
    }
    negate() {
      this[S._m2storage][S.$_set](0, -dart.notNull(this[S._m2storage][S.$_get](0)));
      this[S._m2storage][S.$_set](1, -dart.notNull(this[S._m2storage][S.$_get](1)));
      this[S._m2storage][S.$_set](2, -dart.notNull(this[S._m2storage][S.$_get](2)));
      this[S._m2storage][S.$_set](3, -dart.notNull(this[S._m2storage][S.$_get](3)));
    }
    multiply(arg) {
      if (arg == null) dart.nullFailed(I[5], 423, 25, "arg");
      let m00 = this[S._m2storage][S.$_get](0);
      let m01 = this[S._m2storage][S.$_get](2);
      let m10 = this[S._m2storage][S.$_get](1);
      let m11 = this[S._m2storage][S.$_get](3);
      let argStorage = arg[S._m2storage];
      let n00 = argStorage[S.$_get](0);
      let n01 = argStorage[S.$_get](2);
      let n10 = argStorage[S.$_get](1);
      let n11 = argStorage[S.$_get](3);
      this[S._m2storage][S.$_set](0, dart.notNull(m00) * dart.notNull(n00) + dart.notNull(m01) * dart.notNull(n10));
      this[S._m2storage][S.$_set](2, dart.notNull(m00) * dart.notNull(n01) + dart.notNull(m01) * dart.notNull(n11));
      this[S._m2storage][S.$_set](1, dart.notNull(m10) * dart.notNull(n00) + dart.notNull(m11) * dart.notNull(n10));
      this[S._m2storage][S.$_set](3, dart.notNull(m10) * dart.notNull(n01) + dart.notNull(m11) * dart.notNull(n11));
    }
    multiplied(arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[5], 440, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.multiply(arg);
        return t0;
      })();
    }
    transposeMultiply(arg) {
      if (arg == null) dart.nullFailed(I[5], 443, 34, "arg");
      let m00 = this[S._m2storage][S.$_get](0);
      let m01 = this[S._m2storage][S.$_get](1);
      let m10 = this[S._m2storage][S.$_get](2);
      let m11 = this[S._m2storage][S.$_get](3);
      let argStorage = arg[S._m2storage];
      this[S._m2storage][S.$_set](0, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](1)));
      this[S._m2storage][S.$_set](2, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](3)));
      this[S._m2storage][S.$_set](1, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](1)));
      this[S._m2storage][S.$_set](3, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](3)));
    }
    multiplyTranspose(arg) {
      if (arg == null) dart.nullFailed(I[5], 456, 34, "arg");
      let m00 = this[S._m2storage][S.$_get](0);
      let m01 = this[S._m2storage][S.$_get](2);
      let m10 = this[S._m2storage][S.$_get](1);
      let m11 = this[S._m2storage][S.$_get](3);
      let argStorage = arg[S._m2storage];
      this[S._m2storage][S.$_set](0, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](2)));
      this[S._m2storage][S.$_set](2, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](3)));
      this[S._m2storage][S.$_set](1, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](2)));
      this[S._m2storage][S.$_set](3, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](3)));
    }
    transform(arg) {
      if (arg == null) dart.nullFailed(I[5], 470, 29, "arg");
      let argStorage = arg[S._v2storage];
      let x = dart.notNull(this[S._m2storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m2storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](1));
      let y = dart.notNull(this[S._m2storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m2storage][S.$_get](3)) * dart.notNull(argStorage[S.$_get](1));
      argStorage[S.$_set](0, x);
      argStorage[S.$_set](1, y);
      return arg;
    }
    transformed(arg, out = null) {
      if (arg == null) dart.nullFailed(I[5], 482, 31, "arg");
      if (out == null) {
        out = vector_math_64.Vector2.copy(arg);
      } else {
        out.setFrom(arg);
      }
      return this.transform(out);
    }
    copyIntoArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[5], 492, 32, "array");
      if (offset == null) dart.nullFailed(I[5], 492, 44, "offset");
      let i = offset;
      array[S.$_set](dart.notNull(i) + 3, this[S._m2storage][S.$_get](3));
      array[S.$_set](dart.notNull(i) + 2, this[S._m2storage][S.$_get](2));
      array[S.$_set](dart.notNull(i) + 1, this[S._m2storage][S.$_get](1));
      array[S.$_set](dart.notNull(i) + 0, this[S._m2storage][S.$_get](0));
    }
    copyFromArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[5], 501, 35, "array");
      if (offset == null) dart.nullFailed(I[5], 501, 47, "offset");
      let i = offset;
      this[S._m2storage][S.$_set](3, array[S.$_get](dart.notNull(i) + 3));
      this[S._m2storage][S.$_set](2, array[S.$_get](dart.notNull(i) + 2));
      this[S._m2storage][S.$_set](1, array[S.$_get](dart.notNull(i) + 1));
      this[S._m2storage][S.$_set](0, array[S.$_get](dart.notNull(i) + 0));
    }
  };
  (vector_math_64.Matrix2.zero = function() {
    this[S._m2storage] = _native_typed_data.NativeFloat64List.new(4);
    ;
  }).prototype = vector_math_64.Matrix2.prototype;
  dart.addTypeTests(vector_math_64.Matrix2);
  dart.addTypeCaches(vector_math_64.Matrix2);
  dart.setMethodSignature(vector_math_64.Matrix2, () => ({
    __proto__: dart.getMethods(vector_math_64.Matrix2.__proto__),
    index: dart.fnType(core.int, [core.int, core.int]),
    entry: dart.fnType(core.double, [core.int, core.int]),
    setEntry: dart.fnType(dart.void, [core.int, core.int, core.double]),
    setValues: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    setColumns: dart.fnType(dart.void, [vector_math_64.Vector2, vector_math_64.Vector2]),
    setFrom: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    setOuter: dart.fnType(dart.void, [vector_math_64.Vector2, vector_math_64.Vector2]),
    splatDiagonal: dart.fnType(dart.void, [core.double]),
    setDiagonal: dart.fnType(dart.void, [vector_math_64.Vector2]),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    _equals: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    [S.$_equals]: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    setRow: dart.fnType(dart.void, [core.int, vector_math_64.Vector2]),
    getRow: dart.fnType(vector_math_64.Vector2, [core.int]),
    setColumn: dart.fnType(dart.void, [core.int, vector_math_64.Vector2]),
    getColumn: dart.fnType(vector_math_64.Vector2, [core.int]),
    clone: dart.fnType(vector_math_64.Matrix2, []),
    copyInto: dart.fnType(vector_math_64.Matrix2, [vector_math_64.Matrix2]),
    '*': dart.fnType(dart.dynamic, [dart.dynamic]),
    '+': dart.fnType(vector_math_64.Matrix2, [vector_math_64.Matrix2]),
    '-': dart.fnType(vector_math_64.Matrix2, [vector_math_64.Matrix2]),
    _negate: dart.fnType(vector_math_64.Matrix2, []),
    setZero: dart.fnType(dart.void, []),
    setIdentity: dart.fnType(dart.void, []),
    transposed: dart.fnType(vector_math_64.Matrix2, []),
    transpose: dart.fnType(dart.void, []),
    absolute: dart.fnType(vector_math_64.Matrix2, []),
    determinant: dart.fnType(core.double, []),
    dotRow: dart.fnType(core.double, [core.int, vector_math_64.Vector2]),
    dotColumn: dart.fnType(core.double, [core.int, vector_math_64.Vector2]),
    trace: dart.fnType(core.double, []),
    infinityNorm: dart.fnType(core.double, []),
    relativeError: dart.fnType(core.double, [vector_math_64.Matrix2]),
    absoluteError: dart.fnType(core.double, [vector_math_64.Matrix2]),
    invert: dart.fnType(core.double, []),
    copyInverse: dart.fnType(core.double, [vector_math_64.Matrix2]),
    setRotation: dart.fnType(dart.void, [core.double]),
    scaleAdjoint: dart.fnType(dart.void, [core.double]),
    scale: dart.fnType(dart.void, [core.double]),
    scaled: dart.fnType(vector_math_64.Matrix2, [core.double]),
    add: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    sub: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    negate: dart.fnType(dart.void, []),
    multiply: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    multiplied: dart.fnType(vector_math_64.Matrix2, [vector_math_64.Matrix2]),
    transposeMultiply: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    multiplyTranspose: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    transform: dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    transformed: dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2], [dart.nullable(vector_math_64.Vector2)]),
    copyIntoArray: dart.fnType(dart.void, [core.List$(core.num)], [core.int]),
    copyFromArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int])
  }));
  dart.setGetterSignature(vector_math_64.Matrix2, () => ({
    __proto__: dart.getGetters(vector_math_64.Matrix2.__proto__),
    storage: typed_data.Float64List,
    dimension: core.int,
    row0: vector_math_64.Vector2,
    row1: vector_math_64.Vector2
  }));
  dart.setSetterSignature(vector_math_64.Matrix2, () => ({
    __proto__: dart.getSetters(vector_math_64.Matrix2.__proto__),
    row0: vector_math_64.Vector2,
    row1: vector_math_64.Vector2
  }));
  dart.setLibraryUri(vector_math_64.Matrix2, I[1]);
  dart.setFieldSignature(vector_math_64.Matrix2, () => ({
    __proto__: dart.getFields(vector_math_64.Matrix2.__proto__),
    [S._m2storage]: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.defineExtensionMethods(vector_math_64.Matrix2, ['toString', '_equals']);
  dart.defineExtensionAccessors(vector_math_64.Matrix2, ['hashCode']);
  vector_math_64.Matrix3 = class Matrix3 extends core.Object {
    get storage() {
      return this[S._m3storage];
    }
    static solve2(A, x, b) {
      let t0;
      if (A == null) dart.nullFailed(I[6], 16, 30, "A");
      if (x == null) dart.nullFailed(I[6], 16, 41, "x");
      if (b == null) dart.nullFailed(I[6], 16, 52, "b");
      let a11 = A.entry(0, 0);
      let a12 = A.entry(0, 1);
      let a21 = A.entry(1, 0);
      let a22 = A.entry(1, 1);
      let bx = dart.notNull(b.x) - dart.notNull(A.storage[S.$_get](6));
      let by = dart.notNull(b.y) - dart.notNull(A.storage[S.$_get](7));
      let det = dart.notNull(a11) * dart.notNull(a22) - dart.notNull(a12) * dart.notNull(a21);
      if (det !== 0.0) {
        det = 1.0 / det;
      }
      t0 = x;
      (() => {
        t0.x = det * (dart.notNull(a22) * bx - dart.notNull(a12) * by);
        t0.y = det * (dart.notNull(a11) * by - dart.notNull(a21) * bx);
        return t0;
      })();
    }
    static solve(A, x, b) {
      let t0;
      if (A == null) dart.nullFailed(I[6], 35, 29, "A");
      if (x == null) dart.nullFailed(I[6], 35, 40, "x");
      if (b == null) dart.nullFailed(I[6], 35, 51, "b");
      let A0x = A.entry(0, 0);
      let A0y = A.entry(1, 0);
      let A0z = A.entry(2, 0);
      let A1x = A.entry(0, 1);
      let A1y = A.entry(1, 1);
      let A1z = A.entry(2, 1);
      let A2x = A.entry(0, 2);
      let A2y = A.entry(1, 2);
      let A2z = A.entry(2, 2);
      let rx = null;
      let ry = null;
      let rz = null;
      let det = null;
      rx = dart.notNull(A1y) * dart.notNull(A2z) - dart.notNull(A1z) * dart.notNull(A2y);
      ry = dart.notNull(A1z) * dart.notNull(A2x) - dart.notNull(A1x) * dart.notNull(A2z);
      rz = dart.notNull(A1x) * dart.notNull(A2y) - dart.notNull(A1y) * dart.notNull(A2x);
      det = dart.notNull(A0x) * dart.notNull(rx) + dart.notNull(A0y) * dart.notNull(ry) + dart.notNull(A0z) * dart.notNull(rz);
      if (det !== 0.0) {
        det = 1.0 / dart.notNull(det);
      }
      let x_ = dart.notNull(det) * (dart.notNull(b.x) * dart.notNull(rx) + dart.notNull(b.y) * dart.notNull(ry) + dart.notNull(b.z) * dart.notNull(rz));
      rx = -(dart.notNull(A2y) * dart.notNull(b.z) - dart.notNull(A2z) * dart.notNull(b.y));
      ry = -(dart.notNull(A2z) * dart.notNull(b.x) - dart.notNull(A2x) * dart.notNull(b.z));
      rz = -(dart.notNull(A2x) * dart.notNull(b.y) - dart.notNull(A2y) * dart.notNull(b.x));
      let y_ = dart.notNull(det) * (dart.notNull(A0x) * dart.notNull(rx) + dart.notNull(A0y) * dart.notNull(ry) + dart.notNull(A0z) * dart.notNull(rz));
      rx = -(dart.notNull(b.y) * dart.notNull(A1z) - dart.notNull(b.z) * dart.notNull(A1y));
      ry = -(dart.notNull(b.z) * dart.notNull(A1x) - dart.notNull(b.x) * dart.notNull(A1z));
      rz = -(dart.notNull(b.x) * dart.notNull(A1y) - dart.notNull(b.y) * dart.notNull(A1x));
      let z_ = dart.notNull(det) * (dart.notNull(A0x) * dart.notNull(rx) + dart.notNull(A0y) * dart.notNull(ry) + dart.notNull(A0z) * dart.notNull(rz));
      t0 = x;
      (() => {
        t0.x = x_;
        t0.y = y_;
        t0.z = z_;
        return t0;
      })();
    }
    index(row, col) {
      if (row == null) dart.nullFailed(I[6], 83, 17, "row");
      if (col == null) dart.nullFailed(I[6], 83, 26, "col");
      return dart.notNull(col) * 3 + dart.notNull(row);
    }
    entry(row, col) {
      if (row == null) dart.nullFailed(I[6], 86, 20, "row");
      if (col == null) dart.nullFailed(I[6], 86, 29, "col");
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed(null, I[6], 87, 12, "(row >= 0) && (row < dimension)");
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed(null, I[6], 88, 12, "(col >= 0) && (col < dimension)");
      return this[S._m3storage][S.$_get](this.index(row, col));
    }
    setEntry(row, col, v) {
      if (row == null) dart.nullFailed(I[6], 94, 21, "row");
      if (col == null) dart.nullFailed(I[6], 94, 30, "col");
      if (v == null) dart.nullFailed(I[6], 94, 42, "v");
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed(null, I[6], 95, 12, "(row >= 0) && (row < dimension)");
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed(null, I[6], 96, 12, "(col >= 0) && (col < dimension)");
      this[S._m3storage][S.$_set](this.index(row, col), v);
    }
    static new(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {
      let t0;
      if (arg0 == null) dart.nullFailed(I[6], 102, 26, "arg0");
      if (arg1 == null) dart.nullFailed(I[6], 102, 39, "arg1");
      if (arg2 == null) dart.nullFailed(I[6], 102, 52, "arg2");
      if (arg3 == null) dart.nullFailed(I[6], 102, 65, "arg3");
      if (arg4 == null) dart.nullFailed(I[6], 103, 18, "arg4");
      if (arg5 == null) dart.nullFailed(I[6], 103, 31, "arg5");
      if (arg6 == null) dart.nullFailed(I[6], 103, 44, "arg6");
      if (arg7 == null) dart.nullFailed(I[6], 103, 57, "arg7");
      if (arg8 == null) dart.nullFailed(I[6], 103, 70, "arg8");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        return t0;
      })();
    }
    static fromList(values) {
      let t0;
      if (values == null) dart.nullFailed(I[6], 108, 41, "values");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setValues(values[S.$_get](0), values[S.$_get](1), values[S.$_get](2), values[S.$_get](3), values[S.$_get](4), values[S.$_get](5), values[S.$_get](6), values[S.$_get](7), values[S.$_get](8));
        return t0;
      })();
    }
    static identity() {
      let t0;
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setIdentity();
        return t0;
      })();
    }
    static copy(other) {
      let t0;
      if (other == null) dart.nullFailed(I[6], 119, 32, "other");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setFrom(other);
        return t0;
      })();
    }
    static columns(arg0, arg1, arg2) {
      let t0;
      if (arg0 == null) dart.nullFailed(I[6], 122, 35, "arg0");
      if (arg1 == null) dart.nullFailed(I[6], 122, 49, "arg1");
      if (arg2 == null) dart.nullFailed(I[6], 122, 63, "arg2");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setColumns(arg0, arg1, arg2);
        return t0;
      })();
    }
    static outer(u, v) {
      let t0;
      if (u == null) dart.nullFailed(I[6], 126, 33, "u");
      if (v == null) dart.nullFailed(I[6], 126, 44, "v");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setOuter(u, v);
        return t0;
      })();
    }
    static rotationX(radians) {
      let t0;
      if (radians == null) dart.nullFailed(I[6], 129, 36, "radians");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setRotationX(radians);
        return t0;
      })();
    }
    static rotationY(radians) {
      let t0;
      if (radians == null) dart.nullFailed(I[6], 133, 36, "radians");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setRotationY(radians);
        return t0;
      })();
    }
    static rotationZ(radians) {
      let t0;
      if (radians == null) dart.nullFailed(I[6], 137, 36, "radians");
      t0 = new vector_math_64.Matrix3.zero();
      return (() => {
        t0.setRotationZ(radians);
        return t0;
      })();
    }
    setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {
      if (arg0 == null) dart.nullFailed(I[6], 141, 25, "arg0");
      if (arg1 == null) dart.nullFailed(I[6], 141, 38, "arg1");
      if (arg2 == null) dart.nullFailed(I[6], 141, 51, "arg2");
      if (arg3 == null) dart.nullFailed(I[6], 141, 64, "arg3");
      if (arg4 == null) dart.nullFailed(I[6], 142, 14, "arg4");
      if (arg5 == null) dart.nullFailed(I[6], 142, 27, "arg5");
      if (arg6 == null) dart.nullFailed(I[6], 142, 40, "arg6");
      if (arg7 == null) dart.nullFailed(I[6], 142, 53, "arg7");
      if (arg8 == null) dart.nullFailed(I[6], 142, 66, "arg8");
      this[S._m3storage][S.$_set](8, arg8);
      this[S._m3storage][S.$_set](7, arg7);
      this[S._m3storage][S.$_set](6, arg6);
      this[S._m3storage][S.$_set](5, arg5);
      this[S._m3storage][S.$_set](4, arg4);
      this[S._m3storage][S.$_set](3, arg3);
      this[S._m3storage][S.$_set](2, arg2);
      this[S._m3storage][S.$_set](1, arg1);
      this[S._m3storage][S.$_set](0, arg0);
    }
    setColumns(arg0, arg1, arg2) {
      if (arg0 == null) dart.nullFailed(I[6], 155, 27, "arg0");
      if (arg1 == null) dart.nullFailed(I[6], 155, 41, "arg1");
      if (arg2 == null) dart.nullFailed(I[6], 155, 55, "arg2");
      let arg0Storage = arg0[S._v3storage];
      let arg1Storage = arg1[S._v3storage];
      let arg2Storage = arg2[S._v3storage];
      this[S._m3storage][S.$_set](0, arg0Storage[S.$_get](0));
      this[S._m3storage][S.$_set](1, arg0Storage[S.$_get](1));
      this[S._m3storage][S.$_set](2, arg0Storage[S.$_get](2));
      this[S._m3storage][S.$_set](3, arg1Storage[S.$_get](0));
      this[S._m3storage][S.$_set](4, arg1Storage[S.$_get](1));
      this[S._m3storage][S.$_set](5, arg1Storage[S.$_get](2));
      this[S._m3storage][S.$_set](6, arg2Storage[S.$_get](0));
      this[S._m3storage][S.$_set](7, arg2Storage[S.$_get](1));
      this[S._m3storage][S.$_set](8, arg2Storage[S.$_get](2));
    }
    setFrom(arg) {
      if (arg == null) dart.nullFailed(I[6], 171, 24, "arg");
      let argStorage = arg[S._m3storage];
      this[S._m3storage][S.$_set](8, argStorage[S.$_get](8));
      this[S._m3storage][S.$_set](7, argStorage[S.$_get](7));
      this[S._m3storage][S.$_set](6, argStorage[S.$_get](6));
      this[S._m3storage][S.$_set](5, argStorage[S.$_get](5));
      this[S._m3storage][S.$_set](4, argStorage[S.$_get](4));
      this[S._m3storage][S.$_set](3, argStorage[S.$_get](3));
      this[S._m3storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._m3storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._m3storage][S.$_set](0, argStorage[S.$_get](0));
    }
    setOuter(u, v) {
      if (u == null) dart.nullFailed(I[6], 185, 25, "u");
      if (v == null) dart.nullFailed(I[6], 185, 36, "v");
      let uStorage = u[S._v3storage];
      let vStorage = v[S._v3storage];
      this[S._m3storage][S.$_set](0, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m3storage][S.$_set](1, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m3storage][S.$_set](2, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](2)));
      this[S._m3storage][S.$_set](3, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m3storage][S.$_set](4, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m3storage][S.$_set](5, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](2)));
      this[S._m3storage][S.$_set](6, dart.notNull(uStorage[S.$_get](2)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m3storage][S.$_set](7, dart.notNull(uStorage[S.$_get](2)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m3storage][S.$_set](8, dart.notNull(uStorage[S.$_get](2)) * dart.notNull(vStorage[S.$_get](2)));
    }
    splatDiagonal(arg) {
      if (arg == null) dart.nullFailed(I[6], 200, 29, "arg");
      this[S._m3storage][S.$_set](0, arg);
      this[S._m3storage][S.$_set](4, arg);
      this[S._m3storage][S.$_set](8, arg);
    }
    setDiagonal(arg) {
      if (arg == null) dart.nullFailed(I[6], 207, 28, "arg");
      this[S._m3storage][S.$_set](0, arg.storage[S.$_get](0));
      this[S._m3storage][S.$_set](4, arg.storage[S.$_get](1));
      this[S._m3storage][S.$_set](8, arg.storage[S.$_get](2));
    }
    setUpper2x2(arg) {
      if (arg == null) dart.nullFailed(I[6], 214, 28, "arg");
      let argStorage = arg[S._m2storage];
      this[S._m3storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._m3storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._m3storage][S.$_set](3, argStorage[S.$_get](2));
      this[S._m3storage][S.$_set](4, argStorage[S.$_get](3));
    }
    toString() {
      return "[0] " + dart.str(this.getRow(0)) + "\n[1] " + dart.str(this.getRow(1)) + "\n[2] " + dart.str(this.getRow(2)) + "\n";
    }
    get dimension() {
      return 3;
    }
    _get(i) {
      if (i == null) dart.nullFailed(I[6], 230, 26, "i");
      return this[S._m3storage][S.$_get](i);
    }
    _set(i, v$) {
      let v = v$;
      if (i == null) dart.nullFailed(I[6], 233, 25, "i");
      if (v == null) dart.nullFailed(I[6], 233, 35, "v");
      this[S._m3storage][S.$_set](i, v);
      return v$;
    }
    _equals(other) {
      if (other == null) return false;
      return vector_math_64.Matrix3.is(other) && this[S._m3storage][S.$_get](0) == other[S._m3storage][S.$_get](0) && this[S._m3storage][S.$_get](1) == other[S._m3storage][S.$_get](1) && this[S._m3storage][S.$_get](2) == other[S._m3storage][S.$_get](2) && this[S._m3storage][S.$_get](3) == other[S._m3storage][S.$_get](3) && this[S._m3storage][S.$_get](4) == other[S._m3storage][S.$_get](4) && this[S._m3storage][S.$_get](5) == other[S._m3storage][S.$_get](5) && this[S._m3storage][S.$_get](6) == other[S._m3storage][S.$_get](6) && this[S._m3storage][S.$_get](7) == other[S._m3storage][S.$_get](7) && this[S._m3storage][S.$_get](8) == other[S._m3storage][S.$_get](8);
    }
    get hashCode() {
      return hash.hashObjects(this[S._m3storage]);
    }
    get row0() {
      return this.getRow(0);
    }
    get row1() {
      return this.getRow(1);
    }
    get row2() {
      return this.getRow(2);
    }
    set row0(arg) {
      if (arg == null) dart.nullFailed(I[6], 264, 20, "arg");
      return this.setRow(0, arg);
    }
    set row1(arg) {
      if (arg == null) dart.nullFailed(I[6], 267, 20, "arg");
      return this.setRow(1, arg);
    }
    set row2(arg) {
      if (arg == null) dart.nullFailed(I[6], 270, 20, "arg");
      return this.setRow(2, arg);
    }
    setRow(row, arg) {
      if (row == null) dart.nullFailed(I[6], 273, 19, "row");
      if (arg == null) dart.nullFailed(I[6], 273, 32, "arg");
      let argStorage = arg[S._v3storage];
      this[S._m3storage][S.$_set](this.index(row, 0), argStorage[S.$_get](0));
      this[S._m3storage][S.$_set](this.index(row, 1), argStorage[S.$_get](1));
      this[S._m3storage][S.$_set](this.index(row, 2), argStorage[S.$_get](2));
    }
    getRow(row) {
      if (row == null) dart.nullFailed(I[6], 281, 22, "row");
      let r = new vector_math_64.Vector3.zero();
      let rStorage = r[S._v3storage];
      rStorage[S.$_set](0, this[S._m3storage][S.$_get](this.index(row, 0)));
      rStorage[S.$_set](1, this[S._m3storage][S.$_get](this.index(row, 1)));
      rStorage[S.$_set](2, this[S._m3storage][S.$_get](this.index(row, 2)));
      return r;
    }
    setColumn(column, arg) {
      if (column == null) dart.nullFailed(I[6], 291, 22, "column");
      if (arg == null) dart.nullFailed(I[6], 291, 38, "arg");
      let argStorage = arg[S._v3storage];
      let entry = dart.notNull(column) * 3;
      this[S._m3storage][S.$_set](entry + 2, argStorage[S.$_get](2));
      this[S._m3storage][S.$_set](entry + 1, argStorage[S.$_get](1));
      this[S._m3storage][S.$_set](entry + 0, argStorage[S.$_get](0));
    }
    getColumn(column) {
      if (column == null) dart.nullFailed(I[6], 300, 25, "column");
      let r = new vector_math_64.Vector3.zero();
      let rStorage = r[S._v3storage];
      let entry = dart.notNull(column) * 3;
      rStorage[S.$_set](2, this[S._m3storage][S.$_get](entry + 2));
      rStorage[S.$_set](1, this[S._m3storage][S.$_get](entry + 1));
      rStorage[S.$_set](0, this[S._m3storage][S.$_get](entry + 0));
      return r;
    }
    clone() {
      return vector_math_64.Matrix3.copy(this);
    }
    copyInto(arg) {
      if (arg == null) dart.nullFailed(I[6], 314, 28, "arg");
      let argStorage = arg[S._m3storage];
      argStorage[S.$_set](0, this[S._m3storage][S.$_get](0));
      argStorage[S.$_set](1, this[S._m3storage][S.$_get](1));
      argStorage[S.$_set](2, this[S._m3storage][S.$_get](2));
      argStorage[S.$_set](3, this[S._m3storage][S.$_get](3));
      argStorage[S.$_set](4, this[S._m3storage][S.$_get](4));
      argStorage[S.$_set](5, this[S._m3storage][S.$_get](5));
      argStorage[S.$_set](6, this[S._m3storage][S.$_get](6));
      argStorage[S.$_set](7, this[S._m3storage][S.$_get](7));
      argStorage[S.$_set](8, this[S._m3storage][S.$_get](8));
      return arg;
    }
    ['*'](arg) {
      if (typeof arg == 'number') {
        return this.scaled(arg);
      }
      if (vector_math_64.Vector3.is(arg)) {
        return this.transformed(arg);
      }
      if (vector_math_64.Matrix3.is(arg)) {
        return this.multiplied(arg);
      }
      dart.throw(new core.ArgumentError.new(arg));
    }
    ['+'](arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[6], 343, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.add(arg);
        return t0;
      })();
    }
    ['-'](arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[6], 346, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.sub(arg);
        return t0;
      })();
    }
    _negate() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.negate();
        return t0;
      })();
    }
    setZero() {
      this[S._m3storage][S.$_set](0, 0.0);
      this[S._m3storage][S.$_set](1, 0.0);
      this[S._m3storage][S.$_set](2, 0.0);
      this[S._m3storage][S.$_set](3, 0.0);
      this[S._m3storage][S.$_set](4, 0.0);
      this[S._m3storage][S.$_set](5, 0.0);
      this[S._m3storage][S.$_set](6, 0.0);
      this[S._m3storage][S.$_set](7, 0.0);
      this[S._m3storage][S.$_set](8, 0.0);
    }
    setIdentity() {
      this[S._m3storage][S.$_set](0, 1.0);
      this[S._m3storage][S.$_set](1, 0.0);
      this[S._m3storage][S.$_set](2, 0.0);
      this[S._m3storage][S.$_set](3, 0.0);
      this[S._m3storage][S.$_set](4, 1.0);
      this[S._m3storage][S.$_set](5, 0.0);
      this[S._m3storage][S.$_set](6, 0.0);
      this[S._m3storage][S.$_set](7, 0.0);
      this[S._m3storage][S.$_set](8, 1.0);
    }
    transposed() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.transpose();
        return t0;
      })();
    }
    transpose() {
      let temp = null;
      temp = this[S._m3storage][S.$_get](3);
      this[S._m3storage][S.$_set](3, this[S._m3storage][S.$_get](1));
      this[S._m3storage][S.$_set](1, temp);
      temp = this[S._m3storage][S.$_get](6);
      this[S._m3storage][S.$_set](6, this[S._m3storage][S.$_get](2));
      this[S._m3storage][S.$_set](2, temp);
      temp = this[S._m3storage][S.$_get](7);
      this[S._m3storage][S.$_set](7, this[S._m3storage][S.$_get](5));
      this[S._m3storage][S.$_set](5, temp);
    }
    absolute() {
      let r = new vector_math_64.Matrix3.zero();
      let rStorage = r[S._m3storage];
      rStorage[S.$_set](0, this[S._m3storage][S.$_get](0)[S.$abs]());
      rStorage[S.$_set](1, this[S._m3storage][S.$_get](1)[S.$abs]());
      rStorage[S.$_set](2, this[S._m3storage][S.$_get](2)[S.$abs]());
      rStorage[S.$_set](3, this[S._m3storage][S.$_get](3)[S.$abs]());
      rStorage[S.$_set](4, this[S._m3storage][S.$_get](4)[S.$abs]());
      rStorage[S.$_set](5, this[S._m3storage][S.$_get](5)[S.$abs]());
      rStorage[S.$_set](6, this[S._m3storage][S.$_get](6)[S.$abs]());
      rStorage[S.$_set](7, this[S._m3storage][S.$_get](7)[S.$abs]());
      rStorage[S.$_set](8, this[S._m3storage][S.$_get](8)[S.$abs]());
      return r;
    }
    determinant() {
      let x = dart.notNull(this[S._m3storage][S.$_get](0)) * (dart.notNull(this[S._m3storage][S.$_get](4)) * dart.notNull(this[S._m3storage][S.$_get](8)) - dart.notNull(this[S._m3storage][S.$_get](5)) * dart.notNull(this[S._m3storage][S.$_get](7)));
      let y = dart.notNull(this[S._m3storage][S.$_get](1)) * (dart.notNull(this[S._m3storage][S.$_get](3)) * dart.notNull(this[S._m3storage][S.$_get](8)) - dart.notNull(this[S._m3storage][S.$_get](5)) * dart.notNull(this[S._m3storage][S.$_get](6)));
      let z = dart.notNull(this[S._m3storage][S.$_get](2)) * (dart.notNull(this[S._m3storage][S.$_get](3)) * dart.notNull(this[S._m3storage][S.$_get](7)) - dart.notNull(this[S._m3storage][S.$_get](4)) * dart.notNull(this[S._m3storage][S.$_get](6)));
      return x - y + z;
    }
    dotRow(i, v) {
      if (i == null) dart.nullFailed(I[6], 422, 21, "i");
      if (v == null) dart.nullFailed(I[6], 422, 32, "v");
      let vStorage = v[S._v3storage];
      return dart.notNull(this[S._m3storage][S.$_get](i)) * dart.notNull(vStorage[S.$_get](0)) + dart.notNull(this[S._m3storage][S.$_get](3 + dart.notNull(i))) * dart.notNull(vStorage[S.$_get](1)) + dart.notNull(this[S._m3storage][S.$_get](6 + dart.notNull(i))) * dart.notNull(vStorage[S.$_get](2));
    }
    dotColumn(j, v) {
      if (j == null) dart.nullFailed(I[6], 430, 24, "j");
      if (v == null) dart.nullFailed(I[6], 430, 35, "v");
      let vStorage = v[S._v3storage];
      return dart.notNull(this[S._m3storage][S.$_get](dart.notNull(j) * 3)) * dart.notNull(vStorage[S.$_get](0)) + dart.notNull(this[S._m3storage][S.$_get](dart.notNull(j) * 3 + 1)) * dart.notNull(vStorage[S.$_get](1)) + dart.notNull(this[S._m3storage][S.$_get](dart.notNull(j) * 3 + 2)) * dart.notNull(vStorage[S.$_get](2));
    }
    trace() {
      let t = 0.0;
      t = t + dart.notNull(this[S._m3storage][S.$_get](0));
      t = t + dart.notNull(this[S._m3storage][S.$_get](4));
      t = t + dart.notNull(this[S._m3storage][S.$_get](8));
      return t;
    }
    infinityNorm() {
      let norm = 0.0;
      {
        let row_norm = 0.0;
        row_norm = row_norm + this[S._m3storage][S.$_get](0)[S.$abs]();
        row_norm = row_norm + this[S._m3storage][S.$_get](1)[S.$abs]();
        row_norm = row_norm + this[S._m3storage][S.$_get](2)[S.$abs]();
        norm = row_norm > norm ? row_norm : norm;
      }
      {
        let row_norm = 0.0;
        row_norm = row_norm + this[S._m3storage][S.$_get](3)[S.$abs]();
        row_norm = row_norm + this[S._m3storage][S.$_get](4)[S.$abs]();
        row_norm = row_norm + this[S._m3storage][S.$_get](5)[S.$abs]();
        norm = row_norm > norm ? row_norm : norm;
      }
      {
        let row_norm = 0.0;
        row_norm = row_norm + this[S._m3storage][S.$_get](6)[S.$abs]();
        row_norm = row_norm + this[S._m3storage][S.$_get](7)[S.$abs]();
        row_norm = row_norm + this[S._m3storage][S.$_get](8)[S.$abs]();
        norm = row_norm > norm ? row_norm : norm;
      }
      return norm;
    }
    relativeError(correct) {
      if (correct == null) dart.nullFailed(I[6], 475, 32, "correct");
      let diff = correct['-'](this);
      let correct_norm = correct.infinityNorm();
      let diff_norm = diff.infinityNorm();
      return dart.notNull(diff_norm) / dart.notNull(correct_norm);
    }
    absoluteError(correct) {
      if (correct == null) dart.nullFailed(I[6], 483, 32, "correct");
      let this_norm = this.infinityNorm();
      let correct_norm = correct.infinityNorm();
      let diff_norm = (dart.notNull(this_norm) - dart.notNull(correct_norm))[S.$abs]();
      return diff_norm;
    }
    invert() {
      return this.copyInverse(this);
    }
    copyInverse(arg) {
      if (arg == null) dart.nullFailed(I[6], 494, 30, "arg");
      let det = arg.determinant();
      if (det === 0.0) {
        this.setFrom(arg);
        return 0.0;
      }
      let invDet = 1.0 / dart.notNull(det);
      let argStorage = arg[S._m3storage];
      let ix = invDet * (dart.notNull(argStorage[S.$_get](4)) * dart.notNull(argStorage[S.$_get](8)) - dart.notNull(argStorage[S.$_get](5)) * dart.notNull(argStorage[S.$_get](7)));
      let iy = invDet * (dart.notNull(argStorage[S.$_get](2)) * dart.notNull(argStorage[S.$_get](7)) - dart.notNull(argStorage[S.$_get](1)) * dart.notNull(argStorage[S.$_get](8)));
      let iz = invDet * (dart.notNull(argStorage[S.$_get](1)) * dart.notNull(argStorage[S.$_get](5)) - dart.notNull(argStorage[S.$_get](2)) * dart.notNull(argStorage[S.$_get](4)));
      let jx = invDet * (dart.notNull(argStorage[S.$_get](5)) * dart.notNull(argStorage[S.$_get](6)) - dart.notNull(argStorage[S.$_get](3)) * dart.notNull(argStorage[S.$_get](8)));
      let jy = invDet * (dart.notNull(argStorage[S.$_get](0)) * dart.notNull(argStorage[S.$_get](8)) - dart.notNull(argStorage[S.$_get](2)) * dart.notNull(argStorage[S.$_get](6)));
      let jz = invDet * (dart.notNull(argStorage[S.$_get](2)) * dart.notNull(argStorage[S.$_get](3)) - dart.notNull(argStorage[S.$_get](0)) * dart.notNull(argStorage[S.$_get](5)));
      let kx = invDet * (dart.notNull(argStorage[S.$_get](3)) * dart.notNull(argStorage[S.$_get](7)) - dart.notNull(argStorage[S.$_get](4)) * dart.notNull(argStorage[S.$_get](6)));
      let ky = invDet * (dart.notNull(argStorage[S.$_get](1)) * dart.notNull(argStorage[S.$_get](6)) - dart.notNull(argStorage[S.$_get](0)) * dart.notNull(argStorage[S.$_get](7)));
      let kz = invDet * (dart.notNull(argStorage[S.$_get](0)) * dart.notNull(argStorage[S.$_get](4)) - dart.notNull(argStorage[S.$_get](1)) * dart.notNull(argStorage[S.$_get](3)));
      this[S._m3storage][S.$_set](0, ix);
      this[S._m3storage][S.$_set](1, iy);
      this[S._m3storage][S.$_set](2, iz);
      this[S._m3storage][S.$_set](3, jx);
      this[S._m3storage][S.$_set](4, jy);
      this[S._m3storage][S.$_set](5, jz);
      this[S._m3storage][S.$_set](6, kx);
      this[S._m3storage][S.$_set](7, ky);
      this[S._m3storage][S.$_set](8, kz);
      return det;
    }
    copyNormalMatrix(arg) {
      if (arg == null) dart.nullFailed(I[6], 533, 33, "arg");
      this.copyInverse(arg.getRotation());
      this.transpose();
    }
    setRotationX(radians) {
      if (radians == null) dart.nullFailed(I[6], 539, 28, "radians");
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[S._m3storage][S.$_set](0, 1.0);
      this[S._m3storage][S.$_set](1, 0.0);
      this[S._m3storage][S.$_set](2, 0.0);
      this[S._m3storage][S.$_set](3, 0.0);
      this[S._m3storage][S.$_set](4, c);
      this[S._m3storage][S.$_set](5, s);
      this[S._m3storage][S.$_set](6, 0.0);
      this[S._m3storage][S.$_set](7, -s);
      this[S._m3storage][S.$_set](8, c);
    }
    setRotationY(radians) {
      if (radians == null) dart.nullFailed(I[6], 554, 28, "radians");
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[S._m3storage][S.$_set](0, c);
      this[S._m3storage][S.$_set](1, 0.0);
      this[S._m3storage][S.$_set](2, s);
      this[S._m3storage][S.$_set](3, 0.0);
      this[S._m3storage][S.$_set](4, 1.0);
      this[S._m3storage][S.$_set](5, 0.0);
      this[S._m3storage][S.$_set](6, -s);
      this[S._m3storage][S.$_set](7, 0.0);
      this[S._m3storage][S.$_set](8, c);
    }
    setRotationZ(radians) {
      if (radians == null) dart.nullFailed(I[6], 569, 28, "radians");
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[S._m3storage][S.$_set](0, c);
      this[S._m3storage][S.$_set](1, s);
      this[S._m3storage][S.$_set](2, 0.0);
      this[S._m3storage][S.$_set](3, -s);
      this[S._m3storage][S.$_set](4, c);
      this[S._m3storage][S.$_set](5, 0.0);
      this[S._m3storage][S.$_set](6, 0.0);
      this[S._m3storage][S.$_set](7, 0.0);
      this[S._m3storage][S.$_set](8, 1.0);
    }
    scaleAdjoint(scale) {
      if (scale == null) dart.nullFailed(I[6], 584, 28, "scale");
      let m00 = this[S._m3storage][S.$_get](0);
      let m01 = this[S._m3storage][S.$_get](3);
      let m02 = this[S._m3storage][S.$_get](6);
      let m10 = this[S._m3storage][S.$_get](1);
      let m11 = this[S._m3storage][S.$_get](4);
      let m12 = this[S._m3storage][S.$_get](7);
      let m20 = this[S._m3storage][S.$_get](2);
      let m21 = this[S._m3storage][S.$_get](5);
      let m22 = this[S._m3storage][S.$_get](8);
      this[S._m3storage][S.$_set](0, (dart.notNull(m11) * dart.notNull(m22) - dart.notNull(m12) * dart.notNull(m21)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](1, (dart.notNull(m12) * dart.notNull(m20) - dart.notNull(m10) * dart.notNull(m22)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](2, (dart.notNull(m10) * dart.notNull(m21) - dart.notNull(m11) * dart.notNull(m20)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](3, (dart.notNull(m02) * dart.notNull(m21) - dart.notNull(m01) * dart.notNull(m22)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](4, (dart.notNull(m00) * dart.notNull(m22) - dart.notNull(m02) * dart.notNull(m20)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](5, (dart.notNull(m01) * dart.notNull(m20) - dart.notNull(m00) * dart.notNull(m21)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](6, (dart.notNull(m01) * dart.notNull(m12) - dart.notNull(m02) * dart.notNull(m11)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](7, (dart.notNull(m02) * dart.notNull(m10) - dart.notNull(m00) * dart.notNull(m12)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](8, (dart.notNull(m00) * dart.notNull(m11) - dart.notNull(m01) * dart.notNull(m10)) * dart.notNull(scale));
    }
    absoluteRotate(arg) {
      if (arg == null) dart.nullFailed(I[6], 608, 34, "arg");
      let m00 = this[S._m3storage][S.$_get](0)[S.$abs]();
      let m01 = this[S._m3storage][S.$_get](3)[S.$abs]();
      let m02 = this[S._m3storage][S.$_get](6)[S.$abs]();
      let m10 = this[S._m3storage][S.$_get](1)[S.$abs]();
      let m11 = this[S._m3storage][S.$_get](4)[S.$abs]();
      let m12 = this[S._m3storage][S.$_get](7)[S.$abs]();
      let m20 = this[S._m3storage][S.$_get](2)[S.$abs]();
      let m21 = this[S._m3storage][S.$_get](5)[S.$abs]();
      let m22 = this[S._m3storage][S.$_get](8)[S.$abs]();
      let argStorage = arg[S._v3storage];
      let x = argStorage[S.$_get](0);
      let y = argStorage[S.$_get](1);
      let z = argStorage[S.$_get](2);
      argStorage[S.$_set](0, dart.notNull(x) * m00 + dart.notNull(y) * m01 + dart.notNull(z) * m02);
      argStorage[S.$_set](1, dart.notNull(x) * m10 + dart.notNull(y) * m11 + dart.notNull(z) * m12);
      argStorage[S.$_set](2, dart.notNull(x) * m20 + dart.notNull(y) * m21 + dart.notNull(z) * m22);
      return arg;
    }
    absoluteRotate2(arg) {
      if (arg == null) dart.nullFailed(I[6], 631, 35, "arg");
      let m00 = this[S._m3storage][S.$_get](0)[S.$abs]();
      let m01 = this[S._m3storage][S.$_get](3)[S.$abs]();
      let m10 = this[S._m3storage][S.$_get](1)[S.$abs]();
      let m11 = this[S._m3storage][S.$_get](4)[S.$abs]();
      let argStorage = arg[S._v2storage];
      let x = argStorage[S.$_get](0);
      let y = argStorage[S.$_get](1);
      argStorage[S.$_set](0, dart.notNull(x) * m00 + dart.notNull(y) * m01);
      argStorage[S.$_set](1, dart.notNull(x) * m10 + dart.notNull(y) * m11);
      return arg;
    }
    transform2(arg) {
      if (arg == null) dart.nullFailed(I[6], 645, 30, "arg");
      let argStorage = arg[S._v2storage];
      let x_ = dart.notNull(this[S._m3storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m3storage][S.$_get](3)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m3storage][S.$_get](6));
      let y_ = dart.notNull(this[S._m3storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m3storage][S.$_get](4)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m3storage][S.$_get](7));
      argStorage[S.$_set](0, x_);
      argStorage[S.$_set](1, y_);
      return arg;
    }
    scale(scale) {
      if (scale == null) dart.nullFailed(I[6], 659, 21, "scale");
      this[S._m3storage][S.$_set](0, dart.notNull(this[S._m3storage][S.$_get](0)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](1, dart.notNull(this[S._m3storage][S.$_get](1)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](2, dart.notNull(this[S._m3storage][S.$_get](2)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](3, dart.notNull(this[S._m3storage][S.$_get](3)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](4, dart.notNull(this[S._m3storage][S.$_get](4)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](5, dart.notNull(this[S._m3storage][S.$_get](5)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](6, dart.notNull(this[S._m3storage][S.$_get](6)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](7, dart.notNull(this[S._m3storage][S.$_get](7)) * dart.notNull(scale));
      this[S._m3storage][S.$_set](8, dart.notNull(this[S._m3storage][S.$_get](8)) * dart.notNull(scale));
    }
    scaled(scale) {
      let t0;
      if (scale == null) dart.nullFailed(I[6], 672, 25, "scale");
      t0 = this.clone();
      return (() => {
        t0.scale(scale);
        return t0;
      })();
    }
    add(o) {
      if (o == null) dart.nullFailed(I[6], 675, 20, "o");
      let oStorage = o[S._m3storage];
      this[S._m3storage][S.$_set](0, dart.notNull(this[S._m3storage][S.$_get](0)) + dart.notNull(oStorage[S.$_get](0)));
      this[S._m3storage][S.$_set](1, dart.notNull(this[S._m3storage][S.$_get](1)) + dart.notNull(oStorage[S.$_get](1)));
      this[S._m3storage][S.$_set](2, dart.notNull(this[S._m3storage][S.$_get](2)) + dart.notNull(oStorage[S.$_get](2)));
      this[S._m3storage][S.$_set](3, dart.notNull(this[S._m3storage][S.$_get](3)) + dart.notNull(oStorage[S.$_get](3)));
      this[S._m3storage][S.$_set](4, dart.notNull(this[S._m3storage][S.$_get](4)) + dart.notNull(oStorage[S.$_get](4)));
      this[S._m3storage][S.$_set](5, dart.notNull(this[S._m3storage][S.$_get](5)) + dart.notNull(oStorage[S.$_get](5)));
      this[S._m3storage][S.$_set](6, dart.notNull(this[S._m3storage][S.$_get](6)) + dart.notNull(oStorage[S.$_get](6)));
      this[S._m3storage][S.$_set](7, dart.notNull(this[S._m3storage][S.$_get](7)) + dart.notNull(oStorage[S.$_get](7)));
      this[S._m3storage][S.$_set](8, dart.notNull(this[S._m3storage][S.$_get](8)) + dart.notNull(oStorage[S.$_get](8)));
    }
    sub(o) {
      if (o == null) dart.nullFailed(I[6], 689, 20, "o");
      let oStorage = o[S._m3storage];
      this[S._m3storage][S.$_set](0, dart.notNull(this[S._m3storage][S.$_get](0)) - dart.notNull(oStorage[S.$_get](0)));
      this[S._m3storage][S.$_set](1, dart.notNull(this[S._m3storage][S.$_get](1)) - dart.notNull(oStorage[S.$_get](1)));
      this[S._m3storage][S.$_set](2, dart.notNull(this[S._m3storage][S.$_get](2)) - dart.notNull(oStorage[S.$_get](2)));
      this[S._m3storage][S.$_set](3, dart.notNull(this[S._m3storage][S.$_get](3)) - dart.notNull(oStorage[S.$_get](3)));
      this[S._m3storage][S.$_set](4, dart.notNull(this[S._m3storage][S.$_get](4)) - dart.notNull(oStorage[S.$_get](4)));
      this[S._m3storage][S.$_set](5, dart.notNull(this[S._m3storage][S.$_get](5)) - dart.notNull(oStorage[S.$_get](5)));
      this[S._m3storage][S.$_set](6, dart.notNull(this[S._m3storage][S.$_get](6)) - dart.notNull(oStorage[S.$_get](6)));
      this[S._m3storage][S.$_set](7, dart.notNull(this[S._m3storage][S.$_get](7)) - dart.notNull(oStorage[S.$_get](7)));
      this[S._m3storage][S.$_set](8, dart.notNull(this[S._m3storage][S.$_get](8)) - dart.notNull(oStorage[S.$_get](8)));
    }
    negate() {
      this[S._m3storage][S.$_set](0, -dart.notNull(this[S._m3storage][S.$_get](0)));
      this[S._m3storage][S.$_set](1, -dart.notNull(this[S._m3storage][S.$_get](1)));
      this[S._m3storage][S.$_set](2, -dart.notNull(this[S._m3storage][S.$_get](2)));
      this[S._m3storage][S.$_set](3, -dart.notNull(this[S._m3storage][S.$_get](3)));
      this[S._m3storage][S.$_set](4, -dart.notNull(this[S._m3storage][S.$_get](4)));
      this[S._m3storage][S.$_set](5, -dart.notNull(this[S._m3storage][S.$_get](5)));
      this[S._m3storage][S.$_set](6, -dart.notNull(this[S._m3storage][S.$_get](6)));
      this[S._m3storage][S.$_set](7, -dart.notNull(this[S._m3storage][S.$_get](7)));
      this[S._m3storage][S.$_set](8, -dart.notNull(this[S._m3storage][S.$_get](8)));
    }
    multiply(arg) {
      if (arg == null) dart.nullFailed(I[6], 716, 25, "arg");
      let m00 = this[S._m3storage][S.$_get](0);
      let m01 = this[S._m3storage][S.$_get](3);
      let m02 = this[S._m3storage][S.$_get](6);
      let m10 = this[S._m3storage][S.$_get](1);
      let m11 = this[S._m3storage][S.$_get](4);
      let m12 = this[S._m3storage][S.$_get](7);
      let m20 = this[S._m3storage][S.$_get](2);
      let m21 = this[S._m3storage][S.$_get](5);
      let m22 = this[S._m3storage][S.$_get](8);
      let argStorage = arg[S._m3storage];
      let n00 = argStorage[S.$_get](0);
      let n01 = argStorage[S.$_get](3);
      let n02 = argStorage[S.$_get](6);
      let n10 = argStorage[S.$_get](1);
      let n11 = argStorage[S.$_get](4);
      let n12 = argStorage[S.$_get](7);
      let n20 = argStorage[S.$_get](2);
      let n21 = argStorage[S.$_get](5);
      let n22 = argStorage[S.$_get](8);
      this[S._m3storage][S.$_set](0, dart.notNull(m00) * dart.notNull(n00) + dart.notNull(m01) * dart.notNull(n10) + dart.notNull(m02) * dart.notNull(n20));
      this[S._m3storage][S.$_set](3, dart.notNull(m00) * dart.notNull(n01) + dart.notNull(m01) * dart.notNull(n11) + dart.notNull(m02) * dart.notNull(n21));
      this[S._m3storage][S.$_set](6, dart.notNull(m00) * dart.notNull(n02) + dart.notNull(m01) * dart.notNull(n12) + dart.notNull(m02) * dart.notNull(n22));
      this[S._m3storage][S.$_set](1, dart.notNull(m10) * dart.notNull(n00) + dart.notNull(m11) * dart.notNull(n10) + dart.notNull(m12) * dart.notNull(n20));
      this[S._m3storage][S.$_set](4, dart.notNull(m10) * dart.notNull(n01) + dart.notNull(m11) * dart.notNull(n11) + dart.notNull(m12) * dart.notNull(n21));
      this[S._m3storage][S.$_set](7, dart.notNull(m10) * dart.notNull(n02) + dart.notNull(m11) * dart.notNull(n12) + dart.notNull(m12) * dart.notNull(n22));
      this[S._m3storage][S.$_set](2, dart.notNull(m20) * dart.notNull(n00) + dart.notNull(m21) * dart.notNull(n10) + dart.notNull(m22) * dart.notNull(n20));
      this[S._m3storage][S.$_set](5, dart.notNull(m20) * dart.notNull(n01) + dart.notNull(m21) * dart.notNull(n11) + dart.notNull(m22) * dart.notNull(n21));
      this[S._m3storage][S.$_set](8, dart.notNull(m20) * dart.notNull(n02) + dart.notNull(m21) * dart.notNull(n12) + dart.notNull(m22) * dart.notNull(n22));
    }
    multiplied(arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[6], 748, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.multiply(arg);
        return t0;
      })();
    }
    transposeMultiply(arg) {
      if (arg == null) dart.nullFailed(I[6], 750, 34, "arg");
      let m00 = this[S._m3storage][S.$_get](0);
      let m01 = this[S._m3storage][S.$_get](1);
      let m02 = this[S._m3storage][S.$_get](2);
      let m10 = this[S._m3storage][S.$_get](3);
      let m11 = this[S._m3storage][S.$_get](4);
      let m12 = this[S._m3storage][S.$_get](5);
      let m20 = this[S._m3storage][S.$_get](6);
      let m21 = this[S._m3storage][S.$_get](7);
      let m22 = this[S._m3storage][S.$_get](8);
      let argStorage = arg[S._m3storage];
      this[S._m3storage][S.$_set](0, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](2)));
      this[S._m3storage][S.$_set](3, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](5)));
      this[S._m3storage][S.$_set](6, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](8)));
      this[S._m3storage][S.$_set](1, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](2)));
      this[S._m3storage][S.$_set](4, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](5)));
      this[S._m3storage][S.$_set](7, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](8)));
      this[S._m3storage][S.$_set](2, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](2)));
      this[S._m3storage][S.$_set](5, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](5)));
      this[S._m3storage][S.$_set](8, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](8)));
    }
    multiplyTranspose(arg) {
      if (arg == null) dart.nullFailed(I[6], 781, 34, "arg");
      let m00 = this[S._m3storage][S.$_get](0);
      let m01 = this[S._m3storage][S.$_get](3);
      let m02 = this[S._m3storage][S.$_get](6);
      let m10 = this[S._m3storage][S.$_get](1);
      let m11 = this[S._m3storage][S.$_get](4);
      let m12 = this[S._m3storage][S.$_get](7);
      let m20 = this[S._m3storage][S.$_get](2);
      let m21 = this[S._m3storage][S.$_get](5);
      let m22 = this[S._m3storage][S.$_get](8);
      let argStorage = arg[S._m3storage];
      this[S._m3storage][S.$_set](0, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](6)));
      this[S._m3storage][S.$_set](3, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](7)));
      this[S._m3storage][S.$_set](6, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](8)));
      this[S._m3storage][S.$_set](1, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](6)));
      this[S._m3storage][S.$_set](4, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](7)));
      this[S._m3storage][S.$_set](7, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](8)));
      this[S._m3storage][S.$_set](2, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](6)));
      this[S._m3storage][S.$_set](5, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](7)));
      this[S._m3storage][S.$_set](8, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](8)));
    }
    transform(arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[6], 814, 29, "arg");
      let argStorage = arg[S._v3storage];
      let x_ = dart.notNull(this[S._m3storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m3storage][S.$_get](3)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m3storage][S.$_get](6)) * dart.notNull(argStorage[S.$_get](2));
      let y_ = dart.notNull(this[S._m3storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m3storage][S.$_get](4)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m3storage][S.$_get](7)) * dart.notNull(argStorage[S.$_get](2));
      let z_ = dart.notNull(this[S._m3storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m3storage][S.$_get](5)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m3storage][S.$_get](8)) * dart.notNull(argStorage[S.$_get](2));
      t0 = arg;
      (() => {
        t0.x = x_;
        t0.y = y_;
        t0.z = z_;
        return t0;
      })();
      return arg;
    }
    transformed(arg, out = null) {
      if (arg == null) dart.nullFailed(I[6], 835, 31, "arg");
      if (out == null) {
        out = vector_math_64.Vector3.copy(arg);
      } else {
        out.setFrom(arg);
      }
      return this.transform(out);
    }
    copyIntoArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[6], 845, 32, "array");
      if (offset == null) dart.nullFailed(I[6], 845, 44, "offset");
      let i = offset;
      array[S.$_set](dart.notNull(i) + 8, this[S._m3storage][S.$_get](8));
      array[S.$_set](dart.notNull(i) + 7, this[S._m3storage][S.$_get](7));
      array[S.$_set](dart.notNull(i) + 6, this[S._m3storage][S.$_get](6));
      array[S.$_set](dart.notNull(i) + 5, this[S._m3storage][S.$_get](5));
      array[S.$_set](dart.notNull(i) + 4, this[S._m3storage][S.$_get](4));
      array[S.$_set](dart.notNull(i) + 3, this[S._m3storage][S.$_get](3));
      array[S.$_set](dart.notNull(i) + 2, this[S._m3storage][S.$_get](2));
      array[S.$_set](dart.notNull(i) + 1, this[S._m3storage][S.$_get](1));
      array[S.$_set](dart.notNull(i) + 0, this[S._m3storage][S.$_get](0));
    }
    copyFromArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[6], 859, 35, "array");
      if (offset == null) dart.nullFailed(I[6], 859, 47, "offset");
      let i = offset;
      this[S._m3storage][S.$_set](8, array[S.$_get](dart.notNull(i) + 8));
      this[S._m3storage][S.$_set](7, array[S.$_get](dart.notNull(i) + 7));
      this[S._m3storage][S.$_set](6, array[S.$_get](dart.notNull(i) + 6));
      this[S._m3storage][S.$_set](5, array[S.$_get](dart.notNull(i) + 5));
      this[S._m3storage][S.$_set](4, array[S.$_get](dart.notNull(i) + 4));
      this[S._m3storage][S.$_set](3, array[S.$_get](dart.notNull(i) + 3));
      this[S._m3storage][S.$_set](2, array[S.$_get](dart.notNull(i) + 2));
      this[S._m3storage][S.$_set](1, array[S.$_get](dart.notNull(i) + 1));
      this[S._m3storage][S.$_set](0, array[S.$_get](dart.notNull(i) + 0));
    }
    applyToVector3Array(array, offset = 0) {
      let t0;
      if (array == null) dart.nullFailed(I[6], 873, 49, "array");
      if (offset == null) dart.nullFailed(I[6], 873, 61, "offset");
      for (let i = 0, j = offset; i < dart.notNull(array[S.$length]); i = i + 3, j = dart.notNull(j) + 3) {
        let v = (t0 = vector_math_64.Vector3.array(array, j), (() => {
          t0.applyMatrix3(this);
          return t0;
        })());
        array[S.$_set](j, v.storage[S.$_get](0));
        array[S.$_set](dart.notNull(j) + 1, v.storage[S.$_get](1));
        array[S.$_set](dart.notNull(j) + 2, v.storage[S.$_get](2));
      }
      return array;
    }
    get right() {
      let x = this[S._m3storage][S.$_get](0);
      let y = this[S._m3storage][S.$_get](1);
      let z = this[S._m3storage][S.$_get](2);
      return vector_math_64.Vector3.new(x, y, z);
    }
    get up() {
      let x = this[S._m3storage][S.$_get](3);
      let y = this[S._m3storage][S.$_get](4);
      let z = this[S._m3storage][S.$_get](5);
      return vector_math_64.Vector3.new(x, y, z);
    }
    get forward() {
      let x = this[S._m3storage][S.$_get](6);
      let y = this[S._m3storage][S.$_get](7);
      let z = this[S._m3storage][S.$_get](8);
      return vector_math_64.Vector3.new(x, y, z);
    }
    isIdentity() {
      return this[S._m3storage][S.$_get](0) === 1.0 && this[S._m3storage][S.$_get](1) === 0.0 && this[S._m3storage][S.$_get](2) === 0.0 && this[S._m3storage][S.$_get](3) === 0.0 && this[S._m3storage][S.$_get](4) === 1.0 && this[S._m3storage][S.$_get](5) === 0.0 && this[S._m3storage][S.$_get](6) === 0.0 && this[S._m3storage][S.$_get](7) === 0.0 && this[S._m3storage][S.$_get](8) === 1.0;
    }
    isZero() {
      return this[S._m3storage][S.$_get](0) === 0.0 && this[S._m3storage][S.$_get](1) === 0.0 && this[S._m3storage][S.$_get](2) === 0.0 && this[S._m3storage][S.$_get](3) === 0.0 && this[S._m3storage][S.$_get](4) === 0.0 && this[S._m3storage][S.$_get](5) === 0.0 && this[S._m3storage][S.$_get](6) === 0.0 && this[S._m3storage][S.$_get](7) === 0.0 && this[S._m3storage][S.$_get](8) === 0.0;
    }
  };
  (vector_math_64.Matrix3.zero = function() {
    this[S._m3storage] = _native_typed_data.NativeFloat64List.new(9);
    ;
  }).prototype = vector_math_64.Matrix3.prototype;
  dart.addTypeTests(vector_math_64.Matrix3);
  dart.addTypeCaches(vector_math_64.Matrix3);
  dart.setMethodSignature(vector_math_64.Matrix3, () => ({
    __proto__: dart.getMethods(vector_math_64.Matrix3.__proto__),
    index: dart.fnType(core.int, [core.int, core.int]),
    entry: dart.fnType(core.double, [core.int, core.int]),
    setEntry: dart.fnType(dart.void, [core.int, core.int, core.double]),
    setValues: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double]),
    setColumns: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3, vector_math_64.Vector3]),
    setFrom: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    setOuter: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3]),
    splatDiagonal: dart.fnType(dart.void, [core.double]),
    setDiagonal: dart.fnType(dart.void, [vector_math_64.Vector3]),
    setUpper2x2: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    _equals: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    [S.$_equals]: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    setRow: dart.fnType(dart.void, [core.int, vector_math_64.Vector3]),
    getRow: dart.fnType(vector_math_64.Vector3, [core.int]),
    setColumn: dart.fnType(dart.void, [core.int, vector_math_64.Vector3]),
    getColumn: dart.fnType(vector_math_64.Vector3, [core.int]),
    clone: dart.fnType(vector_math_64.Matrix3, []),
    copyInto: dart.fnType(vector_math_64.Matrix3, [vector_math_64.Matrix3]),
    '*': dart.fnType(dart.dynamic, [dart.dynamic]),
    '+': dart.fnType(vector_math_64.Matrix3, [vector_math_64.Matrix3]),
    '-': dart.fnType(vector_math_64.Matrix3, [vector_math_64.Matrix3]),
    _negate: dart.fnType(vector_math_64.Matrix3, []),
    setZero: dart.fnType(dart.void, []),
    setIdentity: dart.fnType(dart.void, []),
    transposed: dart.fnType(vector_math_64.Matrix3, []),
    transpose: dart.fnType(dart.void, []),
    absolute: dart.fnType(vector_math_64.Matrix3, []),
    determinant: dart.fnType(core.double, []),
    dotRow: dart.fnType(core.double, [core.int, vector_math_64.Vector3]),
    dotColumn: dart.fnType(core.double, [core.int, vector_math_64.Vector3]),
    trace: dart.fnType(core.double, []),
    infinityNorm: dart.fnType(core.double, []),
    relativeError: dart.fnType(core.double, [vector_math_64.Matrix3]),
    absoluteError: dart.fnType(core.double, [vector_math_64.Matrix3]),
    invert: dart.fnType(core.double, []),
    copyInverse: dart.fnType(core.double, [vector_math_64.Matrix3]),
    copyNormalMatrix: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    setRotationX: dart.fnType(dart.void, [core.double]),
    setRotationY: dart.fnType(dart.void, [core.double]),
    setRotationZ: dart.fnType(dart.void, [core.double]),
    scaleAdjoint: dart.fnType(dart.void, [core.double]),
    absoluteRotate: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    absoluteRotate2: dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    transform2: dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    scale: dart.fnType(dart.void, [core.double]),
    scaled: dart.fnType(vector_math_64.Matrix3, [core.double]),
    add: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    sub: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    negate: dart.fnType(dart.void, []),
    multiply: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    multiplied: dart.fnType(vector_math_64.Matrix3, [vector_math_64.Matrix3]),
    transposeMultiply: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    multiplyTranspose: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    transform: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    transformed: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3], [dart.nullable(vector_math_64.Vector3)]),
    copyIntoArray: dart.fnType(dart.void, [core.List$(core.num)], [core.int]),
    copyFromArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int]),
    applyToVector3Array: dart.fnType(core.List$(core.double), [core.List$(core.double)], [core.int]),
    isIdentity: dart.fnType(core.bool, []),
    isZero: dart.fnType(core.bool, [])
  }));
  dart.setGetterSignature(vector_math_64.Matrix3, () => ({
    __proto__: dart.getGetters(vector_math_64.Matrix3.__proto__),
    storage: typed_data.Float64List,
    dimension: core.int,
    row0: vector_math_64.Vector3,
    row1: vector_math_64.Vector3,
    row2: vector_math_64.Vector3,
    right: vector_math_64.Vector3,
    up: vector_math_64.Vector3,
    forward: vector_math_64.Vector3
  }));
  dart.setSetterSignature(vector_math_64.Matrix3, () => ({
    __proto__: dart.getSetters(vector_math_64.Matrix3.__proto__),
    row0: vector_math_64.Vector3,
    row1: vector_math_64.Vector3,
    row2: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Matrix3, I[1]);
  dart.setFieldSignature(vector_math_64.Matrix3, () => ({
    __proto__: dart.getFields(vector_math_64.Matrix3.__proto__),
    [S._m3storage]: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.defineExtensionMethods(vector_math_64.Matrix3, ['toString', '_equals']);
  dart.defineExtensionAccessors(vector_math_64.Matrix3, ['hashCode']);
  vector_math_64.Matrix4 = class Matrix4 extends core.Object {
    get storage() {
      return this[S._m4storage];
    }
    static solve2(A, x, b) {
      let t0;
      if (A == null) dart.nullFailed(I[7], 16, 30, "A");
      if (x == null) dart.nullFailed(I[7], 16, 41, "x");
      if (b == null) dart.nullFailed(I[7], 16, 52, "b");
      let a11 = A.entry(0, 0);
      let a12 = A.entry(0, 1);
      let a21 = A.entry(1, 0);
      let a22 = A.entry(1, 1);
      let bx = dart.notNull(b.x) - dart.notNull(A[S._m4storage][S.$_get](8));
      let by = dart.notNull(b.y) - dart.notNull(A[S._m4storage][S.$_get](9));
      let det = dart.notNull(a11) * dart.notNull(a22) - dart.notNull(a12) * dart.notNull(a21);
      if (det !== 0.0) {
        det = 1.0 / det;
      }
      t0 = x;
      (() => {
        t0.x = det * (dart.notNull(a22) * bx - dart.notNull(a12) * by);
        t0.y = det * (dart.notNull(a11) * by - dart.notNull(a21) * bx);
        return t0;
      })();
    }
    static solve3(A, x, b) {
      let t0;
      if (A == null) dart.nullFailed(I[7], 35, 30, "A");
      if (x == null) dart.nullFailed(I[7], 35, 41, "x");
      if (b == null) dart.nullFailed(I[7], 35, 52, "b");
      let A0x = A.entry(0, 0);
      let A0y = A.entry(1, 0);
      let A0z = A.entry(2, 0);
      let A1x = A.entry(0, 1);
      let A1y = A.entry(1, 1);
      let A1z = A.entry(2, 1);
      let A2x = A.entry(0, 2);
      let A2y = A.entry(1, 2);
      let A2z = A.entry(2, 2);
      let bx = dart.notNull(b.x) - dart.notNull(A[S._m4storage][S.$_get](12));
      let by = dart.notNull(b.y) - dart.notNull(A[S._m4storage][S.$_get](13));
      let bz = dart.notNull(b.z) - dart.notNull(A[S._m4storage][S.$_get](14));
      let rx = null;
      let ry = null;
      let rz = null;
      let det = null;
      rx = dart.notNull(A1y) * dart.notNull(A2z) - dart.notNull(A1z) * dart.notNull(A2y);
      ry = dart.notNull(A1z) * dart.notNull(A2x) - dart.notNull(A1x) * dart.notNull(A2z);
      rz = dart.notNull(A1x) * dart.notNull(A2y) - dart.notNull(A1y) * dart.notNull(A2x);
      det = dart.notNull(A0x) * dart.notNull(rx) + dart.notNull(A0y) * dart.notNull(ry) + dart.notNull(A0z) * dart.notNull(rz);
      if (det !== 0.0) {
        det = 1.0 / dart.notNull(det);
      }
      let x_ = dart.notNull(det) * (bx * dart.notNull(rx) + by * dart.notNull(ry) + bz * dart.notNull(rz));
      rx = -(dart.notNull(A2y) * bz - dart.notNull(A2z) * by);
      ry = -(dart.notNull(A2z) * bx - dart.notNull(A2x) * bz);
      rz = -(dart.notNull(A2x) * by - dart.notNull(A2y) * bx);
      let y_ = dart.notNull(det) * (dart.notNull(A0x) * dart.notNull(rx) + dart.notNull(A0y) * dart.notNull(ry) + dart.notNull(A0z) * dart.notNull(rz));
      rx = -(by * dart.notNull(A1z) - bz * dart.notNull(A1y));
      ry = -(bz * dart.notNull(A1x) - bx * dart.notNull(A1z));
      rz = -(bx * dart.notNull(A1y) - by * dart.notNull(A1x));
      let z_ = dart.notNull(det) * (dart.notNull(A0x) * dart.notNull(rx) + dart.notNull(A0y) * dart.notNull(ry) + dart.notNull(A0z) * dart.notNull(rz));
      t0 = x;
      (() => {
        t0.x = x_;
        t0.y = y_;
        t0.z = z_;
        return t0;
      })();
    }
    static solve(A, x, b) {
      let t0;
      if (A == null) dart.nullFailed(I[7], 86, 29, "A");
      if (x == null) dart.nullFailed(I[7], 86, 40, "x");
      if (b == null) dart.nullFailed(I[7], 86, 51, "b");
      let a00 = A[S._m4storage][S.$_get](0);
      let a01 = A[S._m4storage][S.$_get](1);
      let a02 = A[S._m4storage][S.$_get](2);
      let a03 = A[S._m4storage][S.$_get](3);
      let a10 = A[S._m4storage][S.$_get](4);
      let a11 = A[S._m4storage][S.$_get](5);
      let a12 = A[S._m4storage][S.$_get](6);
      let a13 = A[S._m4storage][S.$_get](7);
      let a20 = A[S._m4storage][S.$_get](8);
      let a21 = A[S._m4storage][S.$_get](9);
      let a22 = A[S._m4storage][S.$_get](10);
      let a23 = A[S._m4storage][S.$_get](11);
      let a30 = A[S._m4storage][S.$_get](12);
      let a31 = A[S._m4storage][S.$_get](13);
      let a32 = A[S._m4storage][S.$_get](14);
      let a33 = A[S._m4storage][S.$_get](15);
      let b00 = dart.notNull(a00) * dart.notNull(a11) - dart.notNull(a01) * dart.notNull(a10);
      let b01 = dart.notNull(a00) * dart.notNull(a12) - dart.notNull(a02) * dart.notNull(a10);
      let b02 = dart.notNull(a00) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a10);
      let b03 = dart.notNull(a01) * dart.notNull(a12) - dart.notNull(a02) * dart.notNull(a11);
      let b04 = dart.notNull(a01) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a11);
      let b05 = dart.notNull(a02) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a12);
      let b06 = dart.notNull(a20) * dart.notNull(a31) - dart.notNull(a21) * dart.notNull(a30);
      let b07 = dart.notNull(a20) * dart.notNull(a32) - dart.notNull(a22) * dart.notNull(a30);
      let b08 = dart.notNull(a20) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a30);
      let b09 = dart.notNull(a21) * dart.notNull(a32) - dart.notNull(a22) * dart.notNull(a31);
      let b10 = dart.notNull(a21) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a31);
      let b11 = dart.notNull(a22) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a32);
      let bX = b.storage[S.$_get](0);
      let bY = b.storage[S.$_get](1);
      let bZ = b.storage[S.$_get](2);
      let bW = b.storage[S.$_get](3);
      let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det !== 0.0) {
        det = 1.0 / det;
      }
      t0 = x;
      (() => {
        t0.x = det * ((dart.notNull(a11) * b11 - dart.notNull(a12) * b10 + dart.notNull(a13) * b09) * dart.notNull(bX) - (dart.notNull(a10) * b11 - dart.notNull(a12) * b08 + dart.notNull(a13) * b07) * dart.notNull(bY) + (dart.notNull(a10) * b10 - dart.notNull(a11) * b08 + dart.notNull(a13) * b06) * dart.notNull(bZ) - (dart.notNull(a10) * b09 - dart.notNull(a11) * b07 + dart.notNull(a12) * b06) * dart.notNull(bW));
        t0.y = det * -((dart.notNull(a01) * b11 - dart.notNull(a02) * b10 + dart.notNull(a03) * b09) * dart.notNull(bX) - (dart.notNull(a00) * b11 - dart.notNull(a02) * b08 + dart.notNull(a03) * b07) * dart.notNull(bY) + (dart.notNull(a00) * b10 - dart.notNull(a01) * b08 + dart.notNull(a03) * b06) * dart.notNull(bZ) - (dart.notNull(a00) * b09 - dart.notNull(a01) * b07 + dart.notNull(a02) * b06) * dart.notNull(bW));
        t0.z = det * ((dart.notNull(a31) * b05 - dart.notNull(a32) * b04 + dart.notNull(a33) * b03) * dart.notNull(bX) - (dart.notNull(a30) * b05 - dart.notNull(a32) * b02 + dart.notNull(a33) * b01) * dart.notNull(bY) + (dart.notNull(a30) * b04 - dart.notNull(a31) * b02 + dart.notNull(a33) * b00) * dart.notNull(bZ) - (dart.notNull(a30) * b03 - dart.notNull(a31) * b01 + dart.notNull(a32) * b00) * dart.notNull(bW));
        t0.w = det * -((dart.notNull(a21) * b05 - dart.notNull(a22) * b04 + dart.notNull(a23) * b03) * dart.notNull(bX) - (dart.notNull(a20) * b05 - dart.notNull(a22) * b02 + dart.notNull(a23) * b01) * dart.notNull(bY) + (dart.notNull(a20) * b04 - dart.notNull(a21) * b02 + dart.notNull(a23) * b00) * dart.notNull(bZ) - (dart.notNull(a20) * b03 - dart.notNull(a21) * b01 + dart.notNull(a22) * b00) * dart.notNull(bW));
        return t0;
      })();
    }
    static tryInvert(other) {
      if (other == null) dart.nullFailed(I[7], 153, 37, "other");
      let r = new vector_math_64.Matrix4.zero();
      let determinant = r.copyInverse(other);
      if (determinant === 0.0) {
        return null;
      }
      return r;
    }
    index(row, col) {
      if (row == null) dart.nullFailed(I[7], 163, 17, "row");
      if (col == null) dart.nullFailed(I[7], 163, 26, "col");
      return dart.notNull(col) * 4 + dart.notNull(row);
    }
    entry(row, col) {
      if (row == null) dart.nullFailed(I[7], 166, 20, "row");
      if (col == null) dart.nullFailed(I[7], 166, 29, "col");
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed(null, I[7], 167, 12, "(row >= 0) && (row < dimension)");
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed(null, I[7], 168, 12, "(col >= 0) && (col < dimension)");
      return this[S._m4storage][S.$_get](this.index(row, col));
    }
    setEntry(row, col, v) {
      if (row == null) dart.nullFailed(I[7], 174, 21, "row");
      if (col == null) dart.nullFailed(I[7], 174, 30, "col");
      if (v == null) dart.nullFailed(I[7], 174, 42, "v");
      if (!(dart.notNull(row) >= 0 && dart.notNull(row) < dart.notNull(this.dimension))) dart.assertFailed(null, I[7], 175, 12, "(row >= 0) && (row < dimension)");
      if (!(dart.notNull(col) >= 0 && dart.notNull(col) < dart.notNull(this.dimension))) dart.assertFailed(null, I[7], 176, 12, "(col >= 0) && (col < dimension)");
      this[S._m4storage][S.$_set](this.index(row, col), v);
    }
    static new(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15) {
      let t0;
      if (arg0 == null) dart.nullFailed(I[7], 183, 18, "arg0");
      if (arg1 == null) dart.nullFailed(I[7], 184, 18, "arg1");
      if (arg2 == null) dart.nullFailed(I[7], 185, 18, "arg2");
      if (arg3 == null) dart.nullFailed(I[7], 186, 18, "arg3");
      if (arg4 == null) dart.nullFailed(I[7], 187, 18, "arg4");
      if (arg5 == null) dart.nullFailed(I[7], 188, 18, "arg5");
      if (arg6 == null) dart.nullFailed(I[7], 189, 18, "arg6");
      if (arg7 == null) dart.nullFailed(I[7], 190, 18, "arg7");
      if (arg8 == null) dart.nullFailed(I[7], 191, 18, "arg8");
      if (arg9 == null) dart.nullFailed(I[7], 192, 18, "arg9");
      if (arg10 == null) dart.nullFailed(I[7], 193, 18, "arg10");
      if (arg11 == null) dart.nullFailed(I[7], 194, 18, "arg11");
      if (arg12 == null) dart.nullFailed(I[7], 195, 18, "arg12");
      if (arg13 == null) dart.nullFailed(I[7], 196, 18, "arg13");
      if (arg14 == null) dart.nullFailed(I[7], 197, 18, "arg14");
      if (arg15 == null) dart.nullFailed(I[7], 198, 18, "arg15");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15);
        return t0;
      })();
    }
    static fromList(values) {
      let t0;
      if (values == null) dart.nullFailed(I[7], 204, 41, "values");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setValues(values[S.$_get](0), values[S.$_get](1), values[S.$_get](2), values[S.$_get](3), values[S.$_get](4), values[S.$_get](5), values[S.$_get](6), values[S.$_get](7), values[S.$_get](8), values[S.$_get](9), values[S.$_get](10), values[S.$_get](11), values[S.$_get](12), values[S.$_get](13), values[S.$_get](14), values[S.$_get](15));
        return t0;
      })();
    }
    static identity() {
      let t0;
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setIdentity();
        return t0;
      })();
    }
    static copy(other) {
      let t0;
      if (other == null) dart.nullFailed(I[7], 230, 32, "other");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setFrom(other);
        return t0;
      })();
    }
    static inverted(other) {
      if (other == null) dart.nullFailed(I[7], 233, 36, "other");
      let r = new vector_math_64.Matrix4.zero();
      let determinant = r.copyInverse(other);
      if (determinant === 0.0) {
        dart.throw(new core.ArgumentError.value(other, "other", "Matrix cannot be inverted"));
      }
      return r;
    }
    static columns(arg0, arg1, arg2, arg3) {
      let t0;
      if (arg0 == null) dart.nullFailed(I[7], 244, 19, "arg0");
      if (arg1 == null) dart.nullFailed(I[7], 244, 33, "arg1");
      if (arg2 == null) dart.nullFailed(I[7], 244, 47, "arg2");
      if (arg3 == null) dart.nullFailed(I[7], 244, 61, "arg3");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setColumns(arg0, arg1, arg2, arg3);
        return t0;
      })();
    }
    static outer(u, v) {
      let t0;
      if (u == null) dart.nullFailed(I[7], 248, 33, "u");
      if (v == null) dart.nullFailed(I[7], 248, 44, "v");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setOuter(u, v);
        return t0;
      })();
    }
    static rotationX(radians) {
      let t0;
      if (radians == null) dart.nullFailed(I[7], 251, 36, "radians");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0[S._m4storage][S.$_set](15, 1.0);
        t0.setRotationX(radians);
        return t0;
      })();
    }
    static rotationY(radians) {
      let t0;
      if (radians == null) dart.nullFailed(I[7], 256, 36, "radians");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0[S._m4storage][S.$_set](15, 1.0);
        t0.setRotationY(radians);
        return t0;
      })();
    }
    static rotationZ(radians) {
      let t0;
      if (radians == null) dart.nullFailed(I[7], 261, 36, "radians");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0[S._m4storage][S.$_set](15, 1.0);
        t0.setRotationZ(radians);
        return t0;
      })();
    }
    static translation(translation) {
      let t0;
      if (translation == null) dart.nullFailed(I[7], 266, 39, "translation");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setIdentity();
        t0.setTranslation(translation);
        return t0;
      })();
    }
    static translationValues(x, y, z) {
      let t0;
      if (x == null) dart.nullFailed(I[7], 271, 44, "x");
      if (y == null) dart.nullFailed(I[7], 271, 54, "y");
      if (z == null) dart.nullFailed(I[7], 271, 64, "z");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setIdentity();
        t0.setTranslationRaw(x, y, z);
        return t0;
      })();
    }
    static diagonal3(scale) {
      if (scale == null) dart.nullFailed(I[7], 277, 37, "scale");
      let m = new vector_math_64.Matrix4.zero();
      let mStorage = m[S._m4storage];
      let scaleStorage = scale[S._v3storage];
      mStorage[S.$_set](15, 1.0);
      mStorage[S.$_set](10, scaleStorage[S.$_get](2));
      mStorage[S.$_set](5, scaleStorage[S.$_get](1));
      mStorage[S.$_set](0, scaleStorage[S.$_get](0));
      return m;
    }
    static diagonal3Values(x, y, z) {
      let t0;
      if (x == null) dart.nullFailed(I[7], 289, 42, "x");
      if (y == null) dart.nullFailed(I[7], 289, 52, "y");
      if (z == null) dart.nullFailed(I[7], 289, 62, "z");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0[S._m4storage][S.$_set](15, 1.0);
        t0[S._m4storage][S.$_set](10, z);
        t0[S._m4storage][S.$_set](5, y);
        t0[S._m4storage][S.$_set](0, x);
        return t0;
      })();
    }
    static skewX(alpha) {
      if (alpha == null) dart.nullFailed(I[7], 297, 32, "alpha");
      let m = vector_math_64.Matrix4.identity();
      m[S._m4storage][S.$_set](4, math.tan(alpha));
      return m;
    }
    static skewY(beta) {
      if (beta == null) dart.nullFailed(I[7], 304, 32, "beta");
      let m = vector_math_64.Matrix4.identity();
      m[S._m4storage][S.$_set](1, math.tan(beta));
      return m;
    }
    static skew(alpha, beta) {
      if (alpha == null) dart.nullFailed(I[7], 311, 31, "alpha");
      if (beta == null) dart.nullFailed(I[7], 311, 45, "beta");
      let m = vector_math_64.Matrix4.identity();
      m[S._m4storage][S.$_set](1, math.tan(beta));
      m[S._m4storage][S.$_set](4, math.tan(alpha));
      return m;
    }
    static compose(translation, rotation, scale) {
      let t0;
      if (translation == null) dart.nullFailed(I[7], 328, 19, "translation");
      if (rotation == null) dart.nullFailed(I[7], 328, 43, "rotation");
      if (scale == null) dart.nullFailed(I[7], 328, 61, "scale");
      t0 = new vector_math_64.Matrix4.zero();
      return (() => {
        t0.setFromTranslationRotationScale(translation, rotation, scale);
        return t0;
      })();
    }
    splatDiagonal(arg) {
      if (arg == null) dart.nullFailed(I[7], 333, 29, "arg");
      this[S._m4storage][S.$_set](0, arg);
      this[S._m4storage][S.$_set](5, arg);
      this[S._m4storage][S.$_set](10, arg);
      this[S._m4storage][S.$_set](15, arg);
    }
    setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15) {
      if (arg0 == null) dart.nullFailed(I[7], 342, 14, "arg0");
      if (arg1 == null) dart.nullFailed(I[7], 343, 14, "arg1");
      if (arg2 == null) dart.nullFailed(I[7], 344, 14, "arg2");
      if (arg3 == null) dart.nullFailed(I[7], 345, 14, "arg3");
      if (arg4 == null) dart.nullFailed(I[7], 346, 14, "arg4");
      if (arg5 == null) dart.nullFailed(I[7], 347, 14, "arg5");
      if (arg6 == null) dart.nullFailed(I[7], 348, 14, "arg6");
      if (arg7 == null) dart.nullFailed(I[7], 349, 14, "arg7");
      if (arg8 == null) dart.nullFailed(I[7], 350, 14, "arg8");
      if (arg9 == null) dart.nullFailed(I[7], 351, 14, "arg9");
      if (arg10 == null) dart.nullFailed(I[7], 352, 14, "arg10");
      if (arg11 == null) dart.nullFailed(I[7], 353, 14, "arg11");
      if (arg12 == null) dart.nullFailed(I[7], 354, 14, "arg12");
      if (arg13 == null) dart.nullFailed(I[7], 355, 14, "arg13");
      if (arg14 == null) dart.nullFailed(I[7], 356, 14, "arg14");
      if (arg15 == null) dart.nullFailed(I[7], 357, 14, "arg15");
      this[S._m4storage][S.$_set](15, arg15);
      this[S._m4storage][S.$_set](14, arg14);
      this[S._m4storage][S.$_set](13, arg13);
      this[S._m4storage][S.$_set](12, arg12);
      this[S._m4storage][S.$_set](11, arg11);
      this[S._m4storage][S.$_set](10, arg10);
      this[S._m4storage][S.$_set](9, arg9);
      this[S._m4storage][S.$_set](8, arg8);
      this[S._m4storage][S.$_set](7, arg7);
      this[S._m4storage][S.$_set](6, arg6);
      this[S._m4storage][S.$_set](5, arg5);
      this[S._m4storage][S.$_set](4, arg4);
      this[S._m4storage][S.$_set](3, arg3);
      this[S._m4storage][S.$_set](2, arg2);
      this[S._m4storage][S.$_set](1, arg1);
      this[S._m4storage][S.$_set](0, arg0);
    }
    setColumns(arg0, arg1, arg2, arg3) {
      if (arg0 == null) dart.nullFailed(I[7], 377, 27, "arg0");
      if (arg1 == null) dart.nullFailed(I[7], 377, 41, "arg1");
      if (arg2 == null) dart.nullFailed(I[7], 377, 55, "arg2");
      if (arg3 == null) dart.nullFailed(I[7], 377, 69, "arg3");
      let arg0Storage = arg0[S._v4storage];
      let arg1Storage = arg1[S._v4storage];
      let arg2Storage = arg2[S._v4storage];
      let arg3Storage = arg3[S._v4storage];
      this[S._m4storage][S.$_set](0, arg0Storage[S.$_get](0));
      this[S._m4storage][S.$_set](1, arg0Storage[S.$_get](1));
      this[S._m4storage][S.$_set](2, arg0Storage[S.$_get](2));
      this[S._m4storage][S.$_set](3, arg0Storage[S.$_get](3));
      this[S._m4storage][S.$_set](4, arg1Storage[S.$_get](0));
      this[S._m4storage][S.$_set](5, arg1Storage[S.$_get](1));
      this[S._m4storage][S.$_set](6, arg1Storage[S.$_get](2));
      this[S._m4storage][S.$_set](7, arg1Storage[S.$_get](3));
      this[S._m4storage][S.$_set](8, arg2Storage[S.$_get](0));
      this[S._m4storage][S.$_set](9, arg2Storage[S.$_get](1));
      this[S._m4storage][S.$_set](10, arg2Storage[S.$_get](2));
      this[S._m4storage][S.$_set](11, arg2Storage[S.$_get](3));
      this[S._m4storage][S.$_set](12, arg3Storage[S.$_get](0));
      this[S._m4storage][S.$_set](13, arg3Storage[S.$_get](1));
      this[S._m4storage][S.$_set](14, arg3Storage[S.$_get](2));
      this[S._m4storage][S.$_set](15, arg3Storage[S.$_get](3));
    }
    setFrom(arg) {
      if (arg == null) dart.nullFailed(I[7], 401, 24, "arg");
      let argStorage = arg[S._m4storage];
      this[S._m4storage][S.$_set](15, argStorage[S.$_get](15));
      this[S._m4storage][S.$_set](14, argStorage[S.$_get](14));
      this[S._m4storage][S.$_set](13, argStorage[S.$_get](13));
      this[S._m4storage][S.$_set](12, argStorage[S.$_get](12));
      this[S._m4storage][S.$_set](11, argStorage[S.$_get](11));
      this[S._m4storage][S.$_set](10, argStorage[S.$_get](10));
      this[S._m4storage][S.$_set](9, argStorage[S.$_get](9));
      this[S._m4storage][S.$_set](8, argStorage[S.$_get](8));
      this[S._m4storage][S.$_set](7, argStorage[S.$_get](7));
      this[S._m4storage][S.$_set](6, argStorage[S.$_get](6));
      this[S._m4storage][S.$_set](5, argStorage[S.$_get](5));
      this[S._m4storage][S.$_set](4, argStorage[S.$_get](4));
      this[S._m4storage][S.$_set](3, argStorage[S.$_get](3));
      this[S._m4storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._m4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._m4storage][S.$_set](0, argStorage[S.$_get](0));
    }
    setFromTranslationRotation(arg0, arg1) {
      if (arg0 == null) dart.nullFailed(I[7], 422, 43, "arg0");
      if (arg1 == null) dart.nullFailed(I[7], 422, 60, "arg1");
      let arg1Storage = arg1[S._qStorage];
      let x = arg1Storage[S.$_get](0);
      let y = arg1Storage[S.$_get](1);
      let z = arg1Storage[S.$_get](2);
      let w = arg1Storage[S.$_get](3);
      let x2 = dart.notNull(x) + dart.notNull(x);
      let y2 = dart.notNull(y) + dart.notNull(y);
      let z2 = dart.notNull(z) + dart.notNull(z);
      let xx = dart.notNull(x) * x2;
      let xy = dart.notNull(x) * y2;
      let xz = dart.notNull(x) * z2;
      let yy = dart.notNull(y) * y2;
      let yz = dart.notNull(y) * z2;
      let zz = dart.notNull(z) * z2;
      let wx = dart.notNull(w) * x2;
      let wy = dart.notNull(w) * y2;
      let wz = dart.notNull(w) * z2;
      let arg0Storage = arg0[S._v3storage];
      this[S._m4storage][S.$_set](0, 1.0 - (yy + zz));
      this[S._m4storage][S.$_set](1, xy + wz);
      this[S._m4storage][S.$_set](2, xz - wy);
      this[S._m4storage][S.$_set](3, 0.0);
      this[S._m4storage][S.$_set](4, xy - wz);
      this[S._m4storage][S.$_set](5, 1.0 - (xx + zz));
      this[S._m4storage][S.$_set](6, yz + wx);
      this[S._m4storage][S.$_set](7, 0.0);
      this[S._m4storage][S.$_set](8, xz + wy);
      this[S._m4storage][S.$_set](9, yz - wx);
      this[S._m4storage][S.$_set](10, 1.0 - (xx + yy));
      this[S._m4storage][S.$_set](11, 0.0);
      this[S._m4storage][S.$_set](12, arg0Storage[S.$_get](0));
      this[S._m4storage][S.$_set](13, arg0Storage[S.$_get](1));
      this[S._m4storage][S.$_set](14, arg0Storage[S.$_get](2));
      this[S._m4storage][S.$_set](15, 1.0);
    }
    setFromTranslationRotationScale(translation, rotation, scale) {
      if (translation == null) dart.nullFailed(I[7], 462, 15, "translation");
      if (rotation == null) dart.nullFailed(I[7], 462, 39, "rotation");
      if (scale == null) dart.nullFailed(I[7], 462, 57, "scale");
      this.setFromTranslationRotation(translation, rotation);
      this.scale(scale);
    }
    setUpper2x2(arg) {
      if (arg == null) dart.nullFailed(I[7], 468, 28, "arg");
      let argStorage = arg[S._m2storage];
      this[S._m4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._m4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._m4storage][S.$_set](4, argStorage[S.$_get](2));
      this[S._m4storage][S.$_set](5, argStorage[S.$_get](3));
    }
    setDiagonal(arg) {
      if (arg == null) dart.nullFailed(I[7], 477, 28, "arg");
      let argStorage = arg[S._v4storage];
      this[S._m4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._m4storage][S.$_set](5, argStorage[S.$_get](1));
      this[S._m4storage][S.$_set](10, argStorage[S.$_get](2));
      this[S._m4storage][S.$_set](15, argStorage[S.$_get](3));
    }
    setOuter(u, v) {
      if (u == null) dart.nullFailed(I[7], 485, 25, "u");
      if (v == null) dart.nullFailed(I[7], 485, 36, "v");
      let uStorage = u[S._v4storage];
      let vStorage = v[S._v4storage];
      this[S._m4storage][S.$_set](0, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m4storage][S.$_set](1, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m4storage][S.$_set](2, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](2)));
      this[S._m4storage][S.$_set](3, dart.notNull(uStorage[S.$_get](0)) * dart.notNull(vStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](4, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m4storage][S.$_set](5, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m4storage][S.$_set](6, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](2)));
      this[S._m4storage][S.$_set](7, dart.notNull(uStorage[S.$_get](1)) * dart.notNull(vStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](8, dart.notNull(uStorage[S.$_get](2)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m4storage][S.$_set](9, dart.notNull(uStorage[S.$_get](2)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m4storage][S.$_set](10, dart.notNull(uStorage[S.$_get](2)) * dart.notNull(vStorage[S.$_get](2)));
      this[S._m4storage][S.$_set](11, dart.notNull(uStorage[S.$_get](2)) * dart.notNull(vStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](12, dart.notNull(uStorage[S.$_get](3)) * dart.notNull(vStorage[S.$_get](0)));
      this[S._m4storage][S.$_set](13, dart.notNull(uStorage[S.$_get](3)) * dart.notNull(vStorage[S.$_get](1)));
      this[S._m4storage][S.$_set](14, dart.notNull(uStorage[S.$_get](3)) * dart.notNull(vStorage[S.$_get](2)));
      this[S._m4storage][S.$_set](15, dart.notNull(uStorage[S.$_get](3)) * dart.notNull(vStorage[S.$_get](3)));
    }
    toString() {
      return "[0] " + dart.str(this.getRow(0)) + "\n[1] " + dart.str(this.getRow(1)) + "\n" + "[2] " + dart.str(this.getRow(2)) + "\n[3] " + dart.str(this.getRow(3)) + "\n";
    }
    get dimension() {
      return 4;
    }
    _get(i) {
      if (i == null) dart.nullFailed(I[7], 515, 26, "i");
      return this[S._m4storage][S.$_get](i);
    }
    _set(i, v$) {
      let v = v$;
      if (i == null) dart.nullFailed(I[7], 518, 25, "i");
      if (v == null) dart.nullFailed(I[7], 518, 35, "v");
      this[S._m4storage][S.$_set](i, v);
      return v$;
    }
    _equals(other) {
      if (other == null) return false;
      return vector_math_64.Matrix4.is(other) && this[S._m4storage][S.$_get](0) == other[S._m4storage][S.$_get](0) && this[S._m4storage][S.$_get](1) == other[S._m4storage][S.$_get](1) && this[S._m4storage][S.$_get](2) == other[S._m4storage][S.$_get](2) && this[S._m4storage][S.$_get](3) == other[S._m4storage][S.$_get](3) && this[S._m4storage][S.$_get](4) == other[S._m4storage][S.$_get](4) && this[S._m4storage][S.$_get](5) == other[S._m4storage][S.$_get](5) && this[S._m4storage][S.$_get](6) == other[S._m4storage][S.$_get](6) && this[S._m4storage][S.$_get](7) == other[S._m4storage][S.$_get](7) && this[S._m4storage][S.$_get](8) == other[S._m4storage][S.$_get](8) && this[S._m4storage][S.$_get](9) == other[S._m4storage][S.$_get](9) && this[S._m4storage][S.$_get](10) == other[S._m4storage][S.$_get](10) && this[S._m4storage][S.$_get](11) == other[S._m4storage][S.$_get](11) && this[S._m4storage][S.$_get](12) == other[S._m4storage][S.$_get](12) && this[S._m4storage][S.$_get](13) == other[S._m4storage][S.$_get](13) && this[S._m4storage][S.$_get](14) == other[S._m4storage][S.$_get](14) && this[S._m4storage][S.$_get](15) == other[S._m4storage][S.$_get](15);
    }
    get hashCode() {
      return hash.hashObjects(this[S._m4storage]);
    }
    get row0() {
      return this.getRow(0);
    }
    get row1() {
      return this.getRow(1);
    }
    get row2() {
      return this.getRow(2);
    }
    get row3() {
      return this.getRow(3);
    }
    set row0(arg) {
      if (arg == null) dart.nullFailed(I[7], 559, 20, "arg");
      return this.setRow(0, arg);
    }
    set row1(arg) {
      if (arg == null) dart.nullFailed(I[7], 562, 20, "arg");
      return this.setRow(1, arg);
    }
    set row2(arg) {
      if (arg == null) dart.nullFailed(I[7], 565, 20, "arg");
      return this.setRow(2, arg);
    }
    set row3(arg) {
      if (arg == null) dart.nullFailed(I[7], 568, 20, "arg");
      return this.setRow(3, arg);
    }
    setRow(row, arg) {
      if (row == null) dart.nullFailed(I[7], 571, 19, "row");
      if (arg == null) dart.nullFailed(I[7], 571, 32, "arg");
      let argStorage = arg[S._v4storage];
      this[S._m4storage][S.$_set](this.index(row, 0), argStorage[S.$_get](0));
      this[S._m4storage][S.$_set](this.index(row, 1), argStorage[S.$_get](1));
      this[S._m4storage][S.$_set](this.index(row, 2), argStorage[S.$_get](2));
      this[S._m4storage][S.$_set](this.index(row, 3), argStorage[S.$_get](3));
    }
    getRow(row) {
      if (row == null) dart.nullFailed(I[7], 580, 22, "row");
      let r = new vector_math_64.Vector4.zero();
      let rStorage = r[S._v4storage];
      rStorage[S.$_set](0, this[S._m4storage][S.$_get](this.index(row, 0)));
      rStorage[S.$_set](1, this[S._m4storage][S.$_get](this.index(row, 1)));
      rStorage[S.$_set](2, this[S._m4storage][S.$_get](this.index(row, 2)));
      rStorage[S.$_set](3, this[S._m4storage][S.$_get](this.index(row, 3)));
      return r;
    }
    setColumn(column, arg) {
      if (column == null) dart.nullFailed(I[7], 591, 22, "column");
      if (arg == null) dart.nullFailed(I[7], 591, 38, "arg");
      let entry = dart.notNull(column) * 4;
      let argStorage = arg[S._v4storage];
      this[S._m4storage][S.$_set](entry + 3, argStorage[S.$_get](3));
      this[S._m4storage][S.$_set](entry + 2, argStorage[S.$_get](2));
      this[S._m4storage][S.$_set](entry + 1, argStorage[S.$_get](1));
      this[S._m4storage][S.$_set](entry + 0, argStorage[S.$_get](0));
    }
    getColumn(column) {
      if (column == null) dart.nullFailed(I[7], 601, 25, "column");
      let r = new vector_math_64.Vector4.zero();
      let rStorage = r[S._v4storage];
      let entry = dart.notNull(column) * 4;
      rStorage[S.$_set](3, this[S._m4storage][S.$_get](entry + 3));
      rStorage[S.$_set](2, this[S._m4storage][S.$_get](entry + 2));
      rStorage[S.$_set](1, this[S._m4storage][S.$_get](entry + 1));
      rStorage[S.$_set](0, this[S._m4storage][S.$_get](entry + 0));
      return r;
    }
    clone() {
      return vector_math_64.Matrix4.copy(this);
    }
    copyInto(arg) {
      if (arg == null) dart.nullFailed(I[7], 616, 28, "arg");
      let argStorage = arg[S._m4storage];
      argStorage[S.$_set](0, this[S._m4storage][S.$_get](0));
      argStorage[S.$_set](1, this[S._m4storage][S.$_get](1));
      argStorage[S.$_set](2, this[S._m4storage][S.$_get](2));
      argStorage[S.$_set](3, this[S._m4storage][S.$_get](3));
      argStorage[S.$_set](4, this[S._m4storage][S.$_get](4));
      argStorage[S.$_set](5, this[S._m4storage][S.$_get](5));
      argStorage[S.$_set](6, this[S._m4storage][S.$_get](6));
      argStorage[S.$_set](7, this[S._m4storage][S.$_get](7));
      argStorage[S.$_set](8, this[S._m4storage][S.$_get](8));
      argStorage[S.$_set](9, this[S._m4storage][S.$_get](9));
      argStorage[S.$_set](10, this[S._m4storage][S.$_get](10));
      argStorage[S.$_set](11, this[S._m4storage][S.$_get](11));
      argStorage[S.$_set](12, this[S._m4storage][S.$_get](12));
      argStorage[S.$_set](13, this[S._m4storage][S.$_get](13));
      argStorage[S.$_set](14, this[S._m4storage][S.$_get](14));
      argStorage[S.$_set](15, this[S._m4storage][S.$_get](15));
      return arg;
    }
    _negate() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.negate();
        return t0;
      })();
    }
    ['*'](arg) {
      if (typeof arg == 'number') {
        return this.scaled(arg);
      }
      if (vector_math_64.Vector4.is(arg)) {
        return this.transformed(arg);
      }
      if (vector_math_64.Vector3.is(arg)) {
        return this.transformed3(arg);
      }
      if (vector_math_64.Matrix4.is(arg)) {
        return this.multiplied(arg);
      }
      dart.throw(new core.ArgumentError.new(arg));
    }
    ['+'](arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[7], 658, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.add(arg);
        return t0;
      })();
    }
    ['-'](arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[7], 661, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.sub(arg);
        return t0;
      })();
    }
    translate(x, y = 0, z = 0) {
      if (y == null) dart.nullFailed(I[7], 664, 37, "y");
      if (z == null) dart.nullFailed(I[7], 664, 53, "z");
      let tx = null;
      let ty = null;
      let tz = null;
      let tw = vector_math_64.Vector4.is(x) ? x.w : 1.0;
      if (vector_math_64.Vector3.is(x)) {
        tx = x.x;
        ty = x.y;
        tz = x.z;
      } else if (vector_math_64.Vector4.is(x)) {
        tx = x.x;
        ty = x.y;
        tz = x.z;
      } else if (typeof x == 'number') {
        tx = x;
        ty = y;
        tz = z;
      } else {
        dart.throw(new core.UnimplementedError.new());
      }
      let t1 = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(tx) + dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(ty) + dart.notNull(this[S._m4storage][S.$_get](8)) * dart.notNull(tz) + dart.notNull(this[S._m4storage][S.$_get](12)) * dart.notNull(tw);
      let t2 = dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(tx) + dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(ty) + dart.notNull(this[S._m4storage][S.$_get](9)) * dart.notNull(tz) + dart.notNull(this[S._m4storage][S.$_get](13)) * dart.notNull(tw);
      let t3 = dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(tx) + dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(ty) + dart.notNull(this[S._m4storage][S.$_get](10)) * dart.notNull(tz) + dart.notNull(this[S._m4storage][S.$_get](14)) * dart.notNull(tw);
      let t4 = dart.notNull(this[S._m4storage][S.$_get](3)) * dart.notNull(tx) + dart.notNull(this[S._m4storage][S.$_get](7)) * dart.notNull(ty) + dart.notNull(this[S._m4storage][S.$_get](11)) * dart.notNull(tz) + dart.notNull(this[S._m4storage][S.$_get](15)) * dart.notNull(tw);
      this[S._m4storage][S.$_set](12, t1);
      this[S._m4storage][S.$_set](13, t2);
      this[S._m4storage][S.$_set](14, t3);
      this[S._m4storage][S.$_set](15, t4);
    }
    leftTranslate(x, y = 0, z = 0) {
      let t1, t0, t1$, t0$, t1$0, t0$0, t1$1, t0$1, t1$2, t0$2, t1$3, t0$3, t1$4, t0$4, t1$5, t0$5, t1$6, t0$6, t1$7, t0$7, t1$8, t0$8, t1$9, t0$9;
      if (y == null) dart.nullFailed(I[7], 708, 41, "y");
      if (z == null) dart.nullFailed(I[7], 708, 57, "z");
      let tx = null;
      let ty = null;
      let tz = null;
      let tw = vector_math_64.Vector4.is(x) ? x.w : 1.0;
      if (vector_math_64.Vector3.is(x)) {
        tx = x.x;
        ty = x.y;
        tz = x.z;
      } else if (vector_math_64.Vector4.is(x)) {
        tx = x.x;
        ty = x.y;
        tz = x.z;
      } else if (typeof x == 'number') {
        tx = x;
        ty = y;
        tz = z;
      } else {
        dart.throw(new core.UnimplementedError.new());
      }
      t0 = this[S._m4storage];
      t1 = 0;
      t0[S.$_set](t1, dart.notNull(t0[S.$_get](t1)) + dart.notNull(tx) * dart.notNull(this[S._m4storage][S.$_get](3)));
      t0$ = this[S._m4storage];
      t1$ = 1;
      t0$[S.$_set](t1$, dart.notNull(t0$[S.$_get](t1$)) + dart.notNull(ty) * dart.notNull(this[S._m4storage][S.$_get](3)));
      t0$0 = this[S._m4storage];
      t1$0 = 2;
      t0$0[S.$_set](t1$0, dart.notNull(t0$0[S.$_get](t1$0)) + dart.notNull(tz) * dart.notNull(this[S._m4storage][S.$_get](3)));
      this[S._m4storage][S.$_set](3, dart.notNull(tw) * dart.notNull(this[S._m4storage][S.$_get](3)));
      t0$1 = this[S._m4storage];
      t1$1 = 4;
      t0$1[S.$_set](t1$1, dart.notNull(t0$1[S.$_get](t1$1)) + dart.notNull(tx) * dart.notNull(this[S._m4storage][S.$_get](7)));
      t0$2 = this[S._m4storage];
      t1$2 = 5;
      t0$2[S.$_set](t1$2, dart.notNull(t0$2[S.$_get](t1$2)) + dart.notNull(ty) * dart.notNull(this[S._m4storage][S.$_get](7)));
      t0$3 = this[S._m4storage];
      t1$3 = 6;
      t0$3[S.$_set](t1$3, dart.notNull(t0$3[S.$_get](t1$3)) + dart.notNull(tz) * dart.notNull(this[S._m4storage][S.$_get](7)));
      this[S._m4storage][S.$_set](7, dart.notNull(tw) * dart.notNull(this[S._m4storage][S.$_get](7)));
      t0$4 = this[S._m4storage];
      t1$4 = 8;
      t0$4[S.$_set](t1$4, dart.notNull(t0$4[S.$_get](t1$4)) + dart.notNull(tx) * dart.notNull(this[S._m4storage][S.$_get](11)));
      t0$5 = this[S._m4storage];
      t1$5 = 9;
      t0$5[S.$_set](t1$5, dart.notNull(t0$5[S.$_get](t1$5)) + dart.notNull(ty) * dart.notNull(this[S._m4storage][S.$_get](11)));
      t0$6 = this[S._m4storage];
      t1$6 = 10;
      t0$6[S.$_set](t1$6, dart.notNull(t0$6[S.$_get](t1$6)) + dart.notNull(tz) * dart.notNull(this[S._m4storage][S.$_get](11)));
      this[S._m4storage][S.$_set](11, dart.notNull(tw) * dart.notNull(this[S._m4storage][S.$_get](11)));
      t0$7 = this[S._m4storage];
      t1$7 = 12;
      t0$7[S.$_set](t1$7, dart.notNull(t0$7[S.$_get](t1$7)) + dart.notNull(tx) * dart.notNull(this[S._m4storage][S.$_get](15)));
      t0$8 = this[S._m4storage];
      t1$8 = 13;
      t0$8[S.$_set](t1$8, dart.notNull(t0$8[S.$_get](t1$8)) + dart.notNull(ty) * dart.notNull(this[S._m4storage][S.$_get](15)));
      t0$9 = this[S._m4storage];
      t1$9 = 14;
      t0$9[S.$_set](t1$9, dart.notNull(t0$9[S.$_get](t1$9)) + dart.notNull(tz) * dart.notNull(this[S._m4storage][S.$_get](15)));
      this[S._m4storage][S.$_set](15, dart.notNull(tw) * dart.notNull(this[S._m4storage][S.$_get](15)));
    }
    rotate(axis, angle) {
      if (axis == null) dart.nullFailed(I[7], 755, 23, "axis");
      if (angle == null) dart.nullFailed(I[7], 755, 36, "angle");
      let len = axis.length;
      let axisStorage = axis[S._v3storage];
      let x = dart.notNull(axisStorage[S.$_get](0)) / dart.notNull(len);
      let y = dart.notNull(axisStorage[S.$_get](1)) / dart.notNull(len);
      let z = dart.notNull(axisStorage[S.$_get](2)) / dart.notNull(len);
      let c = math.cos(angle);
      let s = math.sin(angle);
      let C = 1.0 - c;
      let m11 = x * x * C + c;
      let m12 = x * y * C - z * s;
      let m13 = x * z * C + y * s;
      let m21 = y * x * C + z * s;
      let m22 = y * y * C + c;
      let m23 = y * z * C - x * s;
      let m31 = z * x * C - y * s;
      let m32 = z * y * C + x * s;
      let m33 = z * z * C + c;
      let t1 = dart.notNull(this[S._m4storage][S.$_get](0)) * m11 + dart.notNull(this[S._m4storage][S.$_get](4)) * m21 + dart.notNull(this[S._m4storage][S.$_get](8)) * m31;
      let t2 = dart.notNull(this[S._m4storage][S.$_get](1)) * m11 + dart.notNull(this[S._m4storage][S.$_get](5)) * m21 + dart.notNull(this[S._m4storage][S.$_get](9)) * m31;
      let t3 = dart.notNull(this[S._m4storage][S.$_get](2)) * m11 + dart.notNull(this[S._m4storage][S.$_get](6)) * m21 + dart.notNull(this[S._m4storage][S.$_get](10)) * m31;
      let t4 = dart.notNull(this[S._m4storage][S.$_get](3)) * m11 + dart.notNull(this[S._m4storage][S.$_get](7)) * m21 + dart.notNull(this[S._m4storage][S.$_get](11)) * m31;
      let t5 = dart.notNull(this[S._m4storage][S.$_get](0)) * m12 + dart.notNull(this[S._m4storage][S.$_get](4)) * m22 + dart.notNull(this[S._m4storage][S.$_get](8)) * m32;
      let t6 = dart.notNull(this[S._m4storage][S.$_get](1)) * m12 + dart.notNull(this[S._m4storage][S.$_get](5)) * m22 + dart.notNull(this[S._m4storage][S.$_get](9)) * m32;
      let t7 = dart.notNull(this[S._m4storage][S.$_get](2)) * m12 + dart.notNull(this[S._m4storage][S.$_get](6)) * m22 + dart.notNull(this[S._m4storage][S.$_get](10)) * m32;
      let t8 = dart.notNull(this[S._m4storage][S.$_get](3)) * m12 + dart.notNull(this[S._m4storage][S.$_get](7)) * m22 + dart.notNull(this[S._m4storage][S.$_get](11)) * m32;
      let t9 = dart.notNull(this[S._m4storage][S.$_get](0)) * m13 + dart.notNull(this[S._m4storage][S.$_get](4)) * m23 + dart.notNull(this[S._m4storage][S.$_get](8)) * m33;
      let t10 = dart.notNull(this[S._m4storage][S.$_get](1)) * m13 + dart.notNull(this[S._m4storage][S.$_get](5)) * m23 + dart.notNull(this[S._m4storage][S.$_get](9)) * m33;
      let t11 = dart.notNull(this[S._m4storage][S.$_get](2)) * m13 + dart.notNull(this[S._m4storage][S.$_get](6)) * m23 + dart.notNull(this[S._m4storage][S.$_get](10)) * m33;
      let t12 = dart.notNull(this[S._m4storage][S.$_get](3)) * m13 + dart.notNull(this[S._m4storage][S.$_get](7)) * m23 + dart.notNull(this[S._m4storage][S.$_get](11)) * m33;
      this[S._m4storage][S.$_set](0, t1);
      this[S._m4storage][S.$_set](1, t2);
      this[S._m4storage][S.$_set](2, t3);
      this[S._m4storage][S.$_set](3, t4);
      this[S._m4storage][S.$_set](4, t5);
      this[S._m4storage][S.$_set](5, t6);
      this[S._m4storage][S.$_set](6, t7);
      this[S._m4storage][S.$_set](7, t8);
      this[S._m4storage][S.$_set](8, t9);
      this[S._m4storage][S.$_set](9, t10);
      this[S._m4storage][S.$_set](10, t11);
      this[S._m4storage][S.$_set](11, t12);
    }
    rotateX(angle) {
      if (angle == null) dart.nullFailed(I[7], 802, 23, "angle");
      let cosAngle = math.cos(angle);
      let sinAngle = math.sin(angle);
      let t1 = dart.notNull(this[S._m4storage][S.$_get](4)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](8)) * sinAngle;
      let t2 = dart.notNull(this[S._m4storage][S.$_get](5)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](9)) * sinAngle;
      let t3 = dart.notNull(this[S._m4storage][S.$_get](6)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](10)) * sinAngle;
      let t4 = dart.notNull(this[S._m4storage][S.$_get](7)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](11)) * sinAngle;
      let t5 = dart.notNull(this[S._m4storage][S.$_get](4)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](8)) * cosAngle;
      let t6 = dart.notNull(this[S._m4storage][S.$_get](5)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](9)) * cosAngle;
      let t7 = dart.notNull(this[S._m4storage][S.$_get](6)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](10)) * cosAngle;
      let t8 = dart.notNull(this[S._m4storage][S.$_get](7)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](11)) * cosAngle;
      this[S._m4storage][S.$_set](4, t1);
      this[S._m4storage][S.$_set](5, t2);
      this[S._m4storage][S.$_set](6, t3);
      this[S._m4storage][S.$_set](7, t4);
      this[S._m4storage][S.$_set](8, t5);
      this[S._m4storage][S.$_set](9, t6);
      this[S._m4storage][S.$_set](10, t7);
      this[S._m4storage][S.$_set](11, t8);
    }
    rotateY(angle) {
      if (angle == null) dart.nullFailed(I[7], 824, 23, "angle");
      let cosAngle = math.cos(angle);
      let sinAngle = math.sin(angle);
      let t1 = dart.notNull(this[S._m4storage][S.$_get](0)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](8)) * -sinAngle;
      let t2 = dart.notNull(this[S._m4storage][S.$_get](1)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](9)) * -sinAngle;
      let t3 = dart.notNull(this[S._m4storage][S.$_get](2)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](10)) * -sinAngle;
      let t4 = dart.notNull(this[S._m4storage][S.$_get](3)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](11)) * -sinAngle;
      let t5 = dart.notNull(this[S._m4storage][S.$_get](0)) * sinAngle + dart.notNull(this[S._m4storage][S.$_get](8)) * cosAngle;
      let t6 = dart.notNull(this[S._m4storage][S.$_get](1)) * sinAngle + dart.notNull(this[S._m4storage][S.$_get](9)) * cosAngle;
      let t7 = dart.notNull(this[S._m4storage][S.$_get](2)) * sinAngle + dart.notNull(this[S._m4storage][S.$_get](10)) * cosAngle;
      let t8 = dart.notNull(this[S._m4storage][S.$_get](3)) * sinAngle + dart.notNull(this[S._m4storage][S.$_get](11)) * cosAngle;
      this[S._m4storage][S.$_set](0, t1);
      this[S._m4storage][S.$_set](1, t2);
      this[S._m4storage][S.$_set](2, t3);
      this[S._m4storage][S.$_set](3, t4);
      this[S._m4storage][S.$_set](8, t5);
      this[S._m4storage][S.$_set](9, t6);
      this[S._m4storage][S.$_set](10, t7);
      this[S._m4storage][S.$_set](11, t8);
    }
    rotateZ(angle) {
      if (angle == null) dart.nullFailed(I[7], 846, 23, "angle");
      let cosAngle = math.cos(angle);
      let sinAngle = math.sin(angle);
      let t1 = dart.notNull(this[S._m4storage][S.$_get](0)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](4)) * sinAngle;
      let t2 = dart.notNull(this[S._m4storage][S.$_get](1)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](5)) * sinAngle;
      let t3 = dart.notNull(this[S._m4storage][S.$_get](2)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](6)) * sinAngle;
      let t4 = dart.notNull(this[S._m4storage][S.$_get](3)) * cosAngle + dart.notNull(this[S._m4storage][S.$_get](7)) * sinAngle;
      let t5 = dart.notNull(this[S._m4storage][S.$_get](0)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](4)) * cosAngle;
      let t6 = dart.notNull(this[S._m4storage][S.$_get](1)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](5)) * cosAngle;
      let t7 = dart.notNull(this[S._m4storage][S.$_get](2)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](6)) * cosAngle;
      let t8 = dart.notNull(this[S._m4storage][S.$_get](3)) * -sinAngle + dart.notNull(this[S._m4storage][S.$_get](7)) * cosAngle;
      this[S._m4storage][S.$_set](0, t1);
      this[S._m4storage][S.$_set](1, t2);
      this[S._m4storage][S.$_set](2, t3);
      this[S._m4storage][S.$_set](3, t4);
      this[S._m4storage][S.$_set](4, t5);
      this[S._m4storage][S.$_set](5, t6);
      this[S._m4storage][S.$_set](6, t7);
      this[S._m4storage][S.$_set](7, t8);
    }
    scale(x, y = null, z = null) {
      let t0, t0$, t1, t0$0, t1$, t0$1, t1$0, t0$2, t1$1, t0$3, t1$2, t0$4, t1$3, t0$5, t1$4, t0$6, t1$5, t0$7, t1$6, t0$8, t1$7, t0$9, t1$8, t0$10, t1$9, t0$11, t1$10, t0$12, t1$11, t0$13, t1$12, t0$14, t1$13, t0$15;
      let sx = null;
      let sy = null;
      let sz = null;
      let sw = vector_math_64.Vector4.is(x) ? x.w : 1.0;
      if (vector_math_64.Vector3.is(x)) {
        sx = x.x;
        sy = x.y;
        sz = x.z;
      } else if (vector_math_64.Vector4.is(x)) {
        sx = x.x;
        sy = x.y;
        sz = x.z;
      } else if (typeof x == 'number') {
        sx = x;
        sy = (t0 = y, t0 == null ? x : t0);
        sz = (t0$ = z, t0$ == null ? x : t0$);
      } else {
        dart.throw(new core.UnimplementedError.new());
      }
      t0$0 = this[S._m4storage];
      t1 = 0;
      t0$0[S.$_set](t1, dart.notNull(t0$0[S.$_get](t1)) * dart.notNull(sx));
      t0$1 = this[S._m4storage];
      t1$ = 1;
      t0$1[S.$_set](t1$, dart.notNull(t0$1[S.$_get](t1$)) * dart.notNull(sx));
      t0$2 = this[S._m4storage];
      t1$0 = 2;
      t0$2[S.$_set](t1$0, dart.notNull(t0$2[S.$_get](t1$0)) * dart.notNull(sx));
      t0$3 = this[S._m4storage];
      t1$1 = 3;
      t0$3[S.$_set](t1$1, dart.notNull(t0$3[S.$_get](t1$1)) * dart.notNull(sx));
      t0$4 = this[S._m4storage];
      t1$2 = 4;
      t0$4[S.$_set](t1$2, dart.notNull(t0$4[S.$_get](t1$2)) * dart.notNull(sy));
      t0$5 = this[S._m4storage];
      t1$3 = 5;
      t0$5[S.$_set](t1$3, dart.notNull(t0$5[S.$_get](t1$3)) * dart.notNull(sy));
      t0$6 = this[S._m4storage];
      t1$4 = 6;
      t0$6[S.$_set](t1$4, dart.notNull(t0$6[S.$_get](t1$4)) * dart.notNull(sy));
      t0$7 = this[S._m4storage];
      t1$5 = 7;
      t0$7[S.$_set](t1$5, dart.notNull(t0$7[S.$_get](t1$5)) * dart.notNull(sy));
      t0$8 = this[S._m4storage];
      t1$6 = 8;
      t0$8[S.$_set](t1$6, dart.notNull(t0$8[S.$_get](t1$6)) * dart.notNull(sz));
      t0$9 = this[S._m4storage];
      t1$7 = 9;
      t0$9[S.$_set](t1$7, dart.notNull(t0$9[S.$_get](t1$7)) * dart.notNull(sz));
      t0$10 = this[S._m4storage];
      t1$8 = 10;
      t0$10[S.$_set](t1$8, dart.notNull(t0$10[S.$_get](t1$8)) * dart.notNull(sz));
      t0$11 = this[S._m4storage];
      t1$9 = 11;
      t0$11[S.$_set](t1$9, dart.notNull(t0$11[S.$_get](t1$9)) * dart.notNull(sz));
      t0$12 = this[S._m4storage];
      t1$10 = 12;
      t0$12[S.$_set](t1$10, dart.notNull(t0$12[S.$_get](t1$10)) * dart.notNull(sw));
      t0$13 = this[S._m4storage];
      t1$11 = 13;
      t0$13[S.$_set](t1$11, dart.notNull(t0$13[S.$_get](t1$11)) * dart.notNull(sw));
      t0$14 = this[S._m4storage];
      t1$12 = 14;
      t0$14[S.$_set](t1$12, dart.notNull(t0$14[S.$_get](t1$12)) * dart.notNull(sw));
      t0$15 = this[S._m4storage];
      t1$13 = 15;
      t0$15[S.$_set](t1$13, dart.notNull(t0$15[S.$_get](t1$13)) * dart.notNull(sw));
    }
    scaled(x, y = null, z = null) {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.scale(x, y, z);
        return t0;
      })();
    }
    setZero() {
      this[S._m4storage][S.$_set](0, 0.0);
      this[S._m4storage][S.$_set](1, 0.0);
      this[S._m4storage][S.$_set](2, 0.0);
      this[S._m4storage][S.$_set](3, 0.0);
      this[S._m4storage][S.$_set](4, 0.0);
      this[S._m4storage][S.$_set](5, 0.0);
      this[S._m4storage][S.$_set](6, 0.0);
      this[S._m4storage][S.$_set](7, 0.0);
      this[S._m4storage][S.$_set](8, 0.0);
      this[S._m4storage][S.$_set](9, 0.0);
      this[S._m4storage][S.$_set](10, 0.0);
      this[S._m4storage][S.$_set](11, 0.0);
      this[S._m4storage][S.$_set](12, 0.0);
      this[S._m4storage][S.$_set](13, 0.0);
      this[S._m4storage][S.$_set](14, 0.0);
      this[S._m4storage][S.$_set](15, 0.0);
    }
    setIdentity() {
      this[S._m4storage][S.$_set](0, 1.0);
      this[S._m4storage][S.$_set](1, 0.0);
      this[S._m4storage][S.$_set](2, 0.0);
      this[S._m4storage][S.$_set](3, 0.0);
      this[S._m4storage][S.$_set](4, 0.0);
      this[S._m4storage][S.$_set](5, 1.0);
      this[S._m4storage][S.$_set](6, 0.0);
      this[S._m4storage][S.$_set](7, 0.0);
      this[S._m4storage][S.$_set](8, 0.0);
      this[S._m4storage][S.$_set](9, 0.0);
      this[S._m4storage][S.$_set](10, 1.0);
      this[S._m4storage][S.$_set](11, 0.0);
      this[S._m4storage][S.$_set](12, 0.0);
      this[S._m4storage][S.$_set](13, 0.0);
      this[S._m4storage][S.$_set](14, 0.0);
      this[S._m4storage][S.$_set](15, 1.0);
    }
    transposed() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.transpose();
        return t0;
      })();
    }
    transpose() {
      let temp = null;
      temp = this[S._m4storage][S.$_get](4);
      this[S._m4storage][S.$_set](4, this[S._m4storage][S.$_get](1));
      this[S._m4storage][S.$_set](1, temp);
      temp = this[S._m4storage][S.$_get](8);
      this[S._m4storage][S.$_set](8, this[S._m4storage][S.$_get](2));
      this[S._m4storage][S.$_set](2, temp);
      temp = this[S._m4storage][S.$_get](12);
      this[S._m4storage][S.$_set](12, this[S._m4storage][S.$_get](3));
      this[S._m4storage][S.$_set](3, temp);
      temp = this[S._m4storage][S.$_get](9);
      this[S._m4storage][S.$_set](9, this[S._m4storage][S.$_get](6));
      this[S._m4storage][S.$_set](6, temp);
      temp = this[S._m4storage][S.$_get](13);
      this[S._m4storage][S.$_set](13, this[S._m4storage][S.$_get](7));
      this[S._m4storage][S.$_set](7, temp);
      temp = this[S._m4storage][S.$_get](14);
      this[S._m4storage][S.$_set](14, this[S._m4storage][S.$_get](11));
      this[S._m4storage][S.$_set](11, temp);
    }
    absolute() {
      let r = new vector_math_64.Matrix4.zero();
      let rStorage = r[S._m4storage];
      rStorage[S.$_set](0, this[S._m4storage][S.$_get](0)[S.$abs]());
      rStorage[S.$_set](1, this[S._m4storage][S.$_get](1)[S.$abs]());
      rStorage[S.$_set](2, this[S._m4storage][S.$_get](2)[S.$abs]());
      rStorage[S.$_set](3, this[S._m4storage][S.$_get](3)[S.$abs]());
      rStorage[S.$_set](4, this[S._m4storage][S.$_get](4)[S.$abs]());
      rStorage[S.$_set](5, this[S._m4storage][S.$_get](5)[S.$abs]());
      rStorage[S.$_set](6, this[S._m4storage][S.$_get](6)[S.$abs]());
      rStorage[S.$_set](7, this[S._m4storage][S.$_get](7)[S.$abs]());
      rStorage[S.$_set](8, this[S._m4storage][S.$_get](8)[S.$abs]());
      rStorage[S.$_set](9, this[S._m4storage][S.$_get](9)[S.$abs]());
      rStorage[S.$_set](10, this[S._m4storage][S.$_get](10)[S.$abs]());
      rStorage[S.$_set](11, this[S._m4storage][S.$_get](11)[S.$abs]());
      rStorage[S.$_set](12, this[S._m4storage][S.$_get](12)[S.$abs]());
      rStorage[S.$_set](13, this[S._m4storage][S.$_get](13)[S.$abs]());
      rStorage[S.$_set](14, this[S._m4storage][S.$_get](14)[S.$abs]());
      rStorage[S.$_set](15, this[S._m4storage][S.$_get](15)[S.$abs]());
      return r;
    }
    determinant() {
      let det2_01_01 = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](5)) - dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](4));
      let det2_01_02 = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](6)) - dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](4));
      let det2_01_03 = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](7)) - dart.notNull(this[S._m4storage][S.$_get](3)) * dart.notNull(this[S._m4storage][S.$_get](4));
      let det2_01_12 = dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](6)) - dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](5));
      let det2_01_13 = dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](7)) - dart.notNull(this[S._m4storage][S.$_get](3)) * dart.notNull(this[S._m4storage][S.$_get](5));
      let det2_01_23 = dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](7)) - dart.notNull(this[S._m4storage][S.$_get](3)) * dart.notNull(this[S._m4storage][S.$_get](6));
      let det3_201_012 = dart.notNull(this[S._m4storage][S.$_get](8)) * det2_01_12 - dart.notNull(this[S._m4storage][S.$_get](9)) * det2_01_02 + dart.notNull(this[S._m4storage][S.$_get](10)) * det2_01_01;
      let det3_201_013 = dart.notNull(this[S._m4storage][S.$_get](8)) * det2_01_13 - dart.notNull(this[S._m4storage][S.$_get](9)) * det2_01_03 + dart.notNull(this[S._m4storage][S.$_get](11)) * det2_01_01;
      let det3_201_023 = dart.notNull(this[S._m4storage][S.$_get](8)) * det2_01_23 - dart.notNull(this[S._m4storage][S.$_get](10)) * det2_01_03 + dart.notNull(this[S._m4storage][S.$_get](11)) * det2_01_02;
      let det3_201_123 = dart.notNull(this[S._m4storage][S.$_get](9)) * det2_01_23 - dart.notNull(this[S._m4storage][S.$_get](10)) * det2_01_13 + dart.notNull(this[S._m4storage][S.$_get](11)) * det2_01_12;
      return -det3_201_123 * dart.notNull(this[S._m4storage][S.$_get](12)) + det3_201_023 * dart.notNull(this[S._m4storage][S.$_get](13)) - det3_201_013 * dart.notNull(this[S._m4storage][S.$_get](14)) + det3_201_012 * dart.notNull(this[S._m4storage][S.$_get](15));
    }
    dotRow(i, v) {
      if (i == null) dart.nullFailed(I[7], 1031, 21, "i");
      if (v == null) dart.nullFailed(I[7], 1031, 32, "v");
      let vStorage = v[S._v4storage];
      return dart.notNull(this[S._m4storage][S.$_get](i)) * dart.notNull(vStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](4 + dart.notNull(i))) * dart.notNull(vStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](8 + dart.notNull(i))) * dart.notNull(vStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](12 + dart.notNull(i))) * dart.notNull(vStorage[S.$_get](3));
    }
    dotColumn(j, v) {
      if (j == null) dart.nullFailed(I[7], 1040, 24, "j");
      if (v == null) dart.nullFailed(I[7], 1040, 35, "v");
      let vStorage = v[S._v4storage];
      return dart.notNull(this[S._m4storage][S.$_get](dart.notNull(j) * 4)) * dart.notNull(vStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](dart.notNull(j) * 4 + 1)) * dart.notNull(vStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](dart.notNull(j) * 4 + 2)) * dart.notNull(vStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](dart.notNull(j) * 4 + 3)) * dart.notNull(vStorage[S.$_get](3));
    }
    trace() {
      let t = 0.0;
      t = t + dart.notNull(this[S._m4storage][S.$_get](0));
      t = t + dart.notNull(this[S._m4storage][S.$_get](5));
      t = t + dart.notNull(this[S._m4storage][S.$_get](10));
      t = t + dart.notNull(this[S._m4storage][S.$_get](15));
      return t;
    }
    infinityNorm() {
      let norm = 0.0;
      {
        let row_norm = 0.0;
        row_norm = row_norm + this[S._m4storage][S.$_get](0)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](1)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](2)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](3)[S.$abs]();
        norm = row_norm > norm ? row_norm : norm;
      }
      {
        let row_norm = 0.0;
        row_norm = row_norm + this[S._m4storage][S.$_get](4)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](5)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](6)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](7)[S.$abs]();
        norm = row_norm > norm ? row_norm : norm;
      }
      {
        let row_norm = 0.0;
        row_norm = row_norm + this[S._m4storage][S.$_get](8)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](9)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](10)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](11)[S.$abs]();
        norm = row_norm > norm ? row_norm : norm;
      }
      {
        let row_norm = 0.0;
        row_norm = row_norm + this[S._m4storage][S.$_get](12)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](13)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](14)[S.$abs]();
        row_norm = row_norm + this[S._m4storage][S.$_get](15)[S.$abs]();
        norm = row_norm > norm ? row_norm : norm;
      }
      return norm;
    }
    relativeError(correct) {
      if (correct == null) dart.nullFailed(I[7], 1098, 32, "correct");
      let diff = correct['-'](this);
      let correct_norm = correct.infinityNorm();
      let diff_norm = diff.infinityNorm();
      return dart.notNull(diff_norm) / dart.notNull(correct_norm);
    }
    absoluteError(correct) {
      if (correct == null) dart.nullFailed(I[7], 1106, 32, "correct");
      let this_norm = this.infinityNorm();
      let correct_norm = correct.infinityNorm();
      let diff_norm = (dart.notNull(this_norm) - dart.notNull(correct_norm))[S.$abs]();
      return diff_norm;
    }
    getTranslation() {
      let z = this[S._m4storage][S.$_get](14);
      let y = this[S._m4storage][S.$_get](13);
      let x = this[S._m4storage][S.$_get](12);
      return vector_math_64.Vector3.new(x, y, z);
    }
    setTranslation(t) {
      if (t == null) dart.nullFailed(I[7], 1122, 31, "t");
      let tStorage = t[S._v3storage];
      let z = tStorage[S.$_get](2);
      let y = tStorage[S.$_get](1);
      let x = tStorage[S.$_get](0);
      this[S._m4storage][S.$_set](14, z);
      this[S._m4storage][S.$_set](13, y);
      this[S._m4storage][S.$_set](12, x);
    }
    setTranslationRaw(x, y, z) {
      if (x == null) dart.nullFailed(I[7], 1133, 33, "x");
      if (y == null) dart.nullFailed(I[7], 1133, 43, "y");
      if (z == null) dart.nullFailed(I[7], 1133, 53, "z");
      this[S._m4storage][S.$_set](14, z);
      this[S._m4storage][S.$_set](13, y);
      this[S._m4storage][S.$_set](12, x);
    }
    getRotation() {
      let r = new vector_math_64.Matrix3.zero();
      this.copyRotation(r);
      return r;
    }
    copyRotation(rotation) {
      if (rotation == null) dart.nullFailed(I[7], 1148, 29, "rotation");
      let rStorage = rotation[S._m3storage];
      rStorage[S.$_set](0, this[S._m4storage][S.$_get](0));
      rStorage[S.$_set](1, this[S._m4storage][S.$_get](1));
      rStorage[S.$_set](2, this[S._m4storage][S.$_get](2));
      rStorage[S.$_set](3, this[S._m4storage][S.$_get](4));
      rStorage[S.$_set](4, this[S._m4storage][S.$_get](5));
      rStorage[S.$_set](5, this[S._m4storage][S.$_get](6));
      rStorage[S.$_set](6, this[S._m4storage][S.$_get](8));
      rStorage[S.$_set](7, this[S._m4storage][S.$_get](9));
      rStorage[S.$_set](8, this[S._m4storage][S.$_get](10));
    }
    setRotation(r) {
      if (r == null) dart.nullFailed(I[7], 1162, 28, "r");
      let rStorage = r[S._m3storage];
      this[S._m4storage][S.$_set](0, rStorage[S.$_get](0));
      this[S._m4storage][S.$_set](1, rStorage[S.$_get](1));
      this[S._m4storage][S.$_set](2, rStorage[S.$_get](2));
      this[S._m4storage][S.$_set](4, rStorage[S.$_get](3));
      this[S._m4storage][S.$_set](5, rStorage[S.$_get](4));
      this[S._m4storage][S.$_set](6, rStorage[S.$_get](5));
      this[S._m4storage][S.$_set](8, rStorage[S.$_get](6));
      this[S._m4storage][S.$_set](9, rStorage[S.$_get](7));
      this[S._m4storage][S.$_set](10, rStorage[S.$_get](8));
    }
    getNormalMatrix() {
      let t0;
      t0 = vector_math_64.Matrix3.identity();
      return (() => {
        t0.copyNormalMatrix(this);
        return t0;
      })();
    }
    getMaxScaleOnAxis() {
      let scaleXSq = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](2));
      let scaleYSq = dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(this[S._m4storage][S.$_get](4)) + dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(this[S._m4storage][S.$_get](5)) + dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(this[S._m4storage][S.$_get](6));
      let scaleZSq = dart.notNull(this[S._m4storage][S.$_get](8)) * dart.notNull(this[S._m4storage][S.$_get](8)) + dart.notNull(this[S._m4storage][S.$_get](9)) * dart.notNull(this[S._m4storage][S.$_get](9)) + dart.notNull(this[S._m4storage][S.$_get](10)) * dart.notNull(this[S._m4storage][S.$_get](10));
      return math.sqrt(math.max(core.num, scaleXSq, math.max(core.num, scaleYSq, scaleZSq)));
    }
    transposeRotation() {
      let temp = null;
      temp = this[S._m4storage][S.$_get](1);
      this[S._m4storage][S.$_set](1, this[S._m4storage][S.$_get](4));
      this[S._m4storage][S.$_set](4, temp);
      temp = this[S._m4storage][S.$_get](2);
      this[S._m4storage][S.$_set](2, this[S._m4storage][S.$_get](8));
      this[S._m4storage][S.$_set](8, temp);
      temp = this[S._m4storage][S.$_get](4);
      this[S._m4storage][S.$_set](4, this[S._m4storage][S.$_get](1));
      this[S._m4storage][S.$_set](1, temp);
      temp = this[S._m4storage][S.$_get](6);
      this[S._m4storage][S.$_set](6, this[S._m4storage][S.$_get](9));
      this[S._m4storage][S.$_set](9, temp);
      temp = this[S._m4storage][S.$_get](8);
      this[S._m4storage][S.$_set](8, this[S._m4storage][S.$_get](2));
      this[S._m4storage][S.$_set](2, temp);
      temp = this[S._m4storage][S.$_get](9);
      this[S._m4storage][S.$_set](9, this[S._m4storage][S.$_get](6));
      this[S._m4storage][S.$_set](6, temp);
    }
    invert() {
      return this.copyInverse(this);
    }
    copyInverse(arg) {
      if (arg == null) dart.nullFailed(I[7], 1220, 30, "arg");
      let argStorage = arg[S._m4storage];
      let a00 = argStorage[S.$_get](0);
      let a01 = argStorage[S.$_get](1);
      let a02 = argStorage[S.$_get](2);
      let a03 = argStorage[S.$_get](3);
      let a10 = argStorage[S.$_get](4);
      let a11 = argStorage[S.$_get](5);
      let a12 = argStorage[S.$_get](6);
      let a13 = argStorage[S.$_get](7);
      let a20 = argStorage[S.$_get](8);
      let a21 = argStorage[S.$_get](9);
      let a22 = argStorage[S.$_get](10);
      let a23 = argStorage[S.$_get](11);
      let a30 = argStorage[S.$_get](12);
      let a31 = argStorage[S.$_get](13);
      let a32 = argStorage[S.$_get](14);
      let a33 = argStorage[S.$_get](15);
      let b00 = dart.notNull(a00) * dart.notNull(a11) - dart.notNull(a01) * dart.notNull(a10);
      let b01 = dart.notNull(a00) * dart.notNull(a12) - dart.notNull(a02) * dart.notNull(a10);
      let b02 = dart.notNull(a00) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a10);
      let b03 = dart.notNull(a01) * dart.notNull(a12) - dart.notNull(a02) * dart.notNull(a11);
      let b04 = dart.notNull(a01) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a11);
      let b05 = dart.notNull(a02) * dart.notNull(a13) - dart.notNull(a03) * dart.notNull(a12);
      let b06 = dart.notNull(a20) * dart.notNull(a31) - dart.notNull(a21) * dart.notNull(a30);
      let b07 = dart.notNull(a20) * dart.notNull(a32) - dart.notNull(a22) * dart.notNull(a30);
      let b08 = dart.notNull(a20) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a30);
      let b09 = dart.notNull(a21) * dart.notNull(a32) - dart.notNull(a22) * dart.notNull(a31);
      let b10 = dart.notNull(a21) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a31);
      let b11 = dart.notNull(a22) * dart.notNull(a33) - dart.notNull(a23) * dart.notNull(a32);
      let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0.0) {
        this.setFrom(arg);
        return 0.0;
      }
      let invDet = 1.0 / det;
      this[S._m4storage][S.$_set](0, (dart.notNull(a11) * b11 - dart.notNull(a12) * b10 + dart.notNull(a13) * b09) * invDet);
      this[S._m4storage][S.$_set](1, (-dart.notNull(a01) * b11 + dart.notNull(a02) * b10 - dart.notNull(a03) * b09) * invDet);
      this[S._m4storage][S.$_set](2, (dart.notNull(a31) * b05 - dart.notNull(a32) * b04 + dart.notNull(a33) * b03) * invDet);
      this[S._m4storage][S.$_set](3, (-dart.notNull(a21) * b05 + dart.notNull(a22) * b04 - dart.notNull(a23) * b03) * invDet);
      this[S._m4storage][S.$_set](4, (-dart.notNull(a10) * b11 + dart.notNull(a12) * b08 - dart.notNull(a13) * b07) * invDet);
      this[S._m4storage][S.$_set](5, (dart.notNull(a00) * b11 - dart.notNull(a02) * b08 + dart.notNull(a03) * b07) * invDet);
      this[S._m4storage][S.$_set](6, (-dart.notNull(a30) * b05 + dart.notNull(a32) * b02 - dart.notNull(a33) * b01) * invDet);
      this[S._m4storage][S.$_set](7, (dart.notNull(a20) * b05 - dart.notNull(a22) * b02 + dart.notNull(a23) * b01) * invDet);
      this[S._m4storage][S.$_set](8, (dart.notNull(a10) * b10 - dart.notNull(a11) * b08 + dart.notNull(a13) * b06) * invDet);
      this[S._m4storage][S.$_set](9, (-dart.notNull(a00) * b10 + dart.notNull(a01) * b08 - dart.notNull(a03) * b06) * invDet);
      this[S._m4storage][S.$_set](10, (dart.notNull(a30) * b04 - dart.notNull(a31) * b02 + dart.notNull(a33) * b00) * invDet);
      this[S._m4storage][S.$_set](11, (-dart.notNull(a20) * b04 + dart.notNull(a21) * b02 - dart.notNull(a23) * b00) * invDet);
      this[S._m4storage][S.$_set](12, (-dart.notNull(a10) * b09 + dart.notNull(a11) * b07 - dart.notNull(a12) * b06) * invDet);
      this[S._m4storage][S.$_set](13, (dart.notNull(a00) * b09 - dart.notNull(a01) * b07 + dart.notNull(a02) * b06) * invDet);
      this[S._m4storage][S.$_set](14, (-dart.notNull(a30) * b03 + dart.notNull(a31) * b01 - dart.notNull(a32) * b00) * invDet);
      this[S._m4storage][S.$_set](15, (dart.notNull(a20) * b03 - dart.notNull(a21) * b01 + dart.notNull(a22) * b00) * invDet);
      return det;
    }
    invertRotation() {
      let det = this.determinant();
      if (det === 0.0) {
        return 0.0;
      }
      let invDet = 1.0 / dart.notNull(det);
      let ix = null;
      let iy = null;
      let iz = null;
      let jx = null;
      let jy = null;
      let jz = null;
      let kx = null;
      let ky = null;
      let kz = null;
      ix = invDet * (dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(this[S._m4storage][S.$_get](10)) - dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(this[S._m4storage][S.$_get](9)));
      iy = invDet * (dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](9)) - dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](10)));
      iz = invDet * (dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](6)) - dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](5)));
      jx = invDet * (dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(this[S._m4storage][S.$_get](8)) - dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(this[S._m4storage][S.$_get](10)));
      jy = invDet * (dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](10)) - dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](8)));
      jz = invDet * (dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(this[S._m4storage][S.$_get](4)) - dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](6)));
      kx = invDet * (dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(this[S._m4storage][S.$_get](9)) - dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(this[S._m4storage][S.$_get](8)));
      ky = invDet * (dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](8)) - dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](9)));
      kz = invDet * (dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(this[S._m4storage][S.$_get](5)) - dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(this[S._m4storage][S.$_get](4)));
      this[S._m4storage][S.$_set](0, ix);
      this[S._m4storage][S.$_set](1, iy);
      this[S._m4storage][S.$_set](2, iz);
      this[S._m4storage][S.$_set](4, jx);
      this[S._m4storage][S.$_set](5, jy);
      this[S._m4storage][S.$_set](6, jz);
      this[S._m4storage][S.$_set](8, kx);
      this[S._m4storage][S.$_set](9, ky);
      this[S._m4storage][S.$_set](10, kz);
      return det;
    }
    setRotationX(radians) {
      if (radians == null) dart.nullFailed(I[7], 1322, 28, "radians");
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[S._m4storage][S.$_set](0, 1.0);
      this[S._m4storage][S.$_set](1, 0.0);
      this[S._m4storage][S.$_set](2, 0.0);
      this[S._m4storage][S.$_set](4, 0.0);
      this[S._m4storage][S.$_set](5, c);
      this[S._m4storage][S.$_set](6, s);
      this[S._m4storage][S.$_set](8, 0.0);
      this[S._m4storage][S.$_set](9, -s);
      this[S._m4storage][S.$_set](10, c);
      this[S._m4storage][S.$_set](3, 0.0);
      this[S._m4storage][S.$_set](7, 0.0);
      this[S._m4storage][S.$_set](11, 0.0);
    }
    setRotationY(radians) {
      if (radians == null) dart.nullFailed(I[7], 1340, 28, "radians");
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[S._m4storage][S.$_set](0, c);
      this[S._m4storage][S.$_set](1, 0.0);
      this[S._m4storage][S.$_set](2, -s);
      this[S._m4storage][S.$_set](4, 0.0);
      this[S._m4storage][S.$_set](5, 1.0);
      this[S._m4storage][S.$_set](6, 0.0);
      this[S._m4storage][S.$_set](8, s);
      this[S._m4storage][S.$_set](9, 0.0);
      this[S._m4storage][S.$_set](10, c);
      this[S._m4storage][S.$_set](3, 0.0);
      this[S._m4storage][S.$_set](7, 0.0);
      this[S._m4storage][S.$_set](11, 0.0);
    }
    setRotationZ(radians) {
      if (radians == null) dart.nullFailed(I[7], 1358, 28, "radians");
      let c = math.cos(radians);
      let s = math.sin(radians);
      this[S._m4storage][S.$_set](0, c);
      this[S._m4storage][S.$_set](1, s);
      this[S._m4storage][S.$_set](2, 0.0);
      this[S._m4storage][S.$_set](4, -s);
      this[S._m4storage][S.$_set](5, c);
      this[S._m4storage][S.$_set](6, 0.0);
      this[S._m4storage][S.$_set](8, 0.0);
      this[S._m4storage][S.$_set](9, 0.0);
      this[S._m4storage][S.$_set](10, 1.0);
      this[S._m4storage][S.$_set](3, 0.0);
      this[S._m4storage][S.$_set](7, 0.0);
      this[S._m4storage][S.$_set](11, 0.0);
    }
    scaleAdjoint(scale) {
      if (scale == null) dart.nullFailed(I[7], 1376, 28, "scale");
      let a1 = this[S._m4storage][S.$_get](0);
      let b1 = this[S._m4storage][S.$_get](4);
      let c1 = this[S._m4storage][S.$_get](8);
      let d1 = this[S._m4storage][S.$_get](12);
      let a2 = this[S._m4storage][S.$_get](1);
      let b2 = this[S._m4storage][S.$_get](5);
      let c2 = this[S._m4storage][S.$_get](9);
      let d2 = this[S._m4storage][S.$_get](13);
      let a3 = this[S._m4storage][S.$_get](2);
      let b3 = this[S._m4storage][S.$_get](6);
      let c3 = this[S._m4storage][S.$_get](10);
      let d3 = this[S._m4storage][S.$_get](14);
      let a4 = this[S._m4storage][S.$_get](3);
      let b4 = this[S._m4storage][S.$_get](7);
      let c4 = this[S._m4storage][S.$_get](11);
      let d4 = this[S._m4storage][S.$_get](15);
      this[S._m4storage][S.$_set](0, (dart.notNull(b2) * (dart.notNull(c3) * dart.notNull(d4) - dart.notNull(c4) * dart.notNull(d3)) - dart.notNull(c2) * (dart.notNull(b3) * dart.notNull(d4) - dart.notNull(b4) * dart.notNull(d3)) + dart.notNull(d2) * (dart.notNull(b3) * dart.notNull(c4) - dart.notNull(b4) * dart.notNull(c3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](1, -(dart.notNull(a2) * (dart.notNull(c3) * dart.notNull(d4) - dart.notNull(c4) * dart.notNull(d3)) - dart.notNull(c2) * (dart.notNull(a3) * dart.notNull(d4) - dart.notNull(a4) * dart.notNull(d3)) + dart.notNull(d2) * (dart.notNull(a3) * dart.notNull(c4) - dart.notNull(a4) * dart.notNull(c3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](2, (dart.notNull(a2) * (dart.notNull(b3) * dart.notNull(d4) - dart.notNull(b4) * dart.notNull(d3)) - dart.notNull(b2) * (dart.notNull(a3) * dart.notNull(d4) - dart.notNull(a4) * dart.notNull(d3)) + dart.notNull(d2) * (dart.notNull(a3) * dart.notNull(b4) - dart.notNull(a4) * dart.notNull(b3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](3, -(dart.notNull(a2) * (dart.notNull(b3) * dart.notNull(c4) - dart.notNull(b4) * dart.notNull(c3)) - dart.notNull(b2) * (dart.notNull(a3) * dart.notNull(c4) - dart.notNull(a4) * dart.notNull(c3)) + dart.notNull(c2) * (dart.notNull(a3) * dart.notNull(b4) - dart.notNull(a4) * dart.notNull(b3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](4, -(dart.notNull(b1) * (dart.notNull(c3) * dart.notNull(d4) - dart.notNull(c4) * dart.notNull(d3)) - dart.notNull(c1) * (dart.notNull(b3) * dart.notNull(d4) - dart.notNull(b4) * dart.notNull(d3)) + dart.notNull(d1) * (dart.notNull(b3) * dart.notNull(c4) - dart.notNull(b4) * dart.notNull(c3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](5, (dart.notNull(a1) * (dart.notNull(c3) * dart.notNull(d4) - dart.notNull(c4) * dart.notNull(d3)) - dart.notNull(c1) * (dart.notNull(a3) * dart.notNull(d4) - dart.notNull(a4) * dart.notNull(d3)) + dart.notNull(d1) * (dart.notNull(a3) * dart.notNull(c4) - dart.notNull(a4) * dart.notNull(c3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](6, -(dart.notNull(a1) * (dart.notNull(b3) * dart.notNull(d4) - dart.notNull(b4) * dart.notNull(d3)) - dart.notNull(b1) * (dart.notNull(a3) * dart.notNull(d4) - dart.notNull(a4) * dart.notNull(d3)) + dart.notNull(d1) * (dart.notNull(a3) * dart.notNull(b4) - dart.notNull(a4) * dart.notNull(b3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](7, (dart.notNull(a1) * (dart.notNull(b3) * dart.notNull(c4) - dart.notNull(b4) * dart.notNull(c3)) - dart.notNull(b1) * (dart.notNull(a3) * dart.notNull(c4) - dart.notNull(a4) * dart.notNull(c3)) + dart.notNull(c1) * (dart.notNull(a3) * dart.notNull(b4) - dart.notNull(a4) * dart.notNull(b3))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](8, (dart.notNull(b1) * (dart.notNull(c2) * dart.notNull(d4) - dart.notNull(c4) * dart.notNull(d2)) - dart.notNull(c1) * (dart.notNull(b2) * dart.notNull(d4) - dart.notNull(b4) * dart.notNull(d2)) + dart.notNull(d1) * (dart.notNull(b2) * dart.notNull(c4) - dart.notNull(b4) * dart.notNull(c2))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](9, -(dart.notNull(a1) * (dart.notNull(c2) * dart.notNull(d4) - dart.notNull(c4) * dart.notNull(d2)) - dart.notNull(c1) * (dart.notNull(a2) * dart.notNull(d4) - dart.notNull(a4) * dart.notNull(d2)) + dart.notNull(d1) * (dart.notNull(a2) * dart.notNull(c4) - dart.notNull(a4) * dart.notNull(c2))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](10, (dart.notNull(a1) * (dart.notNull(b2) * dart.notNull(d4) - dart.notNull(b4) * dart.notNull(d2)) - dart.notNull(b1) * (dart.notNull(a2) * dart.notNull(d4) - dart.notNull(a4) * dart.notNull(d2)) + dart.notNull(d1) * (dart.notNull(a2) * dart.notNull(b4) - dart.notNull(a4) * dart.notNull(b2))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](11, -(dart.notNull(a1) * (dart.notNull(b2) * dart.notNull(c4) - dart.notNull(b4) * dart.notNull(c2)) - dart.notNull(b1) * (dart.notNull(a2) * dart.notNull(c4) - dart.notNull(a4) * dart.notNull(c2)) + dart.notNull(c1) * (dart.notNull(a2) * dart.notNull(b4) - dart.notNull(a4) * dart.notNull(b2))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](12, -(dart.notNull(b1) * (dart.notNull(c2) * dart.notNull(d3) - dart.notNull(c3) * dart.notNull(d2)) - dart.notNull(c1) * (dart.notNull(b2) * dart.notNull(d3) - dart.notNull(b3) * dart.notNull(d2)) + dart.notNull(d1) * (dart.notNull(b2) * dart.notNull(c3) - dart.notNull(b3) * dart.notNull(c2))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](13, (dart.notNull(a1) * (dart.notNull(c2) * dart.notNull(d3) - dart.notNull(c3) * dart.notNull(d2)) - dart.notNull(c1) * (dart.notNull(a2) * dart.notNull(d3) - dart.notNull(a3) * dart.notNull(d2)) + dart.notNull(d1) * (dart.notNull(a2) * dart.notNull(c3) - dart.notNull(a3) * dart.notNull(c2))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](14, -(dart.notNull(a1) * (dart.notNull(b2) * dart.notNull(d3) - dart.notNull(b3) * dart.notNull(d2)) - dart.notNull(b1) * (dart.notNull(a2) * dart.notNull(d3) - dart.notNull(a3) * dart.notNull(d2)) + dart.notNull(d1) * (dart.notNull(a2) * dart.notNull(b3) - dart.notNull(a3) * dart.notNull(b2))) * dart.notNull(scale));
      this[S._m4storage][S.$_set](15, (dart.notNull(a1) * (dart.notNull(b2) * dart.notNull(c3) - dart.notNull(b3) * dart.notNull(c2)) - dart.notNull(b1) * (dart.notNull(a2) * dart.notNull(c3) - dart.notNull(a3) * dart.notNull(c2)) + dart.notNull(c1) * (dart.notNull(a2) * dart.notNull(b3) - dart.notNull(a3) * dart.notNull(b2))) * dart.notNull(scale));
    }
    absoluteRotate(arg) {
      if (arg == null) dart.nullFailed(I[7], 1463, 34, "arg");
      let m00 = this[S._m4storage][S.$_get](0)[S.$abs]();
      let m01 = this[S._m4storage][S.$_get](4)[S.$abs]();
      let m02 = this[S._m4storage][S.$_get](8)[S.$abs]();
      let m10 = this[S._m4storage][S.$_get](1)[S.$abs]();
      let m11 = this[S._m4storage][S.$_get](5)[S.$abs]();
      let m12 = this[S._m4storage][S.$_get](9)[S.$abs]();
      let m20 = this[S._m4storage][S.$_get](2)[S.$abs]();
      let m21 = this[S._m4storage][S.$_get](6)[S.$abs]();
      let m22 = this[S._m4storage][S.$_get](10)[S.$abs]();
      let argStorage = arg[S._v3storage];
      let x = argStorage[S.$_get](0);
      let y = argStorage[S.$_get](1);
      let z = argStorage[S.$_get](2);
      argStorage[S.$_set](0, dart.notNull(x) * m00 + dart.notNull(y) * m01 + dart.notNull(z) * m02 + 0.0 * 0.0);
      argStorage[S.$_set](1, dart.notNull(x) * m10 + dart.notNull(y) * m11 + dart.notNull(z) * m12 + 0.0 * 0.0);
      argStorage[S.$_set](2, dart.notNull(x) * m20 + dart.notNull(y) * m21 + dart.notNull(z) * m22 + 0.0 * 0.0);
      return arg;
    }
    add(o) {
      if (o == null) dart.nullFailed(I[7], 1484, 20, "o");
      let oStorage = o[S._m4storage];
      this[S._m4storage][S.$_set](0, dart.notNull(this[S._m4storage][S.$_get](0)) + dart.notNull(oStorage[S.$_get](0)));
      this[S._m4storage][S.$_set](1, dart.notNull(this[S._m4storage][S.$_get](1)) + dart.notNull(oStorage[S.$_get](1)));
      this[S._m4storage][S.$_set](2, dart.notNull(this[S._m4storage][S.$_get](2)) + dart.notNull(oStorage[S.$_get](2)));
      this[S._m4storage][S.$_set](3, dart.notNull(this[S._m4storage][S.$_get](3)) + dart.notNull(oStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](4, dart.notNull(this[S._m4storage][S.$_get](4)) + dart.notNull(oStorage[S.$_get](4)));
      this[S._m4storage][S.$_set](5, dart.notNull(this[S._m4storage][S.$_get](5)) + dart.notNull(oStorage[S.$_get](5)));
      this[S._m4storage][S.$_set](6, dart.notNull(this[S._m4storage][S.$_get](6)) + dart.notNull(oStorage[S.$_get](6)));
      this[S._m4storage][S.$_set](7, dart.notNull(this[S._m4storage][S.$_get](7)) + dart.notNull(oStorage[S.$_get](7)));
      this[S._m4storage][S.$_set](8, dart.notNull(this[S._m4storage][S.$_get](8)) + dart.notNull(oStorage[S.$_get](8)));
      this[S._m4storage][S.$_set](9, dart.notNull(this[S._m4storage][S.$_get](9)) + dart.notNull(oStorage[S.$_get](9)));
      this[S._m4storage][S.$_set](10, dart.notNull(this[S._m4storage][S.$_get](10)) + dart.notNull(oStorage[S.$_get](10)));
      this[S._m4storage][S.$_set](11, dart.notNull(this[S._m4storage][S.$_get](11)) + dart.notNull(oStorage[S.$_get](11)));
      this[S._m4storage][S.$_set](12, dart.notNull(this[S._m4storage][S.$_get](12)) + dart.notNull(oStorage[S.$_get](12)));
      this[S._m4storage][S.$_set](13, dart.notNull(this[S._m4storage][S.$_get](13)) + dart.notNull(oStorage[S.$_get](13)));
      this[S._m4storage][S.$_set](14, dart.notNull(this[S._m4storage][S.$_get](14)) + dart.notNull(oStorage[S.$_get](14)));
      this[S._m4storage][S.$_set](15, dart.notNull(this[S._m4storage][S.$_get](15)) + dart.notNull(oStorage[S.$_get](15)));
    }
    sub(o) {
      if (o == null) dart.nullFailed(I[7], 1505, 20, "o");
      let oStorage = o[S._m4storage];
      this[S._m4storage][S.$_set](0, dart.notNull(this[S._m4storage][S.$_get](0)) - dart.notNull(oStorage[S.$_get](0)));
      this[S._m4storage][S.$_set](1, dart.notNull(this[S._m4storage][S.$_get](1)) - dart.notNull(oStorage[S.$_get](1)));
      this[S._m4storage][S.$_set](2, dart.notNull(this[S._m4storage][S.$_get](2)) - dart.notNull(oStorage[S.$_get](2)));
      this[S._m4storage][S.$_set](3, dart.notNull(this[S._m4storage][S.$_get](3)) - dart.notNull(oStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](4, dart.notNull(this[S._m4storage][S.$_get](4)) - dart.notNull(oStorage[S.$_get](4)));
      this[S._m4storage][S.$_set](5, dart.notNull(this[S._m4storage][S.$_get](5)) - dart.notNull(oStorage[S.$_get](5)));
      this[S._m4storage][S.$_set](6, dart.notNull(this[S._m4storage][S.$_get](6)) - dart.notNull(oStorage[S.$_get](6)));
      this[S._m4storage][S.$_set](7, dart.notNull(this[S._m4storage][S.$_get](7)) - dart.notNull(oStorage[S.$_get](7)));
      this[S._m4storage][S.$_set](8, dart.notNull(this[S._m4storage][S.$_get](8)) - dart.notNull(oStorage[S.$_get](8)));
      this[S._m4storage][S.$_set](9, dart.notNull(this[S._m4storage][S.$_get](9)) - dart.notNull(oStorage[S.$_get](9)));
      this[S._m4storage][S.$_set](10, dart.notNull(this[S._m4storage][S.$_get](10)) - dart.notNull(oStorage[S.$_get](10)));
      this[S._m4storage][S.$_set](11, dart.notNull(this[S._m4storage][S.$_get](11)) - dart.notNull(oStorage[S.$_get](11)));
      this[S._m4storage][S.$_set](12, dart.notNull(this[S._m4storage][S.$_get](12)) - dart.notNull(oStorage[S.$_get](12)));
      this[S._m4storage][S.$_set](13, dart.notNull(this[S._m4storage][S.$_get](13)) - dart.notNull(oStorage[S.$_get](13)));
      this[S._m4storage][S.$_set](14, dart.notNull(this[S._m4storage][S.$_get](14)) - dart.notNull(oStorage[S.$_get](14)));
      this[S._m4storage][S.$_set](15, dart.notNull(this[S._m4storage][S.$_get](15)) - dart.notNull(oStorage[S.$_get](15)));
    }
    negate() {
      this[S._m4storage][S.$_set](0, -dart.notNull(this[S._m4storage][S.$_get](0)));
      this[S._m4storage][S.$_set](1, -dart.notNull(this[S._m4storage][S.$_get](1)));
      this[S._m4storage][S.$_set](2, -dart.notNull(this[S._m4storage][S.$_get](2)));
      this[S._m4storage][S.$_set](3, -dart.notNull(this[S._m4storage][S.$_get](3)));
      this[S._m4storage][S.$_set](4, -dart.notNull(this[S._m4storage][S.$_get](4)));
      this[S._m4storage][S.$_set](5, -dart.notNull(this[S._m4storage][S.$_get](5)));
      this[S._m4storage][S.$_set](6, -dart.notNull(this[S._m4storage][S.$_get](6)));
      this[S._m4storage][S.$_set](7, -dart.notNull(this[S._m4storage][S.$_get](7)));
      this[S._m4storage][S.$_set](8, -dart.notNull(this[S._m4storage][S.$_get](8)));
      this[S._m4storage][S.$_set](9, -dart.notNull(this[S._m4storage][S.$_get](9)));
      this[S._m4storage][S.$_set](10, -dart.notNull(this[S._m4storage][S.$_get](10)));
      this[S._m4storage][S.$_set](11, -dart.notNull(this[S._m4storage][S.$_get](11)));
      this[S._m4storage][S.$_set](12, -dart.notNull(this[S._m4storage][S.$_get](12)));
      this[S._m4storage][S.$_set](13, -dart.notNull(this[S._m4storage][S.$_get](13)));
      this[S._m4storage][S.$_set](14, -dart.notNull(this[S._m4storage][S.$_get](14)));
      this[S._m4storage][S.$_set](15, -dart.notNull(this[S._m4storage][S.$_get](15)));
    }
    multiply(arg) {
      if (arg == null) dart.nullFailed(I[7], 1546, 25, "arg");
      let m00 = this[S._m4storage][S.$_get](0);
      let m01 = this[S._m4storage][S.$_get](4);
      let m02 = this[S._m4storage][S.$_get](8);
      let m03 = this[S._m4storage][S.$_get](12);
      let m10 = this[S._m4storage][S.$_get](1);
      let m11 = this[S._m4storage][S.$_get](5);
      let m12 = this[S._m4storage][S.$_get](9);
      let m13 = this[S._m4storage][S.$_get](13);
      let m20 = this[S._m4storage][S.$_get](2);
      let m21 = this[S._m4storage][S.$_get](6);
      let m22 = this[S._m4storage][S.$_get](10);
      let m23 = this[S._m4storage][S.$_get](14);
      let m30 = this[S._m4storage][S.$_get](3);
      let m31 = this[S._m4storage][S.$_get](7);
      let m32 = this[S._m4storage][S.$_get](11);
      let m33 = this[S._m4storage][S.$_get](15);
      let argStorage = arg[S._m4storage];
      let n00 = argStorage[S.$_get](0);
      let n01 = argStorage[S.$_get](4);
      let n02 = argStorage[S.$_get](8);
      let n03 = argStorage[S.$_get](12);
      let n10 = argStorage[S.$_get](1);
      let n11 = argStorage[S.$_get](5);
      let n12 = argStorage[S.$_get](9);
      let n13 = argStorage[S.$_get](13);
      let n20 = argStorage[S.$_get](2);
      let n21 = argStorage[S.$_get](6);
      let n22 = argStorage[S.$_get](10);
      let n23 = argStorage[S.$_get](14);
      let n30 = argStorage[S.$_get](3);
      let n31 = argStorage[S.$_get](7);
      let n32 = argStorage[S.$_get](11);
      let n33 = argStorage[S.$_get](15);
      this[S._m4storage][S.$_set](0, dart.notNull(m00) * dart.notNull(n00) + dart.notNull(m01) * dart.notNull(n10) + dart.notNull(m02) * dart.notNull(n20) + dart.notNull(m03) * dart.notNull(n30));
      this[S._m4storage][S.$_set](4, dart.notNull(m00) * dart.notNull(n01) + dart.notNull(m01) * dart.notNull(n11) + dart.notNull(m02) * dart.notNull(n21) + dart.notNull(m03) * dart.notNull(n31));
      this[S._m4storage][S.$_set](8, dart.notNull(m00) * dart.notNull(n02) + dart.notNull(m01) * dart.notNull(n12) + dart.notNull(m02) * dart.notNull(n22) + dart.notNull(m03) * dart.notNull(n32));
      this[S._m4storage][S.$_set](12, dart.notNull(m00) * dart.notNull(n03) + dart.notNull(m01) * dart.notNull(n13) + dart.notNull(m02) * dart.notNull(n23) + dart.notNull(m03) * dart.notNull(n33));
      this[S._m4storage][S.$_set](1, dart.notNull(m10) * dart.notNull(n00) + dart.notNull(m11) * dart.notNull(n10) + dart.notNull(m12) * dart.notNull(n20) + dart.notNull(m13) * dart.notNull(n30));
      this[S._m4storage][S.$_set](5, dart.notNull(m10) * dart.notNull(n01) + dart.notNull(m11) * dart.notNull(n11) + dart.notNull(m12) * dart.notNull(n21) + dart.notNull(m13) * dart.notNull(n31));
      this[S._m4storage][S.$_set](9, dart.notNull(m10) * dart.notNull(n02) + dart.notNull(m11) * dart.notNull(n12) + dart.notNull(m12) * dart.notNull(n22) + dart.notNull(m13) * dart.notNull(n32));
      this[S._m4storage][S.$_set](13, dart.notNull(m10) * dart.notNull(n03) + dart.notNull(m11) * dart.notNull(n13) + dart.notNull(m12) * dart.notNull(n23) + dart.notNull(m13) * dart.notNull(n33));
      this[S._m4storage][S.$_set](2, dart.notNull(m20) * dart.notNull(n00) + dart.notNull(m21) * dart.notNull(n10) + dart.notNull(m22) * dart.notNull(n20) + dart.notNull(m23) * dart.notNull(n30));
      this[S._m4storage][S.$_set](6, dart.notNull(m20) * dart.notNull(n01) + dart.notNull(m21) * dart.notNull(n11) + dart.notNull(m22) * dart.notNull(n21) + dart.notNull(m23) * dart.notNull(n31));
      this[S._m4storage][S.$_set](10, dart.notNull(m20) * dart.notNull(n02) + dart.notNull(m21) * dart.notNull(n12) + dart.notNull(m22) * dart.notNull(n22) + dart.notNull(m23) * dart.notNull(n32));
      this[S._m4storage][S.$_set](14, dart.notNull(m20) * dart.notNull(n03) + dart.notNull(m21) * dart.notNull(n13) + dart.notNull(m22) * dart.notNull(n23) + dart.notNull(m23) * dart.notNull(n33));
      this[S._m4storage][S.$_set](3, dart.notNull(m30) * dart.notNull(n00) + dart.notNull(m31) * dart.notNull(n10) + dart.notNull(m32) * dart.notNull(n20) + dart.notNull(m33) * dart.notNull(n30));
      this[S._m4storage][S.$_set](7, dart.notNull(m30) * dart.notNull(n01) + dart.notNull(m31) * dart.notNull(n11) + dart.notNull(m32) * dart.notNull(n21) + dart.notNull(m33) * dart.notNull(n31));
      this[S._m4storage][S.$_set](11, dart.notNull(m30) * dart.notNull(n02) + dart.notNull(m31) * dart.notNull(n12) + dart.notNull(m32) * dart.notNull(n22) + dart.notNull(m33) * dart.notNull(n32));
      this[S._m4storage][S.$_set](15, dart.notNull(m30) * dart.notNull(n03) + dart.notNull(m31) * dart.notNull(n13) + dart.notNull(m32) * dart.notNull(n23) + dart.notNull(m33) * dart.notNull(n33));
    }
    multiplied(arg) {
      let t0;
      if (arg == null) dart.nullFailed(I[7], 1599, 30, "arg");
      t0 = this.clone();
      return (() => {
        t0.multiply(arg);
        return t0;
      })();
    }
    transposeMultiply(arg) {
      if (arg == null) dart.nullFailed(I[7], 1602, 34, "arg");
      let m00 = this[S._m4storage][S.$_get](0);
      let m01 = this[S._m4storage][S.$_get](1);
      let m02 = this[S._m4storage][S.$_get](2);
      let m03 = this[S._m4storage][S.$_get](3);
      let m10 = this[S._m4storage][S.$_get](4);
      let m11 = this[S._m4storage][S.$_get](5);
      let m12 = this[S._m4storage][S.$_get](6);
      let m13 = this[S._m4storage][S.$_get](7);
      let m20 = this[S._m4storage][S.$_get](8);
      let m21 = this[S._m4storage][S.$_get](9);
      let m22 = this[S._m4storage][S.$_get](10);
      let m23 = this[S._m4storage][S.$_get](11);
      let m30 = this[S._m4storage][S.$_get](12);
      let m31 = this[S._m4storage][S.$_get](13);
      let m32 = this[S._m4storage][S.$_get](14);
      let m33 = this[S._m4storage][S.$_get](15);
      let argStorage = arg[S._m4storage];
      this[S._m4storage][S.$_set](0, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](4, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](7)));
      this[S._m4storage][S.$_set](8, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](11)));
      this[S._m4storage][S.$_set](12, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](12)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](13)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](14)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](15)));
      this[S._m4storage][S.$_set](1, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](5, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](7)));
      this[S._m4storage][S.$_set](9, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](11)));
      this[S._m4storage][S.$_set](13, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](12)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](13)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](14)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](15)));
      this[S._m4storage][S.$_set](2, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](6, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](7)));
      this[S._m4storage][S.$_set](10, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](11)));
      this[S._m4storage][S.$_set](14, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](12)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](13)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](14)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](15)));
      this[S._m4storage][S.$_set](3, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](3)));
      this[S._m4storage][S.$_set](7, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](7)));
      this[S._m4storage][S.$_set](11, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](11)));
      this[S._m4storage][S.$_set](15, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](12)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](13)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](14)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](15)));
    }
    multiplyTranspose(arg) {
      if (arg == null) dart.nullFailed(I[7], 1687, 34, "arg");
      let m00 = this[S._m4storage][S.$_get](0);
      let m01 = this[S._m4storage][S.$_get](4);
      let m02 = this[S._m4storage][S.$_get](8);
      let m03 = this[S._m4storage][S.$_get](12);
      let m10 = this[S._m4storage][S.$_get](1);
      let m11 = this[S._m4storage][S.$_get](5);
      let m12 = this[S._m4storage][S.$_get](9);
      let m13 = this[S._m4storage][S.$_get](13);
      let m20 = this[S._m4storage][S.$_get](2);
      let m21 = this[S._m4storage][S.$_get](6);
      let m22 = this[S._m4storage][S.$_get](10);
      let m23 = this[S._m4storage][S.$_get](14);
      let m30 = this[S._m4storage][S.$_get](3);
      let m31 = this[S._m4storage][S.$_get](7);
      let m32 = this[S._m4storage][S.$_get](11);
      let m33 = this[S._m4storage][S.$_get](15);
      let argStorage = arg[S._m4storage];
      this[S._m4storage][S.$_set](0, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](12)));
      this[S._m4storage][S.$_set](4, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](13)));
      this[S._m4storage][S.$_set](8, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](14)));
      this[S._m4storage][S.$_set](12, dart.notNull(m00) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m01) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(m02) * dart.notNull(argStorage[S.$_get](11)) + dart.notNull(m03) * dart.notNull(argStorage[S.$_get](15)));
      this[S._m4storage][S.$_set](1, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](12)));
      this[S._m4storage][S.$_set](5, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](13)));
      this[S._m4storage][S.$_set](9, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](14)));
      this[S._m4storage][S.$_set](13, dart.notNull(m10) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m11) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(m12) * dart.notNull(argStorage[S.$_get](11)) + dart.notNull(m13) * dart.notNull(argStorage[S.$_get](15)));
      this[S._m4storage][S.$_set](2, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](12)));
      this[S._m4storage][S.$_set](6, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](13)));
      this[S._m4storage][S.$_set](10, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](14)));
      this[S._m4storage][S.$_set](14, dart.notNull(m20) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m21) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(m22) * dart.notNull(argStorage[S.$_get](11)) + dart.notNull(m23) * dart.notNull(argStorage[S.$_get](15)));
      this[S._m4storage][S.$_set](3, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](8)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](12)));
      this[S._m4storage][S.$_set](7, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](5)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](9)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](13)));
      this[S._m4storage][S.$_set](11, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](10)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](14)));
      this[S._m4storage][S.$_set](15, dart.notNull(m30) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(m31) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(m32) * dart.notNull(argStorage[S.$_get](11)) + dart.notNull(m33) * dart.notNull(argStorage[S.$_get](15)));
    }
    decompose(translation, rotation, scale) {
      let t0, t0$, t0$0, t0$1, t0$2, t1, t0$3, t1$, t0$4, t1$0, t0$5, t1$1, t0$6, t1$2, t0$7, t1$3, t0$8, t1$4, t0$9, t1$5, t0$10, t1$6, t0$11, t0$12;
      if (translation == null) dart.nullFailed(I[7], 1772, 26, "translation");
      if (rotation == null) dart.nullFailed(I[7], 1772, 50, "rotation");
      if (scale == null) dart.nullFailed(I[7], 1772, 68, "scale");
      let v = (t0 = vector_math_64.Matrix4._decomposeV, t0 == null ? vector_math_64.Matrix4._decomposeV = new vector_math_64.Vector3.zero() : t0);
      let sx = (t0$ = v, (() => {
        t0$.setValues(this[S._m4storage][S.$_get](0), this[S._m4storage][S.$_get](1), this[S._m4storage][S.$_get](2));
        return t0$;
      })()).length;
      let sy = (t0$0 = v, (() => {
        t0$0.setValues(this[S._m4storage][S.$_get](4), this[S._m4storage][S.$_get](5), this[S._m4storage][S.$_get](6));
        return t0$0;
      })()).length;
      let sz = (t0$1 = v, (() => {
        t0$1.setValues(this[S._m4storage][S.$_get](8), this[S._m4storage][S.$_get](9), this[S._m4storage][S.$_get](10));
        return t0$1;
      })()).length;
      if (dart.notNull(this.determinant()) < 0) {
        sx = -dart.notNull(sx);
      }
      translation[S._v3storage][S.$_set](0, this[S._m4storage][S.$_get](12));
      translation[S._v3storage][S.$_set](1, this[S._m4storage][S.$_get](13));
      translation[S._v3storage][S.$_set](2, this[S._m4storage][S.$_get](14));
      let invSX = 1.0 / dart.notNull(sx);
      let invSY = 1.0 / dart.notNull(sy);
      let invSZ = 1.0 / dart.notNull(sz);
      let m = (t0$2 = vector_math_64.Matrix4._decomposeM, t0$2 == null ? vector_math_64.Matrix4._decomposeM = new vector_math_64.Matrix4.zero() : t0$2);
      m.setFrom(this);
      t0$3 = m[S._m4storage];
      t1 = 0;
      t0$3[S.$_set](t1, dart.notNull(t0$3[S.$_get](t1)) * invSX);
      t0$4 = m[S._m4storage];
      t1$ = 1;
      t0$4[S.$_set](t1$, dart.notNull(t0$4[S.$_get](t1$)) * invSX);
      t0$5 = m[S._m4storage];
      t1$0 = 2;
      t0$5[S.$_set](t1$0, dart.notNull(t0$5[S.$_get](t1$0)) * invSX);
      t0$6 = m[S._m4storage];
      t1$1 = 4;
      t0$6[S.$_set](t1$1, dart.notNull(t0$6[S.$_get](t1$1)) * invSY);
      t0$7 = m[S._m4storage];
      t1$2 = 5;
      t0$7[S.$_set](t1$2, dart.notNull(t0$7[S.$_get](t1$2)) * invSY);
      t0$8 = m[S._m4storage];
      t1$3 = 6;
      t0$8[S.$_set](t1$3, dart.notNull(t0$8[S.$_get](t1$3)) * invSY);
      t0$9 = m[S._m4storage];
      t1$4 = 8;
      t0$9[S.$_set](t1$4, dart.notNull(t0$9[S.$_get](t1$4)) * invSZ);
      t0$10 = m[S._m4storage];
      t1$5 = 9;
      t0$10[S.$_set](t1$5, dart.notNull(t0$10[S.$_get](t1$5)) * invSZ);
      t0$11 = m[S._m4storage];
      t1$6 = 10;
      t0$11[S.$_set](t1$6, dart.notNull(t0$11[S.$_get](t1$6)) * invSZ);
      let r = (t0$12 = vector_math_64.Matrix4._decomposeR, t0$12 == null ? vector_math_64.Matrix4._decomposeR = new vector_math_64.Matrix3.zero() : t0$12);
      m.copyRotation(r);
      rotation.setFromRotation(r);
      scale[S._v3storage][S.$_set](0, sx);
      scale[S._v3storage][S.$_set](1, sy);
      scale[S._v3storage][S.$_set](2, sz);
    }
    rotate3(arg) {
      if (arg == null) dart.nullFailed(I[7], 1818, 27, "arg");
      let argStorage = arg[S._v3storage];
      let x_ = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](8)) * dart.notNull(argStorage[S.$_get](2));
      let y_ = dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](9)) * dart.notNull(argStorage[S.$_get](2));
      let z_ = dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](10)) * dart.notNull(argStorage[S.$_get](2));
      argStorage[S.$_set](0, x_);
      argStorage[S.$_set](1, y_);
      argStorage[S.$_set](2, z_);
      return arg;
    }
    rotated3(arg, out = null) {
      if (arg == null) dart.nullFailed(I[7], 1837, 28, "arg");
      if (out == null) {
        out = vector_math_64.Vector3.copy(arg);
      } else {
        out.setFrom(arg);
      }
      return this.rotate3(out);
    }
    transform3(arg) {
      if (arg == null) dart.nullFailed(I[7], 1848, 30, "arg");
      let argStorage = arg[S._v3storage];
      let x_ = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](8)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](12));
      let y_ = dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](9)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](13));
      let z_ = dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](10)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](14));
      argStorage[S.$_set](0, x_);
      argStorage[S.$_set](1, y_);
      argStorage[S.$_set](2, z_);
      return arg;
    }
    transformed3(arg, out = null) {
      if (arg == null) dart.nullFailed(I[7], 1871, 32, "arg");
      if (out == null) {
        out = vector_math_64.Vector3.copy(arg);
      } else {
        out.setFrom(arg);
      }
      return this.transform3(out);
    }
    transform(arg) {
      if (arg == null) dart.nullFailed(I[7], 1882, 29, "arg");
      let argStorage = arg[S._v4storage];
      let x_ = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](8)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](12)) * dart.notNull(argStorage[S.$_get](3));
      let y_ = dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](9)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](13)) * dart.notNull(argStorage[S.$_get](3));
      let z_ = dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](10)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](14)) * dart.notNull(argStorage[S.$_get](3));
      let w_ = dart.notNull(this[S._m4storage][S.$_get](3)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](7)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](11)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](15)) * dart.notNull(argStorage[S.$_get](3));
      argStorage[S.$_set](0, x_);
      argStorage[S.$_set](1, y_);
      argStorage[S.$_set](2, z_);
      argStorage[S.$_set](3, w_);
      return arg;
    }
    perspectiveTransform(arg) {
      if (arg == null) dart.nullFailed(I[7], 1909, 40, "arg");
      let argStorage = arg[S._v3storage];
      let x_ = dart.notNull(this[S._m4storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](4)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](8)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](12));
      let y_ = dart.notNull(this[S._m4storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](5)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](9)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](13));
      let z_ = dart.notNull(this[S._m4storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](6)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](10)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](14));
      let w_ = 1.0 / (dart.notNull(this[S._m4storage][S.$_get](3)) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(this[S._m4storage][S.$_get](7)) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(this[S._m4storage][S.$_get](11)) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(this[S._m4storage][S.$_get](15)));
      argStorage[S.$_set](0, x_ * w_);
      argStorage[S.$_set](1, y_ * w_);
      argStorage[S.$_set](2, z_ * w_);
      return arg;
    }
    transformed(arg, out = null) {
      if (arg == null) dart.nullFailed(I[7], 1937, 31, "arg");
      if (out == null) {
        out = vector_math_64.Vector4.copy(arg);
      } else {
        out.setFrom(arg);
      }
      return this.transform(out);
    }
    copyIntoArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[7], 1947, 32, "array");
      if (offset == null) dart.nullFailed(I[7], 1947, 44, "offset");
      let i = offset;
      array[S.$_set](dart.notNull(i) + 15, this[S._m4storage][S.$_get](15));
      array[S.$_set](dart.notNull(i) + 14, this[S._m4storage][S.$_get](14));
      array[S.$_set](dart.notNull(i) + 13, this[S._m4storage][S.$_get](13));
      array[S.$_set](dart.notNull(i) + 12, this[S._m4storage][S.$_get](12));
      array[S.$_set](dart.notNull(i) + 11, this[S._m4storage][S.$_get](11));
      array[S.$_set](dart.notNull(i) + 10, this[S._m4storage][S.$_get](10));
      array[S.$_set](dart.notNull(i) + 9, this[S._m4storage][S.$_get](9));
      array[S.$_set](dart.notNull(i) + 8, this[S._m4storage][S.$_get](8));
      array[S.$_set](dart.notNull(i) + 7, this[S._m4storage][S.$_get](7));
      array[S.$_set](dart.notNull(i) + 6, this[S._m4storage][S.$_get](6));
      array[S.$_set](dart.notNull(i) + 5, this[S._m4storage][S.$_get](5));
      array[S.$_set](dart.notNull(i) + 4, this[S._m4storage][S.$_get](4));
      array[S.$_set](dart.notNull(i) + 3, this[S._m4storage][S.$_get](3));
      array[S.$_set](dart.notNull(i) + 2, this[S._m4storage][S.$_get](2));
      array[S.$_set](dart.notNull(i) + 1, this[S._m4storage][S.$_get](1));
      array[S.$_set](dart.notNull(i) + 0, this[S._m4storage][S.$_get](0));
    }
    copyFromArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[7], 1968, 35, "array");
      if (offset == null) dart.nullFailed(I[7], 1968, 47, "offset");
      let i = offset;
      this[S._m4storage][S.$_set](15, array[S.$_get](dart.notNull(i) + 15));
      this[S._m4storage][S.$_set](14, array[S.$_get](dart.notNull(i) + 14));
      this[S._m4storage][S.$_set](13, array[S.$_get](dart.notNull(i) + 13));
      this[S._m4storage][S.$_set](12, array[S.$_get](dart.notNull(i) + 12));
      this[S._m4storage][S.$_set](11, array[S.$_get](dart.notNull(i) + 11));
      this[S._m4storage][S.$_set](10, array[S.$_get](dart.notNull(i) + 10));
      this[S._m4storage][S.$_set](9, array[S.$_get](dart.notNull(i) + 9));
      this[S._m4storage][S.$_set](8, array[S.$_get](dart.notNull(i) + 8));
      this[S._m4storage][S.$_set](7, array[S.$_get](dart.notNull(i) + 7));
      this[S._m4storage][S.$_set](6, array[S.$_get](dart.notNull(i) + 6));
      this[S._m4storage][S.$_set](5, array[S.$_get](dart.notNull(i) + 5));
      this[S._m4storage][S.$_set](4, array[S.$_get](dart.notNull(i) + 4));
      this[S._m4storage][S.$_set](3, array[S.$_get](dart.notNull(i) + 3));
      this[S._m4storage][S.$_set](2, array[S.$_get](dart.notNull(i) + 2));
      this[S._m4storage][S.$_set](1, array[S.$_get](dart.notNull(i) + 1));
      this[S._m4storage][S.$_set](0, array[S.$_get](dart.notNull(i) + 0));
    }
    applyToVector3Array(array, offset = 0) {
      let t0;
      if (array == null) dart.nullFailed(I[7], 1989, 49, "array");
      if (offset == null) dart.nullFailed(I[7], 1989, 61, "offset");
      for (let i = 0, j = offset; i < dart.notNull(array[S.$length]); i = i + 3, j = dart.notNull(j) + 3) {
        let v = (t0 = vector_math_64.Vector3.array(array, j), (() => {
          t0.applyMatrix4(this);
          return t0;
        })());
        array[S.$_set](j, v.storage[S.$_get](0));
        array[S.$_set](dart.notNull(j) + 1, v.storage[S.$_get](1));
        array[S.$_set](dart.notNull(j) + 2, v.storage[S.$_get](2));
      }
      return array;
    }
    get right() {
      let x = this[S._m4storage][S.$_get](0);
      let y = this[S._m4storage][S.$_get](1);
      let z = this[S._m4storage][S.$_get](2);
      return vector_math_64.Vector3.new(x, y, z);
    }
    get up() {
      let x = this[S._m4storage][S.$_get](4);
      let y = this[S._m4storage][S.$_get](5);
      let z = this[S._m4storage][S.$_get](6);
      return vector_math_64.Vector3.new(x, y, z);
    }
    get forward() {
      let x = this[S._m4storage][S.$_get](8);
      let y = this[S._m4storage][S.$_get](9);
      let z = this[S._m4storage][S.$_get](10);
      return vector_math_64.Vector3.new(x, y, z);
    }
    isIdentity() {
      return this[S._m4storage][S.$_get](0) === 1.0 && this[S._m4storage][S.$_get](1) === 0.0 && this[S._m4storage][S.$_get](2) === 0.0 && this[S._m4storage][S.$_get](3) === 0.0 && this[S._m4storage][S.$_get](4) === 0.0 && this[S._m4storage][S.$_get](5) === 1.0 && this[S._m4storage][S.$_get](6) === 0.0 && this[S._m4storage][S.$_get](7) === 0.0 && this[S._m4storage][S.$_get](8) === 0.0 && this[S._m4storage][S.$_get](9) === 0.0 && this[S._m4storage][S.$_get](10) === 1.0 && this[S._m4storage][S.$_get](11) === 0.0 && this[S._m4storage][S.$_get](12) === 0.0 && this[S._m4storage][S.$_get](13) === 0.0 && this[S._m4storage][S.$_get](14) === 0.0 && this[S._m4storage][S.$_get](15) === 1.0;
    }
    isZero() {
      return this[S._m4storage][S.$_get](0) === 0.0 && this[S._m4storage][S.$_get](1) === 0.0 && this[S._m4storage][S.$_get](2) === 0.0 && this[S._m4storage][S.$_get](3) === 0.0 && this[S._m4storage][S.$_get](4) === 0.0 && this[S._m4storage][S.$_get](5) === 0.0 && this[S._m4storage][S.$_get](6) === 0.0 && this[S._m4storage][S.$_get](7) === 0.0 && this[S._m4storage][S.$_get](8) === 0.0 && this[S._m4storage][S.$_get](9) === 0.0 && this[S._m4storage][S.$_get](10) === 0.0 && this[S._m4storage][S.$_get](11) === 0.0 && this[S._m4storage][S.$_get](12) === 0.0 && this[S._m4storage][S.$_get](13) === 0.0 && this[S._m4storage][S.$_get](14) === 0.0 && this[S._m4storage][S.$_get](15) === 0.0;
    }
  };
  (vector_math_64.Matrix4.zero = function() {
    this[S._m4storage] = _native_typed_data.NativeFloat64List.new(16);
    ;
  }).prototype = vector_math_64.Matrix4.prototype;
  (vector_math_64.Matrix4.fromFloat64List = function(_m4storage) {
    if (_m4storage == null) dart.nullFailed(I[7], 319, 32, "_m4storage");
    this[S._m4storage] = _m4storage;
    ;
  }).prototype = vector_math_64.Matrix4.prototype;
  (vector_math_64.Matrix4.fromBuffer = function(buffer, offset) {
    if (buffer == null) dart.nullFailed(I[7], 323, 33, "buffer");
    if (offset == null) dart.nullFailed(I[7], 323, 45, "offset");
    this[S._m4storage] = typed_data.Float64List.view(buffer, offset, 16);
    ;
  }).prototype = vector_math_64.Matrix4.prototype;
  dart.addTypeTests(vector_math_64.Matrix4);
  dart.addTypeCaches(vector_math_64.Matrix4);
  dart.setMethodSignature(vector_math_64.Matrix4, () => ({
    __proto__: dart.getMethods(vector_math_64.Matrix4.__proto__),
    index: dart.fnType(core.int, [core.int, core.int]),
    entry: dart.fnType(core.double, [core.int, core.int]),
    setEntry: dart.fnType(dart.void, [core.int, core.int, core.double]),
    splatDiagonal: dart.fnType(dart.void, [core.double]),
    setValues: dart.fnType(dart.void, [core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double, core.double]),
    setColumns: dart.fnType(dart.void, [vector_math_64.Vector4, vector_math_64.Vector4, vector_math_64.Vector4, vector_math_64.Vector4]),
    setFrom: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    setFromTranslationRotation: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Quaternion]),
    setFromTranslationRotationScale: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Quaternion, vector_math_64.Vector3]),
    setUpper2x2: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    setDiagonal: dart.fnType(dart.void, [vector_math_64.Vector4]),
    setOuter: dart.fnType(dart.void, [vector_math_64.Vector4, vector_math_64.Vector4]),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    _equals: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    [S.$_equals]: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    setRow: dart.fnType(dart.void, [core.int, vector_math_64.Vector4]),
    getRow: dart.fnType(vector_math_64.Vector4, [core.int]),
    setColumn: dart.fnType(dart.void, [core.int, vector_math_64.Vector4]),
    getColumn: dart.fnType(vector_math_64.Vector4, [core.int]),
    clone: dart.fnType(vector_math_64.Matrix4, []),
    copyInto: dart.fnType(vector_math_64.Matrix4, [vector_math_64.Matrix4]),
    _negate: dart.fnType(vector_math_64.Matrix4, []),
    '*': dart.fnType(dart.dynamic, [dart.dynamic]),
    '+': dart.fnType(vector_math_64.Matrix4, [vector_math_64.Matrix4]),
    '-': dart.fnType(vector_math_64.Matrix4, [vector_math_64.Matrix4]),
    translate: dart.fnType(dart.void, [dart.dynamic], [core.double, core.double]),
    leftTranslate: dart.fnType(dart.void, [dart.dynamic], [core.double, core.double]),
    rotate: dart.fnType(dart.void, [vector_math_64.Vector3, core.double]),
    rotateX: dart.fnType(dart.void, [core.double]),
    rotateY: dart.fnType(dart.void, [core.double]),
    rotateZ: dart.fnType(dart.void, [core.double]),
    scale: dart.fnType(dart.void, [dart.dynamic], [dart.nullable(core.double), dart.nullable(core.double)]),
    scaled: dart.fnType(vector_math_64.Matrix4, [dart.dynamic], [dart.nullable(core.double), dart.nullable(core.double)]),
    setZero: dart.fnType(dart.void, []),
    setIdentity: dart.fnType(dart.void, []),
    transposed: dart.fnType(vector_math_64.Matrix4, []),
    transpose: dart.fnType(dart.void, []),
    absolute: dart.fnType(vector_math_64.Matrix4, []),
    determinant: dart.fnType(core.double, []),
    dotRow: dart.fnType(core.double, [core.int, vector_math_64.Vector4]),
    dotColumn: dart.fnType(core.double, [core.int, vector_math_64.Vector4]),
    trace: dart.fnType(core.double, []),
    infinityNorm: dart.fnType(core.double, []),
    relativeError: dart.fnType(core.double, [vector_math_64.Matrix4]),
    absoluteError: dart.fnType(core.double, [vector_math_64.Matrix4]),
    getTranslation: dart.fnType(vector_math_64.Vector3, []),
    setTranslation: dart.fnType(dart.void, [vector_math_64.Vector3]),
    setTranslationRaw: dart.fnType(dart.void, [core.double, core.double, core.double]),
    getRotation: dart.fnType(vector_math_64.Matrix3, []),
    copyRotation: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    setRotation: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    getNormalMatrix: dart.fnType(vector_math_64.Matrix3, []),
    getMaxScaleOnAxis: dart.fnType(core.double, []),
    transposeRotation: dart.fnType(dart.void, []),
    invert: dart.fnType(core.double, []),
    copyInverse: dart.fnType(core.double, [vector_math_64.Matrix4]),
    invertRotation: dart.fnType(core.double, []),
    setRotationX: dart.fnType(dart.void, [core.double]),
    setRotationY: dart.fnType(dart.void, [core.double]),
    setRotationZ: dart.fnType(dart.void, [core.double]),
    scaleAdjoint: dart.fnType(dart.void, [core.double]),
    absoluteRotate: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    add: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    sub: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    negate: dart.fnType(dart.void, []),
    multiply: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    multiplied: dart.fnType(vector_math_64.Matrix4, [vector_math_64.Matrix4]),
    transposeMultiply: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    multiplyTranspose: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    decompose: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Quaternion, vector_math_64.Vector3]),
    rotate3: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    rotated3: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3], [dart.nullable(vector_math_64.Vector3)]),
    transform3: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    transformed3: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3], [dart.nullable(vector_math_64.Vector3)]),
    transform: dart.fnType(vector_math_64.Vector4, [vector_math_64.Vector4]),
    perspectiveTransform: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    transformed: dart.fnType(vector_math_64.Vector4, [vector_math_64.Vector4], [dart.nullable(vector_math_64.Vector4)]),
    copyIntoArray: dart.fnType(dart.void, [core.List$(core.num)], [core.int]),
    copyFromArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int]),
    applyToVector3Array: dart.fnType(core.List$(core.double), [core.List$(core.double)], [core.int]),
    isIdentity: dart.fnType(core.bool, []),
    isZero: dart.fnType(core.bool, [])
  }));
  dart.setGetterSignature(vector_math_64.Matrix4, () => ({
    __proto__: dart.getGetters(vector_math_64.Matrix4.__proto__),
    storage: typed_data.Float64List,
    dimension: core.int,
    row0: vector_math_64.Vector4,
    row1: vector_math_64.Vector4,
    row2: vector_math_64.Vector4,
    row3: vector_math_64.Vector4,
    right: vector_math_64.Vector3,
    up: vector_math_64.Vector3,
    forward: vector_math_64.Vector3
  }));
  dart.setSetterSignature(vector_math_64.Matrix4, () => ({
    __proto__: dart.getSetters(vector_math_64.Matrix4.__proto__),
    row0: vector_math_64.Vector4,
    row1: vector_math_64.Vector4,
    row2: vector_math_64.Vector4,
    row3: vector_math_64.Vector4
  }));
  dart.setLibraryUri(vector_math_64.Matrix4, I[1]);
  dart.setFieldSignature(vector_math_64.Matrix4, () => ({
    __proto__: dart.getFields(vector_math_64.Matrix4.__proto__),
    [S._m4storage]: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.defineExtensionMethods(vector_math_64.Matrix4, ['toString', '_equals']);
  dart.defineExtensionAccessors(vector_math_64.Matrix4, ['hashCode']);
  dart.defineLazy(vector_math_64.Matrix4, {
    /*vector_math_64.Matrix4._decomposeV*/get _decomposeV() {
      return null;
    },
    set _decomposeV(_) {},
    /*vector_math_64.Matrix4._decomposeM*/get _decomposeM() {
      return null;
    },
    set _decomposeM(_) {},
    /*vector_math_64.Matrix4._decomposeR*/get _decomposeR() {
      return null;
    },
    set _decomposeR(_) {}
  }, false);
  vector_math_64.Obb3 = class Obb3 extends core.Object {
    get center() {
      return this[S._center];
    }
    get halfExtents() {
      return this[S._halfExtents];
    }
    get axis0() {
      return this[S._axis0];
    }
    get axis1() {
      return this[S._axis1];
    }
    get axis2() {
      return this[S._axis2];
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[8], 56, 22, "other");
      this[S._center].setFrom(other[S._center]);
      this[S._halfExtents].setFrom(other[S._halfExtents]);
      this[S._axis0].setFrom(other[S._axis0]);
      this[S._axis1].setFrom(other[S._axis1]);
      this[S._axis2].setFrom(other[S._axis2]);
    }
    copyInto(other) {
      if (other == null) dart.nullFailed(I[8], 65, 22, "other");
      other[S._center].setFrom(this[S._center]);
      other[S._halfExtents].setFrom(this[S._halfExtents]);
      other[S._axis0].setFrom(this[S._axis0]);
      other[S._axis1].setFrom(this[S._axis1]);
      other[S._axis2].setFrom(this[S._axis2]);
    }
    resetRotation() {
      this[S._axis0].setValues(1.0, 0.0, 0.0);
      this[S._axis1].setValues(0.0, 1.0, 0.0);
      this[S._axis2].setValues(0.0, 0.0, 1.0);
    }
    translate(offset) {
      if (offset == null) dart.nullFailed(I[8], 81, 26, "offset");
      this[S._center].add(offset);
    }
    rotate(t) {
      let t1, t1$, t1$0, t0, t0$;
      if (t == null) dart.nullFailed(I[8], 86, 23, "t");
      t0 = t;
      (() => {
        t0.transform((t1 = this[S._axis0], (() => {
          t1.scale(this[S._halfExtents].x);
          return t1;
        })()));
        t0.transform((t1$ = this[S._axis1], (() => {
          t1$.scale(this[S._halfExtents].y);
          return t1$;
        })()));
        t0.transform((t1$0 = this[S._axis2], (() => {
          t1$0.scale(this[S._halfExtents].z);
          return t1$0;
        })()));
        return t0;
      })();
      t0$ = this[S._halfExtents];
      (() => {
        t0$.x = this[S._axis0].normalize();
        t0$.y = this[S._axis1].normalize();
        t0$.z = this[S._axis2].normalize();
        return t0$;
      })();
    }
    transform(t) {
      let t1, t1$, t1$0, t0, t0$;
      if (t == null) dart.nullFailed(I[8], 99, 26, "t");
      t0 = t;
      (() => {
        t0.transform3(this[S._center]);
        t0.rotate3((t1 = this[S._axis0], (() => {
          t1.scale(this[S._halfExtents].x);
          return t1;
        })()));
        t0.rotate3((t1$ = this[S._axis1], (() => {
          t1$.scale(this[S._halfExtents].y);
          return t1$;
        })()));
        t0.rotate3((t1$0 = this[S._axis2], (() => {
          t1$0.scale(this[S._halfExtents].z);
          return t1$0;
        })()));
        return t0;
      })();
      t0$ = this[S._halfExtents];
      (() => {
        t0$.x = this[S._axis0].normalize();
        t0$.y = this[S._axis1].normalize();
        t0$.z = this[S._axis2].normalize();
        return t0$;
      })();
    }
    copyCorner(cornerIndex, corner) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5;
      if (cornerIndex == null) dart.nullFailed(I[8], 113, 23, "cornerIndex");
      if (corner == null) dart.nullFailed(I[8], 113, 44, "corner");
      if (!(dart.notNull(cornerIndex) >= 0 || dart.notNull(cornerIndex) < 8)) dart.assertFailed(null, I[8], 114, 12, "cornerIndex >= 0 || cornerIndex < 8");
      corner.setFrom(this[S._center]);
      switch (cornerIndex) {
        case 0:
        {
          t0 = corner;
          (() => {
            t0.addScaled(this[S._axis0], -dart.notNull(this[S._halfExtents].x));
            t0.addScaled(this[S._axis1], -dart.notNull(this[S._halfExtents].y));
            t0.addScaled(this[S._axis2], -dart.notNull(this[S._halfExtents].z));
            return t0;
          })();
          break;
        }
        case 1:
        {
          t0$ = corner;
          (() => {
            t0$.addScaled(this[S._axis0], -dart.notNull(this[S._halfExtents].x));
            t0$.addScaled(this[S._axis1], -dart.notNull(this[S._halfExtents].y));
            t0$.addScaled(this[S._axis2], this[S._halfExtents].z);
            return t0$;
          })();
          break;
        }
        case 2:
        {
          t0$0 = corner;
          (() => {
            t0$0.addScaled(this[S._axis0], -dart.notNull(this[S._halfExtents].x));
            t0$0.addScaled(this[S._axis1], this[S._halfExtents].y);
            t0$0.addScaled(this[S._axis2], -dart.notNull(this[S._halfExtents].z));
            return t0$0;
          })();
          break;
        }
        case 3:
        {
          t0$1 = corner;
          (() => {
            t0$1.addScaled(this[S._axis0], -dart.notNull(this[S._halfExtents].x));
            t0$1.addScaled(this[S._axis1], this[S._halfExtents].y);
            t0$1.addScaled(this[S._axis2], this[S._halfExtents].z);
            return t0$1;
          })();
          break;
        }
        case 4:
        {
          t0$2 = corner;
          (() => {
            t0$2.addScaled(this[S._axis0], this[S._halfExtents].x);
            t0$2.addScaled(this[S._axis1], -dart.notNull(this[S._halfExtents].y));
            t0$2.addScaled(this[S._axis2], -dart.notNull(this[S._halfExtents].z));
            return t0$2;
          })();
          break;
        }
        case 5:
        {
          t0$3 = corner;
          (() => {
            t0$3.addScaled(this[S._axis0], this[S._halfExtents].x);
            t0$3.addScaled(this[S._axis1], -dart.notNull(this[S._halfExtents].y));
            t0$3.addScaled(this[S._axis2], this[S._halfExtents].z);
            return t0$3;
          })();
          break;
        }
        case 6:
        {
          t0$4 = corner;
          (() => {
            t0$4.addScaled(this[S._axis0], this[S._halfExtents].x);
            t0$4.addScaled(this[S._axis1], this[S._halfExtents].y);
            t0$4.addScaled(this[S._axis2], -dart.notNull(this[S._halfExtents].z));
            return t0$4;
          })();
          break;
        }
        case 7:
        {
          t0$5 = corner;
          (() => {
            t0$5.addScaled(this[S._axis0], this[S._halfExtents].x);
            t0$5.addScaled(this[S._axis1], this[S._halfExtents].y);
            t0$5.addScaled(this[S._axis2], this[S._halfExtents].z);
            return t0$5;
          })();
          break;
        }
      }
    }
    closestPointTo(p, q) {
      if (p == null) dart.nullFailed(I[8], 171, 31, "p");
      if (q == null) dart.nullFailed(I[8], 171, 42, "q");
      let d = p['-'](this[S._center]);
      q.setFrom(this[S._center]);
      let dist = d.dot(this[S._axis0]);
      dist = dist[S.$clamp](-dart.notNull(this[S._halfExtents].x), this[S._halfExtents].x)[S.$toDouble]();
      q.addScaled(this[S._axis0], dist);
      dist = d.dot(this[S._axis1]);
      dist = dist[S.$clamp](-dart.notNull(this[S._halfExtents].y), this[S._halfExtents].y)[S.$toDouble]();
      q.addScaled(this[S._axis1], dist);
      dist = d.dot(this[S._axis2]);
      dist = dist[S.$clamp](-dart.notNull(this[S._halfExtents].z), this[S._halfExtents].z)[S.$toDouble]();
      q.addScaled(this[S._axis2], dist);
    }
    intersectsWithObb3(other, epsilon = 0.001) {
      let t0, t0$;
      if (other == null) dart.nullFailed(I[8], 195, 32, "other");
      if (epsilon == null) dart.nullFailed(I[8], 195, 47, "epsilon");
      t0 = vector_math_64.Obb3._r;
      (() => {
        t0.setEntry(0, 0, this[S._axis0].dot(other[S._axis0]));
        t0.setEntry(1, 0, this[S._axis1].dot(other[S._axis0]));
        t0.setEntry(2, 0, this[S._axis2].dot(other[S._axis0]));
        t0.setEntry(0, 1, this[S._axis0].dot(other[S._axis1]));
        t0.setEntry(1, 1, this[S._axis1].dot(other[S._axis1]));
        t0.setEntry(2, 1, this[S._axis2].dot(other[S._axis1]));
        t0.setEntry(0, 2, this[S._axis0].dot(other[S._axis2]));
        t0.setEntry(1, 2, this[S._axis1].dot(other[S._axis2]));
        t0.setEntry(2, 2, this[S._axis2].dot(other[S._axis2]));
        return t0;
      })();
      t0$ = vector_math_64.Obb3._t;
      (() => {
        t0$.setFrom(other[S._center]);
        t0$.sub(this[S._center]);
        return t0$;
      })();
      vector_math_64.Obb3._t.setValues(vector_math_64.Obb3._t.dot(this[S._axis0]), vector_math_64.Obb3._t.dot(this[S._axis1]), vector_math_64.Obb3._t.dot(this[S._axis2]));
      for (let i = 0; i < 3; i = i + 1) {
        for (let j = 0; j < 3; j = j + 1) {
          vector_math_64.Obb3._absR.setEntry(i, j, vector_math_64.Obb3._r.entry(i, j)[S.$abs]() + dart.notNull(epsilon));
        }
      }
      let ra = null;
      let rb = null;
      for (let i = 0; i < 3; i = i + 1) {
        ra = this[S._halfExtents]._get(i);
        rb = dart.notNull(other[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(i, 0)) + dart.notNull(other[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(i, 1)) + dart.notNull(other[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(i, 2));
        if (vector_math_64.Obb3._t._get(i)[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
          return false;
        }
      }
      for (let i = 0; i < 3; i = i + 1) {
        ra = dart.notNull(this[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, i)) + dart.notNull(this[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, i)) + dart.notNull(this[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, i));
        rb = other[S._halfExtents]._get(i);
        if ((dart.notNull(vector_math_64.Obb3._t._get(0)) * dart.notNull(vector_math_64.Obb3._r.entry(0, i)) + dart.notNull(vector_math_64.Obb3._t._get(1)) * dart.notNull(vector_math_64.Obb3._r.entry(1, i)) + dart.notNull(vector_math_64.Obb3._t._get(2)) * dart.notNull(vector_math_64.Obb3._r.entry(2, i)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
          return false;
        }
      }
      ra = dart.notNull(this[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 0)) + dart.notNull(this[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 0));
      rb = dart.notNull(other[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 2)) + dart.notNull(other[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 1));
      if ((dart.notNull(vector_math_64.Obb3._t._get(2)) * dart.notNull(vector_math_64.Obb3._r.entry(1, 0)) - dart.notNull(vector_math_64.Obb3._t._get(1)) * dart.notNull(vector_math_64.Obb3._r.entry(2, 0)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 1)) + dart.notNull(this[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 1));
      rb = dart.notNull(other[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 2)) + dart.notNull(other[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 0));
      if ((dart.notNull(vector_math_64.Obb3._t._get(2)) * dart.notNull(vector_math_64.Obb3._r.entry(1, 1)) - dart.notNull(vector_math_64.Obb3._t._get(1)) * dart.notNull(vector_math_64.Obb3._r.entry(2, 1)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 2)) + dart.notNull(this[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 2));
      rb = dart.notNull(other[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 1)) + dart.notNull(other[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 0));
      if ((dart.notNull(vector_math_64.Obb3._t._get(2)) * dart.notNull(vector_math_64.Obb3._r.entry(1, 2)) - dart.notNull(vector_math_64.Obb3._t._get(1)) * dart.notNull(vector_math_64.Obb3._r.entry(2, 2)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 0)) + dart.notNull(this[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 0));
      rb = dart.notNull(other[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 2)) + dart.notNull(other[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 1));
      if ((dart.notNull(vector_math_64.Obb3._t._get(0)) * dart.notNull(vector_math_64.Obb3._r.entry(2, 0)) - dart.notNull(vector_math_64.Obb3._t._get(2)) * dart.notNull(vector_math_64.Obb3._r.entry(0, 0)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 1)) + dart.notNull(this[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 1));
      rb = dart.notNull(other[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 2)) + dart.notNull(other[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 0));
      if ((dart.notNull(vector_math_64.Obb3._t._get(0)) * dart.notNull(vector_math_64.Obb3._r.entry(2, 1)) - dart.notNull(vector_math_64.Obb3._t._get(2)) * dart.notNull(vector_math_64.Obb3._r.entry(0, 1)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 2)) + dart.notNull(this[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 2));
      rb = dart.notNull(other[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 1)) + dart.notNull(other[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 0));
      if ((dart.notNull(vector_math_64.Obb3._t._get(0)) * dart.notNull(vector_math_64.Obb3._r.entry(2, 2)) - dart.notNull(vector_math_64.Obb3._t._get(2)) * dart.notNull(vector_math_64.Obb3._r.entry(0, 2)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 0)) + dart.notNull(this[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 0));
      rb = dart.notNull(other[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 2)) + dart.notNull(other[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 1));
      if ((dart.notNull(vector_math_64.Obb3._t._get(1)) * dart.notNull(vector_math_64.Obb3._r.entry(0, 0)) - dart.notNull(vector_math_64.Obb3._t._get(0)) * dart.notNull(vector_math_64.Obb3._r.entry(1, 0)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 1)) + dart.notNull(this[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 1));
      rb = dart.notNull(other[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 2)) + dart.notNull(other[S._halfExtents]._get(2)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 0));
      if ((dart.notNull(vector_math_64.Obb3._t._get(1)) * dart.notNull(vector_math_64.Obb3._r.entry(0, 1)) - dart.notNull(vector_math_64.Obb3._t._get(0)) * dart.notNull(vector_math_64.Obb3._r.entry(1, 1)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      ra = dart.notNull(this[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(1, 2)) + dart.notNull(this[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(0, 2));
      rb = dart.notNull(other[S._halfExtents]._get(0)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 1)) + dart.notNull(other[S._halfExtents]._get(1)) * dart.notNull(vector_math_64.Obb3._absR.entry(2, 0));
      if ((dart.notNull(vector_math_64.Obb3._t._get(1)) * dart.notNull(vector_math_64.Obb3._r.entry(0, 2)) - dart.notNull(vector_math_64.Obb3._t._get(0)) * dart.notNull(vector_math_64.Obb3._r.entry(1, 2)))[S.$abs]() > dart.notNull(ra) + dart.notNull(rb)) {
        return false;
      }
      return true;
    }
    intersectsWithTriangle(other, opts) {
      let t0, t0$, t0$0;
      if (other == null) dart.nullFailed(I[8], 347, 40, "other");
      let result = opts && 'result' in opts ? opts.result : null;
      vector_math_64.Obb3._triangle.copyFrom(other);
      t0 = vector_math_64.Obb3._triangle.point0;
      (() => {
        t0.sub(this[S._center]);
        t0.setValues(vector_math_64.Obb3._triangle.point0.dot(this.axis0), vector_math_64.Obb3._triangle.point0.dot(this.axis1), vector_math_64.Obb3._triangle.point0.dot(this.axis2));
        return t0;
      })();
      t0$ = vector_math_64.Obb3._triangle.point1;
      (() => {
        t0$.sub(this[S._center]);
        t0$.setValues(vector_math_64.Obb3._triangle.point1.dot(this.axis0), vector_math_64.Obb3._triangle.point1.dot(this.axis1), vector_math_64.Obb3._triangle.point1.dot(this.axis2));
        return t0$;
      })();
      t0$0 = vector_math_64.Obb3._triangle.point2;
      (() => {
        t0$0.sub(this[S._center]);
        t0$0.setValues(vector_math_64.Obb3._triangle.point2.dot(this.axis0), vector_math_64.Obb3._triangle.point2.dot(this.axis1), vector_math_64.Obb3._triangle.point2.dot(this.axis2));
        return t0$0;
      })();
      vector_math_64.Obb3._aabb3.setCenterAndHalfExtents(vector_math_64.Obb3._zeroVector, this[S._halfExtents]);
      return vector_math_64.Obb3._aabb3.intersectsWithTriangle(vector_math_64.Obb3._triangle, {result: result});
    }
    intersectsWithVector3(other) {
      let t0;
      if (other == null) dart.nullFailed(I[8], 372, 38, "other");
      t0 = vector_math_64.Obb3._vector;
      (() => {
        t0.setFrom(other);
        t0.sub(this[S._center]);
        t0.setValues(vector_math_64.Obb3._vector.dot(this.axis0), vector_math_64.Obb3._vector.dot(this.axis1), vector_math_64.Obb3._vector.dot(this.axis2));
        return t0;
      })();
      vector_math_64.Obb3._aabb3.setCenterAndHalfExtents(vector_math_64.Obb3._zeroVector, this[S._halfExtents]);
      return vector_math_64.Obb3._aabb3.intersectsWithVector3(vector_math_64.Obb3._vector);
    }
    intersectsWithQuad(other, opts) {
      if (other == null) dart.nullFailed(I[8], 388, 32, "other");
      let result = opts && 'result' in opts ? opts.result : null;
      other.copyTriangles(vector_math_64.Obb3._quadTriangle0, vector_math_64.Obb3._quadTriangle1);
      return dart.test(this.intersectsWithTriangle(vector_math_64.Obb3._quadTriangle0, {result: result})) || dart.test(this.intersectsWithTriangle(vector_math_64.Obb3._quadTriangle1, {result: result}));
    }
  };
  (vector_math_64.Obb3.new = function() {
    this[S._center] = new vector_math_64.Vector3.zero();
    this[S._halfExtents] = new vector_math_64.Vector3.zero();
    this[S._axis0] = vector_math_64.Vector3.new(1.0, 0.0, 0.0);
    this[S._axis1] = vector_math_64.Vector3.new(0.0, 1.0, 0.0);
    this[S._axis2] = vector_math_64.Vector3.new(0.0, 0.0, 1.0);
    ;
  }).prototype = vector_math_64.Obb3.prototype;
  (vector_math_64.Obb3.copy = function(other) {
    if (other == null) dart.nullFailed(I[8], 39, 18, "other");
    this[S._center] = vector_math_64.Vector3.copy(other[S._center]);
    this[S._halfExtents] = vector_math_64.Vector3.copy(other[S._halfExtents]);
    this[S._axis0] = vector_math_64.Vector3.copy(other[S._axis0]);
    this[S._axis1] = vector_math_64.Vector3.copy(other[S._axis1]);
    this[S._axis2] = vector_math_64.Vector3.copy(other[S._axis2]);
    ;
  }).prototype = vector_math_64.Obb3.prototype;
  (vector_math_64.Obb3.centerExtentsAxes = function(center, halfExtents, axis0, axis1, axis2) {
    if (center == null) dart.nullFailed(I[8], 47, 34, "center");
    if (halfExtents == null) dart.nullFailed(I[8], 47, 50, "halfExtents");
    if (axis0 == null) dart.nullFailed(I[8], 47, 71, "axis0");
    if (axis1 == null) dart.nullFailed(I[8], 48, 15, "axis1");
    if (axis2 == null) dart.nullFailed(I[8], 48, 30, "axis2");
    this[S._center] = vector_math_64.Vector3.copy(center);
    this[S._halfExtents] = vector_math_64.Vector3.copy(halfExtents);
    this[S._axis0] = vector_math_64.Vector3.copy(axis0);
    this[S._axis1] = vector_math_64.Vector3.copy(axis1);
    this[S._axis2] = vector_math_64.Vector3.copy(axis2);
    ;
  }).prototype = vector_math_64.Obb3.prototype;
  dart.addTypeTests(vector_math_64.Obb3);
  dart.addTypeCaches(vector_math_64.Obb3);
  dart.setMethodSignature(vector_math_64.Obb3, () => ({
    __proto__: dart.getMethods(vector_math_64.Obb3.__proto__),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Obb3]),
    copyInto: dart.fnType(dart.void, [vector_math_64.Obb3]),
    resetRotation: dart.fnType(dart.void, []),
    translate: dart.fnType(dart.void, [vector_math_64.Vector3]),
    rotate: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    transform: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    copyCorner: dart.fnType(dart.void, [core.int, vector_math_64.Vector3]),
    closestPointTo: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3]),
    intersectsWithObb3: dart.fnType(core.bool, [vector_math_64.Obb3], [core.double]),
    intersectsWithTriangle: dart.fnType(core.bool, [vector_math_64.Triangle], {result: dart.nullable(vector_math_64.IntersectionResult)}, {}),
    intersectsWithVector3: dart.fnType(core.bool, [vector_math_64.Vector3]),
    intersectsWithQuad: dart.fnType(core.bool, [vector_math_64.Quad], {result: dart.nullable(vector_math_64.IntersectionResult)}, {})
  }));
  dart.setGetterSignature(vector_math_64.Obb3, () => ({
    __proto__: dart.getGetters(vector_math_64.Obb3.__proto__),
    center: vector_math_64.Vector3,
    halfExtents: vector_math_64.Vector3,
    axis0: vector_math_64.Vector3,
    axis1: vector_math_64.Vector3,
    axis2: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Obb3, I[1]);
  dart.setFieldSignature(vector_math_64.Obb3, () => ({
    __proto__: dart.getFields(vector_math_64.Obb3.__proto__),
    [S._center]: dart.finalFieldType(vector_math_64.Vector3),
    [S._halfExtents]: dart.finalFieldType(vector_math_64.Vector3),
    [S._axis0]: dart.finalFieldType(vector_math_64.Vector3),
    [S._axis1]: dart.finalFieldType(vector_math_64.Vector3),
    [S._axis2]: dart.finalFieldType(vector_math_64.Vector3)
  }));
  dart.defineLazy(vector_math_64.Obb3, {
    /*vector_math_64.Obb3._r*/get _r() {
      return new vector_math_64.Matrix3.zero();
    },
    /*vector_math_64.Obb3._absR*/get _absR() {
      return new vector_math_64.Matrix3.zero();
    },
    /*vector_math_64.Obb3._t*/get _t() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Obb3._triangle*/get _triangle() {
      return new vector_math_64.Triangle.new();
    },
    /*vector_math_64.Obb3._aabb3*/get _aabb3() {
      return new vector_math_64.Aabb3.new();
    },
    /*vector_math_64.Obb3._zeroVector*/get _zeroVector() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Obb3._vector*/get _vector() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Obb3._quadTriangle0*/get _quadTriangle0() {
      return new vector_math_64.Triangle.new();
    },
    /*vector_math_64.Obb3._quadTriangle1*/get _quadTriangle1() {
      return new vector_math_64.Triangle.new();
    }
  }, false);
  vector_math_64.Plane = class Plane extends core.Object {
    get constant() {
      return this[S.constant];
    }
    set constant(value) {
      this[S.constant] = value;
    }
    static intersection(a, b, c, result) {
      let t0;
      if (a == null) dart.nullFailed(I[9], 13, 34, "a");
      if (b == null) dart.nullFailed(I[9], 13, 43, "b");
      if (c == null) dart.nullFailed(I[9], 13, 52, "c");
      if (result == null) dart.nullFailed(I[9], 13, 63, "result");
      let cross = new vector_math_64.Vector3.zero();
      b.normal.crossInto(c.normal, cross);
      let f = -dart.notNull(a.normal.dot(cross));
      let v1 = cross.scaled(a.constant);
      c.normal.crossInto(a.normal, cross);
      let v2 = cross.scaled(b.constant);
      a.normal.crossInto(b.normal, cross);
      let v3 = cross.scaled(c.constant);
      t0 = result;
      (() => {
        t0.x = (dart.notNull(v1.x) + dart.notNull(v2.x) + dart.notNull(v3.x)) / f;
        t0.y = (dart.notNull(v1.y) + dart.notNull(v2.y) + dart.notNull(v3.y)) / f;
        t0.z = (dart.notNull(v1.z) + dart.notNull(v2.z) + dart.notNull(v3.z)) / f;
        return t0;
      })();
    }
    get normal() {
      return this[S._normal];
    }
    copyFrom(o) {
      if (o == null) dart.nullFailed(I[9], 52, 23, "o");
      this[S._normal].setFrom(o[S._normal]);
      this.constant = o.constant;
    }
    setFromComponents(x, y, z, w) {
      if (x == null) dart.nullFailed(I[9], 57, 33, "x");
      if (y == null) dart.nullFailed(I[9], 57, 43, "y");
      if (z == null) dart.nullFailed(I[9], 57, 53, "z");
      if (w == null) dart.nullFailed(I[9], 57, 63, "w");
      this[S._normal].setValues(x, y, z);
      this.constant = w;
    }
    normalize() {
      let inverseLength = 1.0 / dart.notNull(this.normal.length);
      this[S._normal].scale(inverseLength);
      this.constant = dart.notNull(this.constant) * inverseLength;
    }
    distanceToVector3(point) {
      if (point == null) dart.nullFailed(I[9], 68, 36, "point");
      return dart.notNull(this[S._normal].dot(point)) + dart.notNull(this.constant);
    }
  };
  (vector_math_64.Plane.new = function() {
    this[S._normal] = new vector_math_64.Vector3.zero();
    this[S.constant] = 0.0;
    ;
  }).prototype = vector_math_64.Plane.prototype;
  (vector_math_64.Plane.copy = function(other) {
    if (other == null) dart.nullFailed(I[9], 42, 20, "other");
    this[S._normal] = vector_math_64.Vector3.copy(other[S._normal]);
    this[S.constant] = other.constant;
    ;
  }).prototype = vector_math_64.Plane.prototype;
  (vector_math_64.Plane.components = function(x, y, z, constant) {
    if (x == null) dart.nullFailed(I[9], 46, 27, "x");
    if (y == null) dart.nullFailed(I[9], 46, 37, "y");
    if (z == null) dart.nullFailed(I[9], 46, 47, "z");
    if (constant == null) dart.nullFailed(I[9], 46, 55, "constant");
    this[S.constant] = constant;
    this[S._normal] = vector_math_64.Vector3.new(x, y, z);
    ;
  }).prototype = vector_math_64.Plane.prototype;
  (vector_math_64.Plane.normalconstant = function(normal_, constant) {
    if (normal_ == null) dart.nullFailed(I[9], 49, 32, "normal_");
    if (constant == null) dart.nullFailed(I[9], 49, 46, "constant");
    this[S.constant] = constant;
    this[S._normal] = vector_math_64.Vector3.copy(normal_);
    ;
  }).prototype = vector_math_64.Plane.prototype;
  dart.addTypeTests(vector_math_64.Plane);
  dart.addTypeCaches(vector_math_64.Plane);
  dart.setMethodSignature(vector_math_64.Plane, () => ({
    __proto__: dart.getMethods(vector_math_64.Plane.__proto__),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Plane]),
    setFromComponents: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    normalize: dart.fnType(dart.void, []),
    distanceToVector3: dart.fnType(core.double, [vector_math_64.Vector3])
  }));
  dart.setGetterSignature(vector_math_64.Plane, () => ({
    __proto__: dart.getGetters(vector_math_64.Plane.__proto__),
    normal: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Plane, I[1]);
  dart.setFieldSignature(vector_math_64.Plane, () => ({
    __proto__: dart.getFields(vector_math_64.Plane.__proto__),
    [S._normal]: dart.finalFieldType(vector_math_64.Vector3),
    constant: dart.fieldType(core.double)
  }));
  vector_math_64.Quad = class Quad extends core.Object {
    get point0() {
      return this[S._point0];
    }
    get point1() {
      return this[S._point1];
    }
    get point2() {
      return this[S._point2];
    }
    get point3() {
      return this[S._point3];
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[10], 48, 22, "other");
      this[S._point0].setFrom(other[S._point0]);
      this[S._point1].setFrom(other[S._point1]);
      this[S._point2].setFrom(other[S._point2]);
      this[S._point3].setFrom(other[S._point3]);
    }
    copyNormalInto(normal) {
      let t0, t0$;
      if (normal == null) dart.nullFailed(I[10], 56, 31, "normal");
      let v0 = (t0 = this[S._point0].clone(), (() => {
        t0.sub(this[S._point1]);
        return t0;
      })());
      t0$ = normal;
      (() => {
        t0$.setFrom(this[S._point2]);
        t0$.sub(this[S._point1]);
        t0$.crossInto(v0, normal);
        t0$.normalize();
        return t0$;
      })();
    }
    copyTriangles(triangle0, triangle1) {
      if (triangle0 == null) dart.nullFailed(I[10], 66, 31, "triangle0");
      if (triangle1 == null) dart.nullFailed(I[10], 66, 51, "triangle1");
      triangle0[S._point0].setFrom(this[S._point0]);
      triangle0[S._point1].setFrom(this[S._point1]);
      triangle0[S._point2].setFrom(this[S._point2]);
      triangle1[S._point0].setFrom(this[S._point0]);
      triangle1[S._point1].setFrom(this[S._point3]);
      triangle1[S._point2].setFrom(this[S._point2]);
    }
    transform(t) {
      let t0;
      if (t == null) dart.nullFailed(I[10], 76, 26, "t");
      t0 = t;
      (() => {
        t0.transform3(this[S._point0]);
        t0.transform3(this[S._point1]);
        t0.transform3(this[S._point2]);
        t0.transform3(this[S._point3]);
        return t0;
      })();
    }
    translate(offset) {
      if (offset == null) dart.nullFailed(I[10], 85, 26, "offset");
      this[S._point0].add(offset);
      this[S._point1].add(offset);
      this[S._point2].add(offset);
      this[S._point3].add(offset);
    }
  };
  (vector_math_64.Quad.new = function() {
    this[S._point0] = new vector_math_64.Vector3.zero();
    this[S._point1] = new vector_math_64.Vector3.zero();
    this[S._point2] = new vector_math_64.Vector3.zero();
    this[S._point3] = new vector_math_64.Vector3.zero();
    ;
  }).prototype = vector_math_64.Quad.prototype;
  (vector_math_64.Quad.copy = function(other) {
    if (other == null) dart.nullFailed(I[10], 34, 18, "other");
    this[S._point0] = vector_math_64.Vector3.copy(other[S._point0]);
    this[S._point1] = vector_math_64.Vector3.copy(other[S._point1]);
    this[S._point2] = vector_math_64.Vector3.copy(other[S._point2]);
    this[S._point3] = vector_math_64.Vector3.copy(other[S._point2]);
    ;
  }).prototype = vector_math_64.Quad.prototype;
  (vector_math_64.Quad.points = function(point0, point1, point2, point3) {
    if (point0 == null) dart.nullFailed(I[10], 41, 23, "point0");
    if (point1 == null) dart.nullFailed(I[10], 41, 39, "point1");
    if (point2 == null) dart.nullFailed(I[10], 41, 55, "point2");
    if (point3 == null) dart.nullFailed(I[10], 41, 71, "point3");
    this[S._point0] = vector_math_64.Vector3.copy(point0);
    this[S._point1] = vector_math_64.Vector3.copy(point1);
    this[S._point2] = vector_math_64.Vector3.copy(point2);
    this[S._point3] = vector_math_64.Vector3.copy(point3);
    ;
  }).prototype = vector_math_64.Quad.prototype;
  dart.addTypeTests(vector_math_64.Quad);
  dart.addTypeCaches(vector_math_64.Quad);
  dart.setMethodSignature(vector_math_64.Quad, () => ({
    __proto__: dart.getMethods(vector_math_64.Quad.__proto__),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Quad]),
    copyNormalInto: dart.fnType(dart.void, [vector_math_64.Vector3]),
    copyTriangles: dart.fnType(dart.void, [vector_math_64.Triangle, vector_math_64.Triangle]),
    transform: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    translate: dart.fnType(dart.void, [vector_math_64.Vector3])
  }));
  dart.setGetterSignature(vector_math_64.Quad, () => ({
    __proto__: dart.getGetters(vector_math_64.Quad.__proto__),
    point0: vector_math_64.Vector3,
    point1: vector_math_64.Vector3,
    point2: vector_math_64.Vector3,
    point3: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Quad, I[1]);
  dart.setFieldSignature(vector_math_64.Quad, () => ({
    __proto__: dart.getFields(vector_math_64.Quad.__proto__),
    [S._point0]: dart.finalFieldType(vector_math_64.Vector3),
    [S._point1]: dart.finalFieldType(vector_math_64.Vector3),
    [S._point2]: dart.finalFieldType(vector_math_64.Vector3),
    [S._point3]: dart.finalFieldType(vector_math_64.Vector3)
  }));
  vector_math_64.Quaternion = class Quaternion extends core.Object {
    get storage() {
      return this[S._qStorage];
    }
    get x() {
      return this[S._qStorage][S.$_get](0);
    }
    set x(x) {
      if (x == null) dart.nullFailed(I[11], 21, 16, "x");
      this[S._qStorage][S.$_set](0, x);
    }
    get y() {
      return this[S._qStorage][S.$_get](1);
    }
    set y(y) {
      if (y == null) dart.nullFailed(I[11], 27, 16, "y");
      this[S._qStorage][S.$_set](1, y);
    }
    get z() {
      return this[S._qStorage][S.$_get](2);
    }
    set z(z) {
      if (z == null) dart.nullFailed(I[11], 33, 16, "z");
      this[S._qStorage][S.$_set](2, z);
    }
    get w() {
      return this[S._qStorage][S.$_get](3);
    }
    set w(w) {
      if (w == null) dart.nullFailed(I[11], 39, 16, "w");
      this[S._qStorage][S.$_set](3, w);
    }
    static new(x, y, z, w) {
      let t0;
      if (x == null) dart.nullFailed(I[11], 46, 29, "x");
      if (y == null) dart.nullFailed(I[11], 46, 39, "y");
      if (z == null) dart.nullFailed(I[11], 46, 49, "z");
      if (w == null) dart.nullFailed(I[11], 46, 59, "w");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setValues(x, y, z, w);
        return t0;
      })();
    }
    static fromRotation(rotationMatrix) {
      let t0;
      if (rotationMatrix == null) dart.nullFailed(I[11], 50, 43, "rotationMatrix");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setFromRotation(rotationMatrix);
        return t0;
      })();
    }
    static axisAngle(axis, angle) {
      let t0;
      if (axis == null) dart.nullFailed(I[11], 54, 40, "axis");
      if (angle == null) dart.nullFailed(I[11], 54, 53, "angle");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setAxisAngle(axis, angle);
        return t0;
      })();
    }
    static fromTwoVectors(a, b) {
      let t0;
      if (a == null) dart.nullFailed(I[11], 58, 45, "a");
      if (b == null) dart.nullFailed(I[11], 58, 56, "b");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setFromTwoVectors(a, b);
        return t0;
      })();
    }
    static copy(original) {
      let t0;
      if (original == null) dart.nullFailed(I[11], 62, 38, "original");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setFrom(original);
        return t0;
      })();
    }
    static random(rn) {
      let t0;
      if (rn == null) dart.nullFailed(I[11], 67, 41, "rn");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setRandom(rn);
        return t0;
      })();
    }
    static identity() {
      let t0;
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0[S._qStorage][S.$_set](3, 1.0);
        return t0;
      })();
    }
    static dq(q, omega) {
      let t0;
      if (q == null) dart.nullFailed(I[11], 74, 36, "q");
      if (omega == null) dart.nullFailed(I[11], 74, 47, "omega");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setDQ(q, omega);
        return t0;
      })();
    }
    static euler(yaw, pitch, roll) {
      let t0;
      if (yaw == null) dart.nullFailed(I[11], 78, 35, "yaw");
      if (pitch == null) dart.nullFailed(I[11], 78, 47, "pitch");
      if (roll == null) dart.nullFailed(I[11], 78, 61, "roll");
      t0 = new vector_math_64.Quaternion.__();
      return (() => {
        t0.setEuler(yaw, pitch, roll);
        return t0;
      })();
    }
    clone() {
      return vector_math_64.Quaternion.copy(this);
    }
    setFrom(source) {
      if (source == null) dart.nullFailed(I[11], 94, 27, "source");
      let sourceStorage = source[S._qStorage];
      this[S._qStorage][S.$_set](0, sourceStorage[S.$_get](0));
      this[S._qStorage][S.$_set](1, sourceStorage[S.$_get](1));
      this[S._qStorage][S.$_set](2, sourceStorage[S.$_get](2));
      this[S._qStorage][S.$_set](3, sourceStorage[S.$_get](3));
    }
    setValues(x, y, z, w) {
      if (x == null) dart.nullFailed(I[11], 103, 25, "x");
      if (y == null) dart.nullFailed(I[11], 103, 35, "y");
      if (z == null) dart.nullFailed(I[11], 103, 45, "z");
      if (w == null) dart.nullFailed(I[11], 103, 55, "w");
      this[S._qStorage][S.$_set](0, x);
      this[S._qStorage][S.$_set](1, y);
      this[S._qStorage][S.$_set](2, z);
      this[S._qStorage][S.$_set](3, w);
    }
    setAxisAngle(axis, radians) {
      if (axis == null) dart.nullFailed(I[11], 111, 29, "axis");
      if (radians == null) dart.nullFailed(I[11], 111, 42, "radians");
      let len = axis.length;
      if (len === 0.0) {
        return;
      }
      let halfSin = math.sin(dart.notNull(radians) * 0.5) / dart.notNull(len);
      let axisStorage = axis.storage;
      this[S._qStorage][S.$_set](0, dart.notNull(axisStorage[S.$_get](0)) * halfSin);
      this[S._qStorage][S.$_set](1, dart.notNull(axisStorage[S.$_get](1)) * halfSin);
      this[S._qStorage][S.$_set](2, dart.notNull(axisStorage[S.$_get](2)) * halfSin);
      this[S._qStorage][S.$_set](3, math.cos(dart.notNull(radians) * 0.5));
    }
    setFromRotation(rotationMatrix) {
      if (rotationMatrix == null) dart.nullFailed(I[11], 125, 32, "rotationMatrix");
      let rotationMatrixStorage = rotationMatrix.storage;
      let trace = rotationMatrix.trace();
      if (dart.notNull(trace) > 0.0) {
        let s = math.sqrt(dart.notNull(trace) + 1.0);
        this[S._qStorage][S.$_set](3, s * 0.5);
        s = 0.5 / s;
        this[S._qStorage][S.$_set](0, (dart.notNull(rotationMatrixStorage[S.$_get](5)) - dart.notNull(rotationMatrixStorage[S.$_get](7))) * s);
        this[S._qStorage][S.$_set](1, (dart.notNull(rotationMatrixStorage[S.$_get](6)) - dart.notNull(rotationMatrixStorage[S.$_get](2))) * s);
        this[S._qStorage][S.$_set](2, (dart.notNull(rotationMatrixStorage[S.$_get](1)) - dart.notNull(rotationMatrixStorage[S.$_get](3))) * s);
      } else {
        let i = dart.notNull(rotationMatrixStorage[S.$_get](0)) < dart.notNull(rotationMatrixStorage[S.$_get](4)) ? dart.notNull(rotationMatrixStorage[S.$_get](4)) < dart.notNull(rotationMatrixStorage[S.$_get](8)) ? 2 : 1 : dart.notNull(rotationMatrixStorage[S.$_get](0)) < dart.notNull(rotationMatrixStorage[S.$_get](8)) ? 2 : 0;
        let j = (i + 1)[S.$modulo](3);
        let k = (i + 2)[S.$modulo](3);
        let s = math.sqrt(dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(i, i))) - dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(j, j))) - dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(k, k))) + 1.0);
        this[S._qStorage][S.$_set](i, s * 0.5);
        s = 0.5 / s;
        this[S._qStorage][S.$_set](3, (dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(k, j))) - dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(j, k)))) * s);
        this[S._qStorage][S.$_set](j, (dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(j, i))) + dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(i, j)))) * s);
        this[S._qStorage][S.$_set](k, (dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(k, i))) + dart.notNull(rotationMatrixStorage[S.$_get](rotationMatrix.index(i, k)))) * s);
      }
    }
    setFromTwoVectors(a, b) {
      if (a == null) dart.nullFailed(I[11], 159, 34, "a");
      if (b == null) dart.nullFailed(I[11], 159, 45, "b");
      let v1 = a.normalized();
      let v2 = b.normalized();
      let c = v1.dot(v2);
      let angle = math.acos(c);
      let axis = v1.cross(v2);
      if ((1.0 + dart.notNull(c))[S.$abs]() < 0.0005) {
        angle = 3.141592653589793;
        if (dart.notNull(v1.x) > dart.notNull(v1.y) && dart.notNull(v1.x) > dart.notNull(v1.z)) {
          axis = v1.cross(vector_math_64.Vector3.new(0.0, 1.0, 0.0));
        } else {
          axis = v1.cross(vector_math_64.Vector3.new(1.0, 0.0, 0.0));
        }
      } else if ((1.0 - dart.notNull(c))[S.$abs]() < 0.0005) {
        angle = 0.0;
        axis = vector_math_64.Vector3.new(1.0, 0.0, 0.0);
      }
      this.setAxisAngle(axis.normalized(), angle);
    }
    setRandom(rn) {
      if (rn == null) dart.nullFailed(I[11], 192, 30, "rn");
      let x0 = rn.nextDouble();
      let r1 = math.sqrt(1.0 - dart.notNull(x0));
      let r2 = math.sqrt(x0);
      let t1 = 3.141592653589793 * 2.0 * dart.notNull(rn.nextDouble());
      let t2 = 3.141592653589793 * 2.0 * dart.notNull(rn.nextDouble());
      let c1 = math.cos(t1);
      let s1 = math.sin(t1);
      let c2 = math.cos(t2);
      let s2 = math.sin(t2);
      this[S._qStorage][S.$_set](0, s1 * r1);
      this[S._qStorage][S.$_set](1, c1 * r1);
      this[S._qStorage][S.$_set](2, s2 * r2);
      this[S._qStorage][S.$_set](3, c2 * r2);
    }
    setDQ(q, omega) {
      if (q == null) dart.nullFailed(I[11], 212, 25, "q");
      if (omega == null) dart.nullFailed(I[11], 212, 36, "omega");
      let qStorage = q[S._qStorage];
      let omegaStorage = omega.storage;
      let qx = qStorage[S.$_get](0);
      let qy = qStorage[S.$_get](1);
      let qz = qStorage[S.$_get](2);
      let qw = qStorage[S.$_get](3);
      let ox = omegaStorage[S.$_get](0);
      let oy = omegaStorage[S.$_get](1);
      let oz = omegaStorage[S.$_get](2);
      let _x = dart.notNull(ox) * dart.notNull(qw) + dart.notNull(oy) * dart.notNull(qz) - dart.notNull(oz) * dart.notNull(qy);
      let _y = dart.notNull(oy) * dart.notNull(qw) + dart.notNull(oz) * dart.notNull(qx) - dart.notNull(ox) * dart.notNull(qz);
      let _z = dart.notNull(oz) * dart.notNull(qw) + dart.notNull(ox) * dart.notNull(qy) - dart.notNull(oy) * dart.notNull(qx);
      let _w = -dart.notNull(ox) * dart.notNull(qx) - dart.notNull(oy) * dart.notNull(qy) - dart.notNull(oz) * dart.notNull(qz);
      this[S._qStorage][S.$_set](0, _x * 0.5);
      this[S._qStorage][S.$_set](1, _y * 0.5);
      this[S._qStorage][S.$_set](2, _z * 0.5);
      this[S._qStorage][S.$_set](3, _w * 0.5);
    }
    setEuler(yaw, pitch, roll) {
      if (yaw == null) dart.nullFailed(I[11], 233, 24, "yaw");
      if (pitch == null) dart.nullFailed(I[11], 233, 36, "pitch");
      if (roll == null) dart.nullFailed(I[11], 233, 50, "roll");
      let halfYaw = dart.notNull(yaw) * 0.5;
      let halfPitch = dart.notNull(pitch) * 0.5;
      let halfRoll = dart.notNull(roll) * 0.5;
      let cosYaw = math.cos(halfYaw);
      let sinYaw = math.sin(halfYaw);
      let cosPitch = math.cos(halfPitch);
      let sinPitch = math.sin(halfPitch);
      let cosRoll = math.cos(halfRoll);
      let sinRoll = math.sin(halfRoll);
      this[S._qStorage][S.$_set](0, cosRoll * sinPitch * cosYaw + sinRoll * cosPitch * sinYaw);
      this[S._qStorage][S.$_set](1, cosRoll * cosPitch * sinYaw - sinRoll * sinPitch * cosYaw);
      this[S._qStorage][S.$_set](2, sinRoll * cosPitch * cosYaw - cosRoll * sinPitch * sinYaw);
      this[S._qStorage][S.$_set](3, cosRoll * cosPitch * cosYaw + sinRoll * sinPitch * sinYaw);
    }
    normalize() {
      let t1, t0, t1$, t0$, t1$0, t0$0, t1$1, t0$1;
      let l = this.length;
      if (l === 0.0) {
        return 0.0;
      }
      let d = 1.0 / dart.notNull(l);
      t0 = this[S._qStorage];
      t1 = 0;
      t0[S.$_set](t1, dart.notNull(t0[S.$_get](t1)) * d);
      t0$ = this[S._qStorage];
      t1$ = 1;
      t0$[S.$_set](t1$, dart.notNull(t0$[S.$_get](t1$)) * d);
      t0$0 = this[S._qStorage];
      t1$0 = 2;
      t0$0[S.$_set](t1$0, dart.notNull(t0$0[S.$_get](t1$0)) * d);
      t0$1 = this[S._qStorage];
      t1$1 = 3;
      t0$1[S.$_set](t1$1, dart.notNull(t0$1[S.$_get](t1$1)) * d);
      return l;
    }
    conjugate() {
      this[S._qStorage][S.$_set](2, -dart.notNull(this[S._qStorage][S.$_get](2)));
      this[S._qStorage][S.$_set](1, -dart.notNull(this[S._qStorage][S.$_get](1)));
      this[S._qStorage][S.$_set](0, -dart.notNull(this[S._qStorage][S.$_get](0)));
    }
    inverse() {
      let l = 1.0 / dart.notNull(this.length2);
      this[S._qStorage][S.$_set](3, dart.notNull(this[S._qStorage][S.$_get](3)) * l);
      this[S._qStorage][S.$_set](2, -dart.notNull(this[S._qStorage][S.$_get](2)) * l);
      this[S._qStorage][S.$_set](1, -dart.notNull(this[S._qStorage][S.$_get](1)) * l);
      this[S._qStorage][S.$_set](0, -dart.notNull(this[S._qStorage][S.$_get](0)) * l);
    }
    normalized() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.normalize();
        return t0;
      })();
    }
    conjugated() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.conjugate();
        return t0;
      })();
    }
    inverted() {
      let t0;
      t0 = this.clone();
      return (() => {
        t0.inverse();
        return t0;
      })();
    }
    get radians() {
      return 2.0 * math.acos(this[S._qStorage][S.$_get](3));
    }
    get axis() {
      let den = 1.0 - dart.notNull(this[S._qStorage][S.$_get](3)) * dart.notNull(this[S._qStorage][S.$_get](3));
      if (den < 0.0005) {
        return new vector_math_64.Vector3.zero();
      }
      let scale = 1.0 / math.sqrt(den);
      return vector_math_64.Vector3.new(dart.notNull(this[S._qStorage][S.$_get](0)) * scale, dart.notNull(this[S._qStorage][S.$_get](1)) * scale, dart.notNull(this[S._qStorage][S.$_get](2)) * scale);
    }
    get length2() {
      let x = this[S._qStorage][S.$_get](0);
      let y = this[S._qStorage][S.$_get](1);
      let z = this[S._qStorage][S.$_get](2);
      let w = this[S._qStorage][S.$_get](3);
      return dart.notNull(x) * dart.notNull(x) + dart.notNull(y) * dart.notNull(y) + dart.notNull(z) * dart.notNull(z) + dart.notNull(w) * dart.notNull(w);
    }
    get length() {
      return math.sqrt(this.length2);
    }
    rotated(v) {
      if (v == null) dart.nullFailed(I[11], 317, 27, "v");
      let out = v.clone();
      this.rotate(out);
      return out;
    }
    rotate(v) {
      if (v == null) dart.nullFailed(I[11], 324, 26, "v");
      let _w = this[S._qStorage][S.$_get](3);
      let _z = this[S._qStorage][S.$_get](2);
      let _y = this[S._qStorage][S.$_get](1);
      let _x = this[S._qStorage][S.$_get](0);
      let tiw = _w;
      let tiz = -dart.notNull(_z);
      let tiy = -dart.notNull(_y);
      let tix = -dart.notNull(_x);
      let tx = dart.notNull(tiw) * dart.notNull(v.x) + tix * 0.0 + tiy * dart.notNull(v.z) - tiz * dart.notNull(v.y);
      let ty = dart.notNull(tiw) * dart.notNull(v.y) + tiy * 0.0 + tiz * dart.notNull(v.x) - tix * dart.notNull(v.z);
      let tz = dart.notNull(tiw) * dart.notNull(v.z) + tiz * 0.0 + tix * dart.notNull(v.y) - tiy * dart.notNull(v.x);
      let tw = dart.notNull(tiw) * 0.0 - tix * dart.notNull(v.x) - tiy * dart.notNull(v.y) - tiz * dart.notNull(v.z);
      let result_x = tw * dart.notNull(_x) + tx * dart.notNull(_w) + ty * dart.notNull(_z) - tz * dart.notNull(_y);
      let result_y = tw * dart.notNull(_y) + ty * dart.notNull(_w) + tz * dart.notNull(_x) - tx * dart.notNull(_z);
      let result_z = tw * dart.notNull(_z) + tz * dart.notNull(_w) + tx * dart.notNull(_y) - ty * dart.notNull(_x);
      let vStorage = v.storage;
      vStorage[S.$_set](2, result_z);
      vStorage[S.$_set](1, result_y);
      vStorage[S.$_set](0, result_x);
      return v;
    }
    add(arg) {
      if (arg == null) dart.nullFailed(I[11], 349, 23, "arg");
      let argStorage = arg[S._qStorage];
      this[S._qStorage][S.$_set](0, dart.notNull(this[S._qStorage][S.$_get](0)) + dart.notNull(argStorage[S.$_get](0)));
      this[S._qStorage][S.$_set](1, dart.notNull(this[S._qStorage][S.$_get](1)) + dart.notNull(argStorage[S.$_get](1)));
      this[S._qStorage][S.$_set](2, dart.notNull(this[S._qStorage][S.$_get](2)) + dart.notNull(argStorage[S.$_get](2)));
      this[S._qStorage][S.$_set](3, dart.notNull(this[S._qStorage][S.$_get](3)) + dart.notNull(argStorage[S.$_get](3)));
    }
    sub(arg) {
      if (arg == null) dart.nullFailed(I[11], 358, 23, "arg");
      let argStorage = arg[S._qStorage];
      this[S._qStorage][S.$_set](0, dart.notNull(this[S._qStorage][S.$_get](0)) - dart.notNull(argStorage[S.$_get](0)));
      this[S._qStorage][S.$_set](1, dart.notNull(this[S._qStorage][S.$_get](1)) - dart.notNull(argStorage[S.$_get](1)));
      this[S._qStorage][S.$_set](2, dart.notNull(this[S._qStorage][S.$_get](2)) - dart.notNull(argStorage[S.$_get](2)));
      this[S._qStorage][S.$_set](3, dart.notNull(this[S._qStorage][S.$_get](3)) - dart.notNull(argStorage[S.$_get](3)));
    }
    scale(scale) {
      if (scale == null) dart.nullFailed(I[11], 367, 21, "scale");
      this[S._qStorage][S.$_set](3, dart.notNull(this[S._qStorage][S.$_get](3)) * dart.notNull(scale));
      this[S._qStorage][S.$_set](2, dart.notNull(this[S._qStorage][S.$_get](2)) * dart.notNull(scale));
      this[S._qStorage][S.$_set](1, dart.notNull(this[S._qStorage][S.$_get](1)) * dart.notNull(scale));
      this[S._qStorage][S.$_set](0, dart.notNull(this[S._qStorage][S.$_get](0)) * dart.notNull(scale));
    }
    scaled(scale) {
      let t0;
      if (scale == null) dart.nullFailed(I[11], 375, 28, "scale");
      t0 = this.clone();
      return (() => {
        t0.scale(scale);
        return t0;
      })();
    }
    ['*'](other) {
      if (other == null) dart.nullFailed(I[11], 378, 36, "other");
      let _w = this[S._qStorage][S.$_get](3);
      let _z = this[S._qStorage][S.$_get](2);
      let _y = this[S._qStorage][S.$_get](1);
      let _x = this[S._qStorage][S.$_get](0);
      let otherStorage = other[S._qStorage];
      let ow = otherStorage[S.$_get](3);
      let oz = otherStorage[S.$_get](2);
      let oy = otherStorage[S.$_get](1);
      let ox = otherStorage[S.$_get](0);
      return vector_math_64.Quaternion.new(dart.notNull(_w) * dart.notNull(ox) + dart.notNull(_x) * dart.notNull(ow) + dart.notNull(_y) * dart.notNull(oz) - dart.notNull(_z) * dart.notNull(oy), dart.notNull(_w) * dart.notNull(oy) + dart.notNull(_y) * dart.notNull(ow) + dart.notNull(_z) * dart.notNull(ox) - dart.notNull(_x) * dart.notNull(oz), dart.notNull(_w) * dart.notNull(oz) + dart.notNull(_z) * dart.notNull(ow) + dart.notNull(_x) * dart.notNull(oy) - dart.notNull(_y) * dart.notNull(ox), dart.notNull(_w) * dart.notNull(ow) - dart.notNull(_x) * dart.notNull(ox) - dart.notNull(_y) * dart.notNull(oy) - dart.notNull(_z) * dart.notNull(oz));
    }
    ['+'](other) {
      let t0;
      if (other == null) dart.nullFailed(I[11], 396, 36, "other");
      t0 = this.clone();
      return (() => {
        t0.add(other);
        return t0;
      })();
    }
    ['-'](other) {
      let t0;
      if (other == null) dart.nullFailed(I[11], 399, 36, "other");
      t0 = this.clone();
      return (() => {
        t0.sub(other);
        return t0;
      })();
    }
    _negate() {
      return this.conjugated();
    }
    _get(i) {
      if (i == null) dart.nullFailed(I[11], 405, 26, "i");
      return this[S._qStorage][S.$_get](i);
    }
    _set(i, arg$) {
      let arg = arg$;
      if (i == null) dart.nullFailed(I[11], 408, 25, "i");
      if (arg == null) dart.nullFailed(I[11], 408, 35, "arg");
      this[S._qStorage][S.$_set](i, arg);
      return arg$;
    }
    asRotationMatrix() {
      return this.copyRotationInto(new vector_math_64.Matrix3.zero());
    }
    copyRotationInto(rotationMatrix) {
      if (rotationMatrix == null) dart.nullFailed(I[11], 417, 36, "rotationMatrix");
      let d = this.length2;
      if (!(d !== 0.0)) dart.assertFailed(null, I[11], 419, 12, "d != 0.0");
      let s = 2.0 / dart.notNull(d);
      let _x = this[S._qStorage][S.$_get](0);
      let _y = this[S._qStorage][S.$_get](1);
      let _z = this[S._qStorage][S.$_get](2);
      let _w = this[S._qStorage][S.$_get](3);
      let xs = dart.notNull(_x) * s;
      let ys = dart.notNull(_y) * s;
      let zs = dart.notNull(_z) * s;
      let wx = dart.notNull(_w) * xs;
      let wy = dart.notNull(_w) * ys;
      let wz = dart.notNull(_w) * zs;
      let xx = dart.notNull(_x) * xs;
      let xy = dart.notNull(_x) * ys;
      let xz = dart.notNull(_x) * zs;
      let yy = dart.notNull(_y) * ys;
      let yz = dart.notNull(_y) * zs;
      let zz = dart.notNull(_z) * zs;
      let rotationMatrixStorage = rotationMatrix.storage;
      rotationMatrixStorage[S.$_set](0, 1.0 - (yy + zz));
      rotationMatrixStorage[S.$_set](1, xy + wz);
      rotationMatrixStorage[S.$_set](2, xz - wy);
      rotationMatrixStorage[S.$_set](3, xy - wz);
      rotationMatrixStorage[S.$_set](4, 1.0 - (xx + zz));
      rotationMatrixStorage[S.$_set](5, yz + wx);
      rotationMatrixStorage[S.$_set](6, xz + wy);
      rotationMatrixStorage[S.$_set](7, yz - wx);
      rotationMatrixStorage[S.$_set](8, 1.0 - (xx + yy));
      return rotationMatrix;
    }
    toString() {
      return dart.str(this[S._qStorage][S.$_get](0)) + ", " + dart.str(this[S._qStorage][S.$_get](1)) + "," + " " + dart.str(this[S._qStorage][S.$_get](2)) + " @ " + dart.str(this[S._qStorage][S.$_get](3));
    }
    relativeError(correct) {
      if (correct == null) dart.nullFailed(I[11], 462, 35, "correct");
      let diff = correct['-'](this);
      let norm_diff = diff.length;
      let correct_norm = correct.length;
      return dart.notNull(norm_diff) / dart.notNull(correct_norm);
    }
    absoluteError(correct) {
      if (correct == null) dart.nullFailed(I[11], 470, 35, "correct");
      let this_norm = this.length;
      let correct_norm = correct.length;
      let norm_diff = (dart.notNull(this_norm) - dart.notNull(correct_norm))[S.$abs]();
      return norm_diff;
    }
  };
  (vector_math_64.Quaternion.__ = function() {
    this[S._qStorage] = _native_typed_data.NativeFloat64List.new(4);
    ;
  }).prototype = vector_math_64.Quaternion.prototype;
  (vector_math_64.Quaternion.fromFloat64List = function(_qStorage) {
    if (_qStorage == null) dart.nullFailed(I[11], 82, 35, "_qStorage");
    this[S._qStorage] = _qStorage;
    ;
  }).prototype = vector_math_64.Quaternion.prototype;
  (vector_math_64.Quaternion.fromBuffer = function(buffer, offset) {
    if (buffer == null) dart.nullFailed(I[11], 87, 36, "buffer");
    if (offset == null) dart.nullFailed(I[11], 87, 48, "offset");
    this[S._qStorage] = typed_data.Float64List.view(buffer, offset, 4);
    ;
  }).prototype = vector_math_64.Quaternion.prototype;
  dart.addTypeTests(vector_math_64.Quaternion);
  dart.addTypeCaches(vector_math_64.Quaternion);
  dart.setMethodSignature(vector_math_64.Quaternion, () => ({
    __proto__: dart.getMethods(vector_math_64.Quaternion.__proto__),
    clone: dart.fnType(vector_math_64.Quaternion, []),
    setFrom: dart.fnType(dart.void, [vector_math_64.Quaternion]),
    setValues: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    setAxisAngle: dart.fnType(dart.void, [vector_math_64.Vector3, core.double]),
    setFromRotation: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    setFromTwoVectors: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3]),
    setRandom: dart.fnType(dart.void, [math.Random]),
    setDQ: dart.fnType(dart.void, [vector_math_64.Quaternion, vector_math_64.Vector3]),
    setEuler: dart.fnType(dart.void, [core.double, core.double, core.double]),
    normalize: dart.fnType(core.double, []),
    conjugate: dart.fnType(dart.void, []),
    inverse: dart.fnType(dart.void, []),
    normalized: dart.fnType(vector_math_64.Quaternion, []),
    conjugated: dart.fnType(vector_math_64.Quaternion, []),
    inverted: dart.fnType(vector_math_64.Quaternion, []),
    rotated: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    rotate: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    add: dart.fnType(dart.void, [vector_math_64.Quaternion]),
    sub: dart.fnType(dart.void, [vector_math_64.Quaternion]),
    scale: dart.fnType(dart.void, [core.double]),
    scaled: dart.fnType(vector_math_64.Quaternion, [core.double]),
    '*': dart.fnType(vector_math_64.Quaternion, [vector_math_64.Quaternion]),
    '+': dart.fnType(vector_math_64.Quaternion, [vector_math_64.Quaternion]),
    '-': dart.fnType(vector_math_64.Quaternion, [vector_math_64.Quaternion]),
    _negate: dart.fnType(vector_math_64.Quaternion, []),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    asRotationMatrix: dart.fnType(vector_math_64.Matrix3, []),
    copyRotationInto: dart.fnType(vector_math_64.Matrix3, [vector_math_64.Matrix3]),
    relativeError: dart.fnType(core.double, [vector_math_64.Quaternion]),
    absoluteError: dart.fnType(core.double, [vector_math_64.Quaternion])
  }));
  dart.setGetterSignature(vector_math_64.Quaternion, () => ({
    __proto__: dart.getGetters(vector_math_64.Quaternion.__proto__),
    storage: typed_data.Float64List,
    x: core.double,
    y: core.double,
    z: core.double,
    w: core.double,
    radians: core.double,
    axis: vector_math_64.Vector3,
    length2: core.double,
    length: core.double
  }));
  dart.setSetterSignature(vector_math_64.Quaternion, () => ({
    __proto__: dart.getSetters(vector_math_64.Quaternion.__proto__),
    x: core.double,
    y: core.double,
    z: core.double,
    w: core.double
  }));
  dart.setLibraryUri(vector_math_64.Quaternion, I[1]);
  dart.setFieldSignature(vector_math_64.Quaternion, () => ({
    __proto__: dart.getFields(vector_math_64.Quaternion.__proto__),
    [S._qStorage]: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.defineExtensionMethods(vector_math_64.Quaternion, ['toString']);
  vector_math_64.Ray = class Ray extends core.Object {
    get origin() {
      return this[S._origin];
    }
    get direction() {
      return this[S._direction];
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[12], 34, 21, "other");
      this[S._origin].setFrom(other[S._origin]);
      this[S._direction].setFrom(other[S._direction]);
    }
    at(t) {
      let t0;
      if (t == null) dart.nullFailed(I[12], 40, 21, "t");
      t0 = this[S._direction].scaled(t);
      return (() => {
        t0.add(this[S._origin]);
        return t0;
      })();
    }
    copyAt(other, t) {
      let t0;
      if (other == null) dart.nullFailed(I[12], 44, 23, "other");
      if (t == null) dart.nullFailed(I[12], 44, 37, "t");
      t0 = other;
      (() => {
        t0.setFrom(this[S._direction]);
        t0.scale(t);
        t0.add(this[S._origin]);
        return t0;
      })();
    }
    intersectsWithSphere(other) {
      let t0;
      if (other == null) dart.nullFailed(I[12], 53, 39, "other");
      let r = other.radius;
      let r2 = dart.notNull(r) * dart.notNull(r);
      let l = (t0 = other[S._center].clone(), (() => {
        t0.sub(this[S._origin]);
        return t0;
      })());
      let s = l.dot(this[S._direction]);
      let l2 = l.dot(l);
      if (dart.notNull(s) < 0 && dart.notNull(l2) > r2) {
        return null;
      }
      let m2 = dart.notNull(l2) - dart.notNull(s) * dart.notNull(s);
      if (m2 > r2) {
        return null;
      }
      let q = math.sqrt(r2 - m2);
      return dart.notNull(l2) > r2 ? dart.notNull(s) - q : dart.notNull(s) + q;
    }
    intersectsWithTriangle(other) {
      let t0, t0$, t0$0;
      if (other == null) dart.nullFailed(I[12], 82, 43, "other");
      let point0 = other[S._point0];
      let point1 = other[S._point1];
      let point2 = other[S._point2];
      t0 = vector_math_64.Ray._e1;
      (() => {
        t0.setFrom(point1);
        t0.sub(point0);
        return t0;
      })();
      t0$ = vector_math_64.Ray._e2;
      (() => {
        t0$.setFrom(point2);
        t0$.sub(point0);
        return t0$;
      })();
      this[S._direction].crossInto(vector_math_64.Ray._e2, vector_math_64.Ray._q);
      let a = vector_math_64.Ray._e1.dot(vector_math_64.Ray._q);
      if (dart.notNull(a) > -0.00001 && dart.notNull(a) < 0.00001) {
        return null;
      }
      let f = 1 / dart.notNull(a);
      t0$0 = vector_math_64.Ray._s;
      (() => {
        t0$0.setFrom(this[S._origin]);
        t0$0.sub(point0);
        return t0$0;
      })();
      let u = f * dart.notNull(vector_math_64.Ray._s.dot(vector_math_64.Ray._q));
      if (u < 0.0) {
        return null;
      }
      vector_math_64.Ray._s.crossInto(vector_math_64.Ray._e1, vector_math_64.Ray._r);
      let v = f * dart.notNull(this[S._direction].dot(vector_math_64.Ray._r));
      if (v < -0.00001 || u + v > 1.0 + 0.00001) {
        return null;
      }
      let t = f * dart.notNull(vector_math_64.Ray._e2.dot(vector_math_64.Ray._r));
      return t;
    }
    intersectsWithQuad(other) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3;
      if (other == null) dart.nullFailed(I[12], 127, 35, "other");
      let point0 = other[S._point0];
      let point1 = other[S._point1];
      let point2 = other[S._point2];
      t0 = vector_math_64.Ray._e1;
      (() => {
        t0.setFrom(point1);
        t0.sub(point0);
        return t0;
      })();
      t0$ = vector_math_64.Ray._e2;
      (() => {
        t0$.setFrom(point2);
        t0$.sub(point0);
        return t0$;
      })();
      this[S._direction].crossInto(vector_math_64.Ray._e2, vector_math_64.Ray._q);
      let a0 = vector_math_64.Ray._e1.dot(vector_math_64.Ray._q);
      if (!(dart.notNull(a0) > -0.00001 && dart.notNull(a0) < 0.00001)) {
        let f = 1 / dart.notNull(a0);
        t0$0 = vector_math_64.Ray._s;
        (() => {
          t0$0.setFrom(this[S._origin]);
          t0$0.sub(point0);
          return t0$0;
        })();
        let u = f * dart.notNull(vector_math_64.Ray._s.dot(vector_math_64.Ray._q));
        if (u >= 0.0) {
          vector_math_64.Ray._s.crossInto(vector_math_64.Ray._e1, vector_math_64.Ray._r);
          let v = f * dart.notNull(this[S._direction].dot(vector_math_64.Ray._r));
          if (!(v < -0.00001 || u + v > 1.0 + 0.00001)) {
            let t = f * dart.notNull(vector_math_64.Ray._e2.dot(vector_math_64.Ray._r));
            return t;
          }
        }
      }
      point0 = other[S._point3];
      point1 = other[S._point0];
      point2 = other[S._point2];
      t0$1 = vector_math_64.Ray._e1;
      (() => {
        t0$1.setFrom(point1);
        t0$1.sub(point0);
        return t0$1;
      })();
      t0$2 = vector_math_64.Ray._e2;
      (() => {
        t0$2.setFrom(point2);
        t0$2.sub(point0);
        return t0$2;
      })();
      this[S._direction].crossInto(vector_math_64.Ray._e2, vector_math_64.Ray._q);
      let a1 = vector_math_64.Ray._e1.dot(vector_math_64.Ray._q);
      if (!(dart.notNull(a1) > -0.00001 && dart.notNull(a1) < 0.00001)) {
        let f = 1 / dart.notNull(a1);
        t0$3 = vector_math_64.Ray._s;
        (() => {
          t0$3.setFrom(this[S._origin]);
          t0$3.sub(point0);
          return t0$3;
        })();
        let u = f * dart.notNull(vector_math_64.Ray._s.dot(vector_math_64.Ray._q));
        if (u >= 0.0) {
          vector_math_64.Ray._s.crossInto(vector_math_64.Ray._e1, vector_math_64.Ray._r);
          let v = f * dart.notNull(this[S._direction].dot(vector_math_64.Ray._r));
          if (!(v < -0.00001 || u + v > 1.0 + 0.00001)) {
            let t = f * dart.notNull(vector_math_64.Ray._e2.dot(vector_math_64.Ray._r));
            return t;
          }
        }
      }
      return null;
    }
    intersectsWithAabb3(other) {
      if (other == null) dart.nullFailed(I[12], 203, 37, "other");
      let otherMin = other.min;
      let otherMax = other.max;
      let tNear = -1.7976931348623157e+308;
      let tFar = 1.7976931348623157e+308;
      for (let i = 0; i < 3; i = i + 1) {
        if (this[S._direction]._get(i) === 0.0) {
          if (dart.notNull(this[S._origin]._get(i)) < dart.notNull(otherMin._get(i)) || dart.notNull(this[S._origin]._get(i)) > dart.notNull(otherMax._get(i))) {
            return null;
          }
        } else {
          let t1 = (dart.notNull(otherMin._get(i)) - dart.notNull(this[S._origin]._get(i))) / dart.notNull(this[S._direction]._get(i));
          let t2 = (dart.notNull(otherMax._get(i)) - dart.notNull(this[S._origin]._get(i))) / dart.notNull(this[S._direction]._get(i));
          if (t1 > t2) {
            let temp = t1;
            t1 = t2;
            t2 = temp;
          }
          if (t1 > tNear) {
            tNear = t1;
          }
          if (t2 < tFar) {
            tFar = t2;
          }
          if (tNear > tFar || tFar < 0) {
            return null;
          }
        }
      }
      return tNear;
    }
  };
  (vector_math_64.Ray.new = function() {
    this[S._origin] = new vector_math_64.Vector3.zero();
    this[S._direction] = new vector_math_64.Vector3.zero();
    ;
  }).prototype = vector_math_64.Ray.prototype;
  (vector_math_64.Ray.copy = function(other) {
    if (other == null) dart.nullFailed(I[12], 24, 16, "other");
    this[S._origin] = vector_math_64.Vector3.copy(other[S._origin]);
    this[S._direction] = vector_math_64.Vector3.copy(other[S._direction]);
    ;
  }).prototype = vector_math_64.Ray.prototype;
  (vector_math_64.Ray.originDirection = function(origin, direction) {
    if (origin == null) dart.nullFailed(I[12], 29, 31, "origin");
    if (direction == null) dart.nullFailed(I[12], 29, 47, "direction");
    this[S._origin] = vector_math_64.Vector3.copy(origin);
    this[S._direction] = vector_math_64.Vector3.copy(direction);
    ;
  }).prototype = vector_math_64.Ray.prototype;
  dart.addTypeTests(vector_math_64.Ray);
  dart.addTypeCaches(vector_math_64.Ray);
  dart.setMethodSignature(vector_math_64.Ray, () => ({
    __proto__: dart.getMethods(vector_math_64.Ray.__proto__),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Ray]),
    at: dart.fnType(vector_math_64.Vector3, [core.double]),
    copyAt: dart.fnType(dart.void, [vector_math_64.Vector3, core.double]),
    intersectsWithSphere: dart.fnType(dart.nullable(core.double), [vector_math_64.Sphere]),
    intersectsWithTriangle: dart.fnType(dart.nullable(core.double), [vector_math_64.Triangle]),
    intersectsWithQuad: dart.fnType(dart.nullable(core.double), [vector_math_64.Quad]),
    intersectsWithAabb3: dart.fnType(dart.nullable(core.double), [vector_math_64.Aabb3])
  }));
  dart.setGetterSignature(vector_math_64.Ray, () => ({
    __proto__: dart.getGetters(vector_math_64.Ray.__proto__),
    origin: vector_math_64.Vector3,
    direction: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Ray, I[1]);
  dart.setFieldSignature(vector_math_64.Ray, () => ({
    __proto__: dart.getFields(vector_math_64.Ray.__proto__),
    [S._origin]: dart.finalFieldType(vector_math_64.Vector3),
    [S._direction]: dart.finalFieldType(vector_math_64.Vector3)
  }));
  dart.defineLazy(vector_math_64.Ray, {
    /*vector_math_64.Ray._e1*/get _e1() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Ray._e2*/get _e2() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Ray._q*/get _q() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Ray._s*/get _s() {
      return new vector_math_64.Vector3.zero();
    },
    /*vector_math_64.Ray._r*/get _r() {
      return new vector_math_64.Vector3.zero();
    }
  }, false);
  vector_math_64.Sphere = class Sphere extends core.Object {
    get radius() {
      return this[S.radius];
    }
    set radius(value) {
      this[S.radius] = value;
    }
    get center() {
      return this[S._center];
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[13], 32, 24, "other");
      this[S._center].setFrom(other[S._center]);
      this.radius = other.radius;
    }
    containsVector3(other) {
      if (other == null) dart.nullFailed(I[13], 38, 32, "other");
      return dart.notNull(other.distanceToSquared(this.center)) < dart.notNull(this.radius) * dart.notNull(this.radius);
    }
    intersectsWithVector3(other) {
      if (other == null) dart.nullFailed(I[13], 42, 38, "other");
      return dart.notNull(other.distanceToSquared(this.center)) <= dart.notNull(this.radius) * dart.notNull(this.radius);
    }
    intersectsWithSphere(other) {
      if (other == null) dart.nullFailed(I[13], 46, 36, "other");
      let radiusSum = dart.notNull(this.radius) + dart.notNull(other.radius);
      return dart.notNull(other.center.distanceToSquared(this.center)) <= radiusSum * radiusSum;
    }
  };
  (vector_math_64.Sphere.new = function() {
    this[S._center] = new vector_math_64.Vector3.zero();
    this[S.radius] = 0.0;
    ;
  }).prototype = vector_math_64.Sphere.prototype;
  (vector_math_64.Sphere.copy = function(other) {
    if (other == null) dart.nullFailed(I[13], 23, 22, "other");
    this[S._center] = vector_math_64.Vector3.copy(other[S._center]);
    this[S.radius] = other.radius;
    ;
  }).prototype = vector_math_64.Sphere.prototype;
  (vector_math_64.Sphere.centerRadius = function(center, radius) {
    if (center == null) dart.nullFailed(I[13], 28, 31, "center");
    if (radius == null) dart.nullFailed(I[13], 28, 44, "radius");
    this[S.radius] = radius;
    this[S._center] = vector_math_64.Vector3.copy(center);
    ;
  }).prototype = vector_math_64.Sphere.prototype;
  dart.addTypeTests(vector_math_64.Sphere);
  dart.addTypeCaches(vector_math_64.Sphere);
  dart.setMethodSignature(vector_math_64.Sphere, () => ({
    __proto__: dart.getMethods(vector_math_64.Sphere.__proto__),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Sphere]),
    containsVector3: dart.fnType(core.bool, [vector_math_64.Vector3]),
    intersectsWithVector3: dart.fnType(core.bool, [vector_math_64.Vector3]),
    intersectsWithSphere: dart.fnType(core.bool, [vector_math_64.Sphere])
  }));
  dart.setGetterSignature(vector_math_64.Sphere, () => ({
    __proto__: dart.getGetters(vector_math_64.Sphere.__proto__),
    center: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Sphere, I[1]);
  dart.setFieldSignature(vector_math_64.Sphere, () => ({
    __proto__: dart.getFields(vector_math_64.Sphere.__proto__),
    [S._center]: dart.finalFieldType(vector_math_64.Vector3),
    radius: dart.fieldType(core.double)
  }));
  vector_math_64.SimplexNoise = class SimplexNoise extends core.Object {
    get [S._perm]() {
      let t0;
      return dart.test(this[S.__SimplexNoise__perm_isSet]) ? (t0 = this[S.__SimplexNoise__perm], t0) : dart.throw(new _internal.LateError.fieldNI("_perm"));
    }
    set [S._perm](t0) {
      if (t0 == null) dart.nullFailed(I[14], 81, 24, "null");
      if (dart.test(this[S.__SimplexNoise__perm_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_perm"));
      else {
        this[S.__SimplexNoise__perm_isSet] = true;
        this[S.__SimplexNoise__perm] = t0;
      }
    }
    get [S._permMod12]() {
      let t1;
      return dart.test(this[S.__SimplexNoise__permMod12_isSet]) ? (t1 = this[S.__SimplexNoise__permMod12], t1) : dart.throw(new _internal.LateError.fieldNI("_permMod12"));
    }
    set [S._permMod12](t1) {
      if (t1 == null) dart.nullFailed(I[14], 82, 24, "null");
      if (dart.test(this[S.__SimplexNoise__permMod12_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_permMod12"));
      else {
        this[S.__SimplexNoise__permMod12_isSet] = true;
        this[S.__SimplexNoise__permMod12] = t1;
      }
    }
    [S._dot2](g, x, y) {
      if (g == null) dart.nullFailed(I[14], 92, 29, "g");
      if (x == null) dart.nullFailed(I[14], 92, 39, "x");
      if (y == null) dart.nullFailed(I[14], 92, 49, "y");
      return dart.notNull(g[S.$_get](0)) * dart.notNull(x) + dart.notNull(g[S.$_get](1)) * dart.notNull(y);
    }
    [S._dot3](g, x, y, z) {
      if (g == null) dart.nullFailed(I[14], 94, 29, "g");
      if (x == null) dart.nullFailed(I[14], 94, 39, "x");
      if (y == null) dart.nullFailed(I[14], 94, 49, "y");
      if (z == null) dart.nullFailed(I[14], 94, 59, "z");
      return dart.notNull(g[S.$_get](0)) * dart.notNull(x) + dart.notNull(g[S.$_get](1)) * dart.notNull(y) + dart.notNull(g[S.$_get](2)) * dart.notNull(z);
    }
    [S._dot4](g, x, y, z, w) {
      if (g == null) dart.nullFailed(I[14], 97, 29, "g");
      if (x == null) dart.nullFailed(I[14], 97, 39, "x");
      if (y == null) dart.nullFailed(I[14], 97, 49, "y");
      if (z == null) dart.nullFailed(I[14], 97, 59, "z");
      if (w == null) dart.nullFailed(I[14], 97, 69, "w");
      return dart.notNull(g[S.$_get](0)) * dart.notNull(x) + dart.notNull(g[S.$_get](1)) * dart.notNull(y) + dart.notNull(g[S.$_get](2)) * dart.notNull(z) + dart.notNull(g[S.$_get](3)) * dart.notNull(w);
    }
    noise2D(xin, yin) {
      if (xin == null) dart.nullFailed(I[14], 109, 25, "xin");
      if (yin == null) dart.nullFailed(I[14], 109, 37, "yin");
      let n0 = null;
      let n1 = null;
      let n2 = null;
      let s = (dart.notNull(xin) + dart.notNull(yin)) * dart.notNull(vector_math_64.SimplexNoise._F2);
      let i = (dart.notNull(xin) + s)[S.$floor]();
      let j = (dart.notNull(yin) + s)[S.$floor]();
      let t = (i + j) * dart.notNull(vector_math_64.SimplexNoise._G2);
      let X0 = i - t;
      let Y0 = j - t;
      let x0 = dart.notNull(xin) - X0;
      let y0 = dart.notNull(yin) - Y0;
      let i1 = null;
      let j1 = null;
      if (x0 > y0) {
        i1 = 1;
        j1 = 0;
      } else {
        i1 = 0;
        j1 = 1;
      }
      let x1 = x0 - dart.notNull(i1) + dart.notNull(vector_math_64.SimplexNoise._G2);
      let y1 = y0 - dart.notNull(j1) + dart.notNull(vector_math_64.SimplexNoise._G2);
      let x2 = x0 - 1.0 + 2.0 * dart.notNull(vector_math_64.SimplexNoise._G2);
      let y2 = y0 - 1.0 + 2.0 * dart.notNull(vector_math_64.SimplexNoise._G2);
      let ii = i & 255;
      let jj = j & 255;
      let gi0 = this[S._permMod12][S.$_get](ii + dart.notNull(this[S._perm][S.$_get](jj)));
      let gi1 = this[S._permMod12][S.$_get](ii + dart.notNull(i1) + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(j1))));
      let gi2 = this[S._permMod12][S.$_get](ii + 1 + dart.notNull(this[S._perm][S.$_get](jj + 1)));
      let t0 = 0.5 - x0 * x0 - y0 * y0;
      if (t0 < 0) {
        n0 = 0.0;
      } else {
        t0 = t0 * t0;
        n0 = t0 * t0 * dart.notNull(this[S._dot2](vector_math_64.SimplexNoise._grad3[S.$_get](gi0), x0, y0));
      }
      let t1 = 0.5 - x1 * x1 - y1 * y1;
      if (t1 < 0) {
        n1 = 0.0;
      } else {
        t1 = t1 * t1;
        n1 = t1 * t1 * dart.notNull(this[S._dot2](vector_math_64.SimplexNoise._grad3[S.$_get](gi1), x1, y1));
      }
      let t2 = 0.5 - x2 * x2 - y2 * y2;
      if (t2 < 0) {
        n2 = 0.0;
      } else {
        t2 = t2 * t2;
        n2 = t2 * t2 * dart.notNull(this[S._dot2](vector_math_64.SimplexNoise._grad3[S.$_get](gi2), x2, y2));
      }
      return 70.0 * (dart.notNull(n0) + dart.notNull(n1) + dart.notNull(n2));
    }
    noise3D(xin, yin, zin) {
      if (xin == null) dart.nullFailed(I[14], 177, 25, "xin");
      if (yin == null) dart.nullFailed(I[14], 177, 37, "yin");
      if (zin == null) dart.nullFailed(I[14], 177, 49, "zin");
      let n0 = null;
      let n1 = null;
      let n2 = null;
      let n3 = null;
      let s = (dart.notNull(xin) + dart.notNull(yin) + dart.notNull(zin)) * 0.3333333333333333;
      let i = (dart.notNull(xin) + s)[S.$floor]();
      let j = (dart.notNull(yin) + s)[S.$floor]();
      let k = (dart.notNull(zin) + s)[S.$floor]();
      let t = (i + j + k) * 0.16666666666666666;
      let X0 = i - t;
      let Y0 = j - t;
      let Z0 = k - t;
      let x0 = dart.notNull(xin) - X0;
      let y0 = dart.notNull(yin) - Y0;
      let z0 = dart.notNull(zin) - Z0;
      let i1 = null;
      let j1 = null;
      let k1 = null;
      let i2 = null;
      let j2 = null;
      let k2 = null;
      if (x0 >= y0) {
        if (y0 >= z0) {
          i1 = 1;
          j1 = 0;
          k1 = 0;
          i2 = 1;
          j2 = 1;
          k2 = 0;
        } else if (x0 >= z0) {
          i1 = 1;
          j1 = 0;
          k1 = 0;
          i2 = 1;
          j2 = 0;
          k2 = 1;
        } else {
          i1 = 0;
          j1 = 0;
          k1 = 1;
          i2 = 1;
          j2 = 0;
          k2 = 1;
        }
      } else {
        if (y0 < z0) {
          i1 = 0;
          j1 = 0;
          k1 = 1;
          i2 = 0;
          j2 = 1;
          k2 = 1;
        } else if (x0 < z0) {
          i1 = 0;
          j1 = 1;
          k1 = 0;
          i2 = 0;
          j2 = 1;
          k2 = 1;
        } else {
          i1 = 0;
          j1 = 1;
          k1 = 0;
          i2 = 1;
          j2 = 1;
          k2 = 0;
        }
      }
      let x1 = x0 - dart.notNull(i1) + 0.16666666666666666;
      let y1 = y0 - dart.notNull(j1) + 0.16666666666666666;
      let z1 = z0 - dart.notNull(k1) + 0.16666666666666666;
      let x2 = x0 - dart.notNull(i2) + 2.0 * 0.16666666666666666;
      let y2 = y0 - dart.notNull(j2) + 2.0 * 0.16666666666666666;
      let z2 = z0 - dart.notNull(k2) + 2.0 * 0.16666666666666666;
      let x3 = x0 - 1.0 + 3.0 * 0.16666666666666666;
      let y3 = y0 - 1.0 + 3.0 * 0.16666666666666666;
      let z3 = z0 - 1.0 + 3.0 * 0.16666666666666666;
      let ii = i & 255;
      let jj = j & 255;
      let kk = k & 255;
      let gi0 = this[S._permMod12][S.$_get](ii + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(this[S._perm][S.$_get](kk)))));
      let gi1 = this[S._permMod12][S.$_get](ii + dart.notNull(i1) + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(j1) + dart.notNull(this[S._perm][S.$_get](kk + dart.notNull(k1))))));
      let gi2 = this[S._permMod12][S.$_get](ii + dart.notNull(i2) + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(j2) + dart.notNull(this[S._perm][S.$_get](kk + dart.notNull(k2))))));
      let gi3 = this[S._permMod12][S.$_get](ii + 1 + dart.notNull(this[S._perm][S.$_get](jj + 1 + dart.notNull(this[S._perm][S.$_get](kk + 1)))));
      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;
      if (t0 < 0) {
        n0 = 0.0;
      } else {
        t0 = t0 * t0;
        n0 = t0 * t0 * dart.notNull(this[S._dot3](vector_math_64.SimplexNoise._grad3[S.$_get](gi0), x0, y0, z0));
      }
      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;
      if (t1 < 0) {
        n1 = 0.0;
      } else {
        t1 = t1 * t1;
        n1 = t1 * t1 * dart.notNull(this[S._dot3](vector_math_64.SimplexNoise._grad3[S.$_get](gi1), x1, y1, z1));
      }
      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;
      if (t2 < 0) {
        n2 = 0.0;
      } else {
        t2 = t2 * t2;
        n2 = t2 * t2 * dart.notNull(this[S._dot3](vector_math_64.SimplexNoise._grad3[S.$_get](gi2), x2, y2, z2));
      }
      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;
      if (t3 < 0) {
        n3 = 0.0;
      } else {
        t3 = t3 * t3;
        n3 = t3 * t3 * dart.notNull(this[S._dot3](vector_math_64.SimplexNoise._grad3[S.$_get](gi3), x3, y3, z3));
      }
      return 32.0 * (dart.notNull(n0) + dart.notNull(n1) + dart.notNull(n2) + dart.notNull(n3));
    }
    noise4D(x, y, z, w) {
      if (x == null) dart.nullFailed(I[14], 306, 25, "x");
      if (y == null) dart.nullFailed(I[14], 306, 35, "y");
      if (z == null) dart.nullFailed(I[14], 306, 45, "z");
      if (w == null) dart.nullFailed(I[14], 306, 55, "w");
      let n0 = null;
      let n1 = null;
      let n2 = null;
      let n3 = null;
      let n4 = null;
      let s = (dart.notNull(x) + dart.notNull(y) + dart.notNull(z) + dart.notNull(w)) * dart.notNull(vector_math_64.SimplexNoise._F4);
      let i = (dart.notNull(x) + s)[S.$floor]();
      let j = (dart.notNull(y) + s)[S.$floor]();
      let k = (dart.notNull(z) + s)[S.$floor]();
      let l = (dart.notNull(w) + s)[S.$floor]();
      let t = (i + j + k + l) * dart.notNull(vector_math_64.SimplexNoise._G4);
      let X0 = i - t;
      let Y0 = j - t;
      let Z0 = k - t;
      let W0 = l - t;
      let x0 = dart.notNull(x) - X0;
      let y0 = dart.notNull(y) - Y0;
      let z0 = dart.notNull(z) - Z0;
      let w0 = dart.notNull(w) - W0;
      let rankx = 0;
      let ranky = 0;
      let rankz = 0;
      let rankw = 0;
      if (x0 > y0) {
        rankx = rankx + 1;
      } else {
        ranky = ranky + 1;
      }
      if (x0 > z0) {
        rankx = rankx + 1;
      } else {
        rankz = rankz + 1;
      }
      if (x0 > w0) {
        rankx = rankx + 1;
      } else {
        rankw = rankw + 1;
      }
      if (y0 > z0) {
        ranky = ranky + 1;
      } else {
        rankz = rankz + 1;
      }
      if (y0 > w0) {
        ranky = ranky + 1;
      } else {
        rankw = rankw + 1;
      }
      if (z0 > w0) {
        rankz = rankz + 1;
      } else {
        rankw = rankw + 1;
      }
      let i1 = null;
      let j1 = null;
      let k1 = null;
      let l1 = null;
      let i2 = null;
      let j2 = null;
      let k2 = null;
      let l2 = null;
      let i3 = null;
      let j3 = null;
      let k3 = null;
      let l3 = null;
      i1 = rankx >= 3 ? 1 : 0;
      j1 = ranky >= 3 ? 1 : 0;
      k1 = rankz >= 3 ? 1 : 0;
      l1 = rankw >= 3 ? 1 : 0;
      i2 = rankx >= 2 ? 1 : 0;
      j2 = ranky >= 2 ? 1 : 0;
      k2 = rankz >= 2 ? 1 : 0;
      l2 = rankw >= 2 ? 1 : 0;
      i3 = rankx >= 1 ? 1 : 0;
      j3 = ranky >= 1 ? 1 : 0;
      k3 = rankz >= 1 ? 1 : 0;
      l3 = rankw >= 1 ? 1 : 0;
      let x1 = x0 - dart.notNull(i1) + dart.notNull(vector_math_64.SimplexNoise._G4);
      let y1 = y0 - dart.notNull(j1) + dart.notNull(vector_math_64.SimplexNoise._G4);
      let z1 = z0 - dart.notNull(k1) + dart.notNull(vector_math_64.SimplexNoise._G4);
      let w1 = w0 - dart.notNull(l1) + dart.notNull(vector_math_64.SimplexNoise._G4);
      let x2 = x0 - dart.notNull(i2) + 2.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let y2 = y0 - dart.notNull(j2) + 2.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let z2 = z0 - dart.notNull(k2) + 2.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let w2 = w0 - dart.notNull(l2) + 2.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let x3 = x0 - dart.notNull(i3) + 3.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let y3 = y0 - dart.notNull(j3) + 3.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let z3 = z0 - dart.notNull(k3) + 3.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let w3 = w0 - dart.notNull(l3) + 3.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let x4 = x0 - 1.0 + 4.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let y4 = y0 - 1.0 + 4.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let z4 = z0 - 1.0 + 4.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let w4 = w0 - 1.0 + 4.0 * dart.notNull(vector_math_64.SimplexNoise._G4);
      let ii = i & 255;
      let jj = j & 255;
      let kk = k & 255;
      let ll = l & 255;
      let gi0 = this[S._perm][S.$_get](ii + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(this[S._perm][S.$_get](kk + dart.notNull(this[S._perm][S.$_get](ll)))))))[S.$modulo](32);
      let gi1 = this[S._perm][S.$_get](ii + dart.notNull(i1) + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(j1) + dart.notNull(this[S._perm][S.$_get](kk + dart.notNull(k1) + dart.notNull(this[S._perm][S.$_get](ll + dart.notNull(l1))))))))[S.$modulo](32);
      let gi2 = this[S._perm][S.$_get](ii + dart.notNull(i2) + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(j2) + dart.notNull(this[S._perm][S.$_get](kk + dart.notNull(k2) + dart.notNull(this[S._perm][S.$_get](ll + dart.notNull(l2))))))))[S.$modulo](32);
      let gi3 = this[S._perm][S.$_get](ii + dart.notNull(i3) + dart.notNull(this[S._perm][S.$_get](jj + dart.notNull(j3) + dart.notNull(this[S._perm][S.$_get](kk + dart.notNull(k3) + dart.notNull(this[S._perm][S.$_get](ll + dart.notNull(l3))))))))[S.$modulo](32);
      let gi4 = this[S._perm][S.$_get](ii + 1 + dart.notNull(this[S._perm][S.$_get](jj + 1 + dart.notNull(this[S._perm][S.$_get](kk + 1 + dart.notNull(this[S._perm][S.$_get](ll + 1)))))))[S.$modulo](32);
      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;
      if (t0 < 0) {
        n0 = 0.0;
      } else {
        t0 = t0 * t0;
        n0 = t0 * t0 * dart.notNull(this[S._dot4](vector_math_64.SimplexNoise._grad4[S.$_get](gi0), x0, y0, z0, w0));
      }
      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;
      if (t1 < 0) {
        n1 = 0.0;
      } else {
        t1 = t1 * t1;
        n1 = t1 * t1 * dart.notNull(this[S._dot4](vector_math_64.SimplexNoise._grad4[S.$_get](gi1), x1, y1, z1, w1));
      }
      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;
      if (t2 < 0) {
        n2 = 0.0;
      } else {
        t2 = t2 * t2;
        n2 = t2 * t2 * dart.notNull(this[S._dot4](vector_math_64.SimplexNoise._grad4[S.$_get](gi2), x2, y2, z2, w2));
      }
      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;
      if (t3 < 0) {
        n3 = 0.0;
      } else {
        t3 = t3 * t3;
        n3 = t3 * t3 * dart.notNull(this[S._dot4](vector_math_64.SimplexNoise._grad4[S.$_get](gi3), x3, y3, z3, w3));
      }
      let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;
      if (t4 < 0) {
        n4 = 0.0;
      } else {
        t4 = t4 * t4;
        n4 = t4 * t4 * dart.notNull(this[S._dot4](vector_math_64.SimplexNoise._grad4[S.$_get](gi4), x4, y4, z4, w4));
      }
      return 27.0 * (dart.notNull(n0) + dart.notNull(n1) + dart.notNull(n2) + dart.notNull(n3) + dart.notNull(n4));
    }
  };
  (vector_math_64.SimplexNoise.new = function(r = null) {
    this[S.__SimplexNoise__perm] = null;
    this[S.__SimplexNoise__perm_isSet] = false;
    this[S.__SimplexNoise__permMod12] = null;
    this[S.__SimplexNoise__permMod12_isSet] = false;
    r == null ? r = math.Random.new() : null;
    let p = T.ListOfint().generate(256, dart.fn(_ => {
      if (_ == null) dart.nullFailed(I[14], 102, 40, "_");
      return dart.nullCheck(r).nextInt(256);
    }, T.intToint()), {growable: false});
    this[S._perm] = T.ListOfint().generate(dart.notNull(p[S.$length]) * 2, dart.fn(i => {
      if (i == null) dart.nullFailed(I[14], 103, 51, "i");
      return p[S.$_get](i[S.$modulo](p[S.$length]));
    }, T.intToint()), {growable: false});
    this[S._permMod12] = T.ListOfint().generate(this[S._perm][S.$length], dart.fn(i => {
      if (i == null) dart.nullFailed(I[14], 105, 56, "i");
      return this[S._perm][S.$_get](i)[S.$modulo](12);
    }, T.intToint()), {growable: false});
  }).prototype = vector_math_64.SimplexNoise.prototype;
  dart.addTypeTests(vector_math_64.SimplexNoise);
  dart.addTypeCaches(vector_math_64.SimplexNoise);
  dart.setMethodSignature(vector_math_64.SimplexNoise, () => ({
    __proto__: dart.getMethods(vector_math_64.SimplexNoise.__proto__),
    [S._dot2]: dart.fnType(core.double, [core.List$(core.double), core.double, core.double]),
    [S._dot3]: dart.fnType(core.double, [core.List$(core.double), core.double, core.double, core.double]),
    [S._dot4]: dart.fnType(core.double, [core.List$(core.double), core.double, core.double, core.double, core.double]),
    noise2D: dart.fnType(core.double, [core.double, core.double]),
    noise3D: dart.fnType(core.double, [core.double, core.double, core.double]),
    noise4D: dart.fnType(core.double, [core.double, core.double, core.double, core.double])
  }));
  dart.setGetterSignature(vector_math_64.SimplexNoise, () => ({
    __proto__: dart.getGetters(vector_math_64.SimplexNoise.__proto__),
    [S._perm]: core.List$(core.int),
    [S._permMod12]: core.List$(core.int)
  }));
  dart.setSetterSignature(vector_math_64.SimplexNoise, () => ({
    __proto__: dart.getSetters(vector_math_64.SimplexNoise.__proto__),
    [S._perm]: core.List$(core.int),
    [S._permMod12]: core.List$(core.int)
  }));
  dart.setLibraryUri(vector_math_64.SimplexNoise, I[1]);
  dart.setFieldSignature(vector_math_64.SimplexNoise, () => ({
    __proto__: dart.getFields(vector_math_64.SimplexNoise.__proto__),
    [S.__SimplexNoise__perm]: dart.fieldType(dart.nullable(core.List$(core.int))),
    [S.__SimplexNoise__perm_isSet]: dart.fieldType(core.bool),
    [S.__SimplexNoise__permMod12]: dart.fieldType(dart.nullable(core.List$(core.int))),
    [S.__SimplexNoise__permMod12_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(vector_math_64.SimplexNoise, {
    /*vector_math_64.SimplexNoise._grad3*/get _grad3() {
      return T.JSArrayOfListOfdouble().of([T.JSArrayOfdouble().of([1.0, 1.0, 0.0]), T.JSArrayOfdouble().of([-1.0, 1.0, 0.0]), T.JSArrayOfdouble().of([1.0, -1.0, 0.0]), T.JSArrayOfdouble().of([-1.0, -1.0, 0.0]), T.JSArrayOfdouble().of([1.0, 0.0, 1.0]), T.JSArrayOfdouble().of([-1.0, 0.0, 1.0]), T.JSArrayOfdouble().of([1.0, 0.0, -1.0]), T.JSArrayOfdouble().of([-1.0, 0.0, -1.0]), T.JSArrayOfdouble().of([0.0, 1.0, 1.0]), T.JSArrayOfdouble().of([0.0, -1.0, 1.0]), T.JSArrayOfdouble().of([0.0, 1.0, -1.0]), T.JSArrayOfdouble().of([0.0, -1.0, -1.0])]);
    },
    /*vector_math_64.SimplexNoise._grad4*/get _grad4() {
      return T.JSArrayOfListOfdouble().of([T.JSArrayOfdouble().of([0.0, 1.0, 1.0, 1.0]), T.JSArrayOfdouble().of([0.0, 1.0, 1.0, -1.0]), T.JSArrayOfdouble().of([0.0, 1.0, -1.0, 1.0]), T.JSArrayOfdouble().of([0.0, 1.0, -1.0, -1.0]), T.JSArrayOfdouble().of([0.0, -1.0, 1.0, 1.0]), T.JSArrayOfdouble().of([0.0, -1.0, 1.0, -1.0]), T.JSArrayOfdouble().of([0.0, -1.0, -1.0, 1.0]), T.JSArrayOfdouble().of([0.0, -1.0, -1.0, -1.0]), T.JSArrayOfdouble().of([1.0, 0.0, 1.0, 1.0]), T.JSArrayOfdouble().of([1.0, 0.0, 1.0, -1.0]), T.JSArrayOfdouble().of([1.0, 0.0, -1.0, 1.0]), T.JSArrayOfdouble().of([1.0, 0.0, -1.0, -1.0]), T.JSArrayOfdouble().of([-1.0, 0.0, 1.0, 1.0]), T.JSArrayOfdouble().of([-1.0, 0.0, 1.0, -1.0]), T.JSArrayOfdouble().of([-1.0, 0.0, -1.0, 1.0]), T.JSArrayOfdouble().of([-1.0, 0.0, -1.0, -1.0]), T.JSArrayOfdouble().of([1.0, 1.0, 0.0, 1.0]), T.JSArrayOfdouble().of([1.0, 1.0, 0.0, -1.0]), T.JSArrayOfdouble().of([1.0, -1.0, 0.0, 1.0]), T.JSArrayOfdouble().of([1.0, -1.0, 0.0, -1.0]), T.JSArrayOfdouble().of([-1.0, 1.0, 0.0, 1.0]), T.JSArrayOfdouble().of([-1.0, 1.0, 0.0, -1.0]), T.JSArrayOfdouble().of([-1.0, -1.0, 0.0, 1.0]), T.JSArrayOfdouble().of([-1.0, -1.0, 0.0, -1.0]), T.JSArrayOfdouble().of([1.0, 1.0, 1.0, 0.0]), T.JSArrayOfdouble().of([1.0, 1.0, -1.0, 0.0]), T.JSArrayOfdouble().of([1.0, -1.0, 1.0, 0.0]), T.JSArrayOfdouble().of([1.0, -1.0, -1.0, 0.0]), T.JSArrayOfdouble().of([-1.0, 1.0, 1.0, 0.0]), T.JSArrayOfdouble().of([-1.0, 1.0, -1.0, 0.0]), T.JSArrayOfdouble().of([-1.0, -1.0, 1.0, 0.0]), T.JSArrayOfdouble().of([-1.0, -1.0, -1.0, 0.0])]);
    },
    /*vector_math_64.SimplexNoise._F2*/get _F2() {
      return 0.5 * (math.sqrt(3.0) - 1.0);
    },
    /*vector_math_64.SimplexNoise._G2*/get _G2() {
      return (3.0 - math.sqrt(3.0)) / 6.0;
    },
    /*vector_math_64.SimplexNoise._f3*/get _f3() {
      return 0.3333333333333333;
    },
    /*vector_math_64.SimplexNoise._g3*/get _g3() {
      return 0.16666666666666666;
    },
    /*vector_math_64.SimplexNoise._F4*/get _F4() {
      return (math.sqrt(5.0) - 1.0) / 4.0;
    },
    /*vector_math_64.SimplexNoise._G4*/get _G4() {
      return (5.0 - math.sqrt(5.0)) / 20.0;
    }
  }, false);
  vector_math_64.Triangle = class Triangle extends core.Object {
    get point0() {
      return this[S._point0];
    }
    get point1() {
      return this[S._point1];
    }
    get point2() {
      return this[S._point2];
    }
    copyFrom(other) {
      if (other == null) dart.nullFailed(I[15], 41, 26, "other");
      this[S._point0].setFrom(other[S._point0]);
      this[S._point1].setFrom(other[S._point1]);
      this[S._point2].setFrom(other[S._point2]);
    }
    copyNormalInto(normal) {
      let t2, t2$;
      if (normal == null) dart.nullFailed(I[15], 48, 31, "normal");
      let v0 = (t2 = this.point0.clone(), (() => {
        t2.sub(this.point1);
        return t2;
      })());
      t2$ = normal;
      (() => {
        t2$.setFrom(this.point2);
        t2$.sub(this.point1);
        t2$.crossInto(v0, normal);
        t2$.normalize();
        return t2$;
      })();
    }
    transform(t) {
      let t2;
      if (t == null) dart.nullFailed(I[15], 58, 26, "t");
      t2 = t;
      (() => {
        t2.transform3(this[S._point0]);
        t2.transform3(this[S._point1]);
        t2.transform3(this[S._point2]);
        return t2;
      })();
    }
    translate(offset) {
      if (offset == null) dart.nullFailed(I[15], 63, 26, "offset");
      this[S._point0].add(offset);
      this[S._point1].add(offset);
      this[S._point2].add(offset);
    }
  };
  (vector_math_64.Triangle.new = function() {
    this[S._point0] = new vector_math_64.Vector3.zero();
    this[S._point1] = new vector_math_64.Vector3.zero();
    this[S._point2] = new vector_math_64.Vector3.zero();
    ;
  }).prototype = vector_math_64.Triangle.prototype;
  (vector_math_64.Triangle.copy = function(other) {
    if (other == null) dart.nullFailed(I[15], 29, 26, "other");
    this[S._point0] = vector_math_64.Vector3.copy(other[S._point0]);
    this[S._point1] = vector_math_64.Vector3.copy(other[S._point1]);
    this[S._point2] = vector_math_64.Vector3.copy(other[S._point2]);
    ;
  }).prototype = vector_math_64.Triangle.prototype;
  (vector_math_64.Triangle.points = function(point0, point1, point2) {
    if (point0 == null) dart.nullFailed(I[15], 35, 27, "point0");
    if (point1 == null) dart.nullFailed(I[15], 35, 43, "point1");
    if (point2 == null) dart.nullFailed(I[15], 35, 59, "point2");
    this[S._point0] = vector_math_64.Vector3.copy(point0);
    this[S._point1] = vector_math_64.Vector3.copy(point1);
    this[S._point2] = vector_math_64.Vector3.copy(point2);
    ;
  }).prototype = vector_math_64.Triangle.prototype;
  dart.addTypeTests(vector_math_64.Triangle);
  dart.addTypeCaches(vector_math_64.Triangle);
  dart.setMethodSignature(vector_math_64.Triangle, () => ({
    __proto__: dart.getMethods(vector_math_64.Triangle.__proto__),
    copyFrom: dart.fnType(dart.void, [vector_math_64.Triangle]),
    copyNormalInto: dart.fnType(dart.void, [vector_math_64.Vector3]),
    transform: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    translate: dart.fnType(dart.void, [vector_math_64.Vector3])
  }));
  dart.setGetterSignature(vector_math_64.Triangle, () => ({
    __proto__: dart.getGetters(vector_math_64.Triangle.__proto__),
    point0: vector_math_64.Vector3,
    point1: vector_math_64.Vector3,
    point2: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Triangle, I[1]);
  dart.setFieldSignature(vector_math_64.Triangle, () => ({
    __proto__: dart.getFields(vector_math_64.Triangle.__proto__),
    [S._point0]: dart.finalFieldType(vector_math_64.Vector3),
    [S._point1]: dart.finalFieldType(vector_math_64.Vector3),
    [S._point2]: dart.finalFieldType(vector_math_64.Vector3)
  }));
  vector_math_64.Vector = class Vector extends core.Object {};
  (vector_math_64.Vector.new = function() {
    ;
  }).prototype = vector_math_64.Vector.prototype;
  dart.addTypeTests(vector_math_64.Vector);
  dart.addTypeCaches(vector_math_64.Vector);
  dart.setLibraryUri(vector_math_64.Vector, I[1]);
  vector_math_64.Vector2 = class Vector2 extends core.Object {
    get storage() {
      return this[S._v2storage];
    }
    static min(a, b, result) {
      let t2;
      if (a == null) dart.nullFailed(I[16], 16, 27, "a");
      if (b == null) dart.nullFailed(I[16], 16, 38, "b");
      if (result == null) dart.nullFailed(I[16], 16, 49, "result");
      t2 = result;
      (() => {
        t2.x = math.min(core.double, a.x, b.x);
        t2.y = math.min(core.double, a.y, b.y);
        return t2;
      })();
    }
    static max(a, b, result) {
      let t2;
      if (a == null) dart.nullFailed(I[16], 23, 27, "a");
      if (b == null) dart.nullFailed(I[16], 23, 38, "b");
      if (result == null) dart.nullFailed(I[16], 23, 49, "result");
      t2 = result;
      (() => {
        t2.x = math.max(core.double, a.x, b.x);
        t2.y = math.max(core.double, a.y, b.y);
        return t2;
      })();
    }
    static mix(min, max, a, result) {
      let t2;
      if (min == null) dart.nullFailed(I[16], 31, 27, "min");
      if (max == null) dart.nullFailed(I[16], 31, 40, "max");
      if (a == null) dart.nullFailed(I[16], 31, 52, "a");
      if (result == null) dart.nullFailed(I[16], 31, 63, "result");
      t2 = result;
      (() => {
        t2.x = dart.notNull(min.x) + dart.notNull(a) * (dart.notNull(max.x) - dart.notNull(min.x));
        t2.y = dart.notNull(min.y) + dart.notNull(a) * (dart.notNull(max.y) - dart.notNull(min.y));
        return t2;
      })();
    }
    static new(x, y) {
      let t2;
      if (x == null) dart.nullFailed(I[16], 38, 26, "x");
      if (y == null) dart.nullFailed(I[16], 38, 36, "y");
      t2 = new vector_math_64.Vector2.zero();
      return (() => {
        t2.setValues(x, y);
        return t2;
      })();
    }
    static array(array, offset = 0) {
      let t2;
      if (array == null) dart.nullFailed(I[16], 41, 38, "array");
      if (offset == null) dart.nullFailed(I[16], 41, 50, "offset");
      t2 = new vector_math_64.Vector2.zero();
      return (() => {
        t2.copyFromArray(array, offset);
        return t2;
      })();
    }
    static all(value) {
      let t2;
      if (value == null) dart.nullFailed(I[16], 48, 30, "value");
      t2 = new vector_math_64.Vector2.zero();
      return (() => {
        t2.splat(value);
        return t2;
      })();
    }
    static copy(other) {
      let t2;
      if (other == null) dart.nullFailed(I[16], 51, 32, "other");
      t2 = new vector_math_64.Vector2.zero();
      return (() => {
        t2.setFrom(other);
        return t2;
      })();
    }
    static random(rng = null) {
      rng == null ? rng = math.Random.new() : null;
      return vector_math_64.Vector2.new(rng.nextDouble(), rng.nextDouble());
    }
    setValues(x_, y_) {
      if (x_ == null) dart.nullFailed(I[16], 69, 25, "x_");
      if (y_ == null) dart.nullFailed(I[16], 69, 36, "y_");
      this[S._v2storage][S.$_set](0, x_);
      this[S._v2storage][S.$_set](1, y_);
    }
    setZero() {
      this[S._v2storage][S.$_set](0, 0.0);
      this[S._v2storage][S.$_set](1, 0.0);
    }
    setFrom(other) {
      if (other == null) dart.nullFailed(I[16], 81, 24, "other");
      let otherStorage = other[S._v2storage];
      this[S._v2storage][S.$_set](1, otherStorage[S.$_get](1));
      this[S._v2storage][S.$_set](0, otherStorage[S.$_get](0));
    }
    splat(arg) {
      if (arg == null) dart.nullFailed(I[16], 88, 21, "arg");
      this[S._v2storage][S.$_set](0, arg);
      this[S._v2storage][S.$_set](1, arg);
    }
    toString() {
      return "[" + dart.str(this[S._v2storage][S.$_get](0)) + "," + dart.str(this[S._v2storage][S.$_get](1)) + "]";
    }
    _equals(other) {
      if (other == null) return false;
      return vector_math_64.Vector2.is(other) && this[S._v2storage][S.$_get](0) == other[S._v2storage][S.$_get](0) && this[S._v2storage][S.$_get](1) == other[S._v2storage][S.$_get](1);
    }
    get hashCode() {
      return hash.hashObjects(this[S._v2storage]);
    }
    _negate() {
      let t2;
      t2 = this.clone();
      return (() => {
        t2.negate();
        return t2;
      })();
    }
    ['-'](other) {
      let t2;
      if (other == null) dart.nullFailed(I[16], 111, 30, "other");
      t2 = this.clone();
      return (() => {
        t2.sub(other);
        return t2;
      })();
    }
    ['+'](other) {
      let t2;
      if (other == null) dart.nullFailed(I[16], 114, 30, "other");
      t2 = this.clone();
      return (() => {
        t2.add(other);
        return t2;
      })();
    }
    ['/'](scale) {
      let t2;
      if (scale == null) dart.nullFailed(I[16], 117, 29, "scale");
      t2 = this.clone();
      return (() => {
        t2.scale(1.0 / dart.notNull(scale));
        return t2;
      })();
    }
    ['*'](scale) {
      let t2;
      if (scale == null) dart.nullFailed(I[16], 120, 29, "scale");
      t2 = this.clone();
      return (() => {
        t2.scale(scale);
        return t2;
      })();
    }
    _get(i) {
      if (i == null) dart.nullFailed(I[16], 123, 26, "i");
      return this[S._v2storage][S.$_get](i);
    }
    _set(i, v$) {
      let v = v$;
      if (i == null) dart.nullFailed(I[16], 126, 25, "i");
      if (v == null) dart.nullFailed(I[16], 126, 35, "v");
      this[S._v2storage][S.$_set](i, v);
      return v$;
    }
    set length(value) {
      let t3, t2, t3$, t2$;
      if (value == null) dart.nullFailed(I[16], 132, 21, "value");
      if (value === 0.0) {
        this.setZero();
      } else {
        let l = this.length;
        if (l === 0.0) {
          return;
        }
        l = dart.notNull(value) / dart.notNull(l);
        t2 = this[S._v2storage];
        t3 = 0;
        t2[S.$_set](t3, dart.notNull(t2[S.$_get](t3)) * dart.notNull(l));
        t2$ = this[S._v2storage];
        t3$ = 1;
        t2$[S.$_set](t3$, dart.notNull(t2$[S.$_get](t3$)) * dart.notNull(l));
      }
    }
    get length() {
      return math.sqrt(this.length2);
    }
    get length2() {
      let sum = null;
      sum = dart.notNull(this[S._v2storage][S.$_get](0)) * dart.notNull(this[S._v2storage][S.$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[S._v2storage][S.$_get](1)) * dart.notNull(this[S._v2storage][S.$_get](1));
      return sum;
    }
    normalize() {
      let t3, t2, t3$, t2$;
      let l = this.length;
      if (l === 0.0) {
        return 0.0;
      }
      let d = 1.0 / dart.notNull(l);
      t2 = this[S._v2storage];
      t3 = 0;
      t2[S.$_set](t3, dart.notNull(t2[S.$_get](t3)) * d);
      t2$ = this[S._v2storage];
      t3$ = 1;
      t2$[S.$_set](t3$, dart.notNull(t2$[S.$_get](t3$)) * d);
      return l;
    }
    normalizeLength() {
      return this.normalize();
    }
    normalized() {
      let t2;
      t2 = this.clone();
      return (() => {
        t2.normalize();
        return t2;
      })();
    }
    normalizeInto(out) {
      let t2;
      if (out == null) dart.nullFailed(I[16], 178, 33, "out");
      t2 = out;
      (() => {
        t2.setFrom(this);
        t2.normalize();
        return t2;
      })();
      return out;
    }
    distanceTo(arg) {
      if (arg == null) dart.nullFailed(I[16], 186, 29, "arg");
      return math.sqrt(this.distanceToSquared(arg));
    }
    distanceToSquared(arg) {
      if (arg == null) dart.nullFailed(I[16], 189, 36, "arg");
      let dx = dart.notNull(this.x) - dart.notNull(arg.x);
      let dy = dart.notNull(this.y) - dart.notNull(arg.y);
      return dx * dx + dy * dy;
    }
    angleTo(other) {
      if (other == null) dart.nullFailed(I[16], 197, 26, "other");
      let otherStorage = other[S._v2storage];
      if (this[S._v2storage][S.$_get](0) == otherStorage[S.$_get](0) && this[S._v2storage][S.$_get](1) == otherStorage[S.$_get](1)) {
        return 0.0;
      }
      let d = dart.notNull(this.dot(other)) / (dart.notNull(this.length) * dart.notNull(other.length));
      return math.acos(d[S.$clamp](-1.0, 1.0));
    }
    angleToSigned(other) {
      if (other == null) dart.nullFailed(I[16], 209, 32, "other");
      let otherStorage = other[S._v2storage];
      if (this[S._v2storage][S.$_get](0) == otherStorage[S.$_get](0) && this[S._v2storage][S.$_get](1) == otherStorage[S.$_get](1)) {
        return 0.0;
      }
      let s = this.cross(other);
      let c = this.dot(other);
      return math.atan2(s, c);
    }
    dot(other) {
      if (other == null) dart.nullFailed(I[16], 222, 22, "other");
      let otherStorage = other[S._v2storage];
      let sum = null;
      sum = dart.notNull(this[S._v2storage][S.$_get](0)) * dart.notNull(otherStorage[S.$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[S._v2storage][S.$_get](1)) * dart.notNull(otherStorage[S.$_get](1));
      return sum;
    }
    postmultiply(arg) {
      if (arg == null) dart.nullFailed(I[16], 236, 29, "arg");
      let argStorage = arg.storage;
      let v0 = this[S._v2storage][S.$_get](0);
      let v1 = this[S._v2storage][S.$_get](1);
      this[S._v2storage][S.$_set](0, dart.notNull(v0) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(v1) * dart.notNull(argStorage[S.$_get](1)));
      this[S._v2storage][S.$_set](1, dart.notNull(v0) * dart.notNull(argStorage[S.$_get](2)) + dart.notNull(v1) * dart.notNull(argStorage[S.$_get](3)));
    }
    cross(other) {
      if (other == null) dart.nullFailed(I[16], 245, 24, "other");
      let otherStorage = other[S._v2storage];
      return dart.notNull(this[S._v2storage][S.$_get](0)) * dart.notNull(otherStorage[S.$_get](1)) - dart.notNull(this[S._v2storage][S.$_get](1)) * dart.notNull(otherStorage[S.$_get](0));
    }
    scaleOrthogonalInto(scale, out) {
      if (scale == null) dart.nullFailed(I[16], 251, 38, "scale");
      if (out == null) dart.nullFailed(I[16], 251, 53, "out");
      out.setValues(-dart.notNull(scale) * dart.notNull(this[S._v2storage][S.$_get](1)), dart.notNull(scale) * dart.notNull(this[S._v2storage][S.$_get](0)));
      return out;
    }
    reflect(normal) {
      if (normal == null) dart.nullFailed(I[16], 257, 24, "normal");
      this.sub(normal.scaled(2.0 * dart.notNull(normal.dot(this))));
    }
    reflected(normal) {
      let t2;
      if (normal == null) dart.nullFailed(I[16], 262, 29, "normal");
      t2 = this.clone();
      return (() => {
        t2.reflect(normal);
        return t2;
      })();
    }
    relativeError(correct) {
      if (correct == null) dart.nullFailed(I[16], 265, 32, "correct");
      let correct_norm = correct.length;
      let diff_norm = this['-'](correct).length;
      return dart.notNull(diff_norm) / dart.notNull(correct_norm);
    }
    absoluteError(correct) {
      if (correct == null) dart.nullFailed(I[16], 272, 32, "correct");
      return this['-'](correct).length;
    }
    get isInfinite() {
      let is_infinite = false;
      is_infinite = is_infinite || this[S._v2storage][S.$_get](0)[S.$isInfinite];
      is_infinite = is_infinite || this[S._v2storage][S.$_get](1)[S.$isInfinite];
      return is_infinite;
    }
    get isNaN() {
      let is_nan = false;
      is_nan = is_nan || this[S._v2storage][S.$_get](0)[S.$isNaN];
      is_nan = is_nan || this[S._v2storage][S.$_get](1)[S.$isNaN];
      return is_nan;
    }
    add(arg) {
      if (arg == null) dart.nullFailed(I[16], 291, 20, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v2storage][S.$_set](0, dart.notNull(this[S._v2storage][S.$_get](0)) + dart.notNull(argStorage[S.$_get](0)));
      this[S._v2storage][S.$_set](1, dart.notNull(this[S._v2storage][S.$_get](1)) + dart.notNull(argStorage[S.$_get](1)));
    }
    addScaled(arg, factor) {
      if (arg == null) dart.nullFailed(I[16], 298, 26, "arg");
      if (factor == null) dart.nullFailed(I[16], 298, 38, "factor");
      let argStorage = arg[S._v2storage];
      this[S._v2storage][S.$_set](0, dart.notNull(this[S._v2storage][S.$_get](0)) + dart.notNull(argStorage[S.$_get](0)) * dart.notNull(factor));
      this[S._v2storage][S.$_set](1, dart.notNull(this[S._v2storage][S.$_get](1)) + dart.notNull(argStorage[S.$_get](1)) * dart.notNull(factor));
    }
    sub(arg) {
      if (arg == null) dart.nullFailed(I[16], 305, 20, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v2storage][S.$_set](0, dart.notNull(this[S._v2storage][S.$_get](0)) - dart.notNull(argStorage[S.$_get](0)));
      this[S._v2storage][S.$_set](1, dart.notNull(this[S._v2storage][S.$_get](1)) - dart.notNull(argStorage[S.$_get](1)));
    }
    multiply(arg) {
      if (arg == null) dart.nullFailed(I[16], 312, 25, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v2storage][S.$_set](0, dart.notNull(this[S._v2storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)));
      this[S._v2storage][S.$_set](1, dart.notNull(this[S._v2storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](1)));
    }
    divide(arg) {
      if (arg == null) dart.nullFailed(I[16], 319, 23, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v2storage][S.$_set](0, dart.notNull(this[S._v2storage][S.$_get](0)) / dart.notNull(argStorage[S.$_get](0)));
      this[S._v2storage][S.$_set](1, dart.notNull(this[S._v2storage][S.$_get](1)) / dart.notNull(argStorage[S.$_get](1)));
    }
    scale(arg) {
      if (arg == null) dart.nullFailed(I[16], 326, 21, "arg");
      this[S._v2storage][S.$_set](1, dart.notNull(this[S._v2storage][S.$_get](1)) * dart.notNull(arg));
      this[S._v2storage][S.$_set](0, dart.notNull(this[S._v2storage][S.$_get](0)) * dart.notNull(arg));
    }
    scaled(arg) {
      let t2;
      if (arg == null) dart.nullFailed(I[16], 332, 25, "arg");
      t2 = this.clone();
      return (() => {
        t2.scale(arg);
        return t2;
      })();
    }
    negate() {
      this[S._v2storage][S.$_set](1, -dart.notNull(this[S._v2storage][S.$_get](1)));
      this[S._v2storage][S.$_set](0, -dart.notNull(this[S._v2storage][S.$_get](0)));
    }
    absolute() {
      this[S._v2storage][S.$_set](1, this[S._v2storage][S.$_get](1)[S.$abs]());
      this[S._v2storage][S.$_set](0, this[S._v2storage][S.$_get](0)[S.$abs]());
    }
    clamp(min, max) {
      if (min == null) dart.nullFailed(I[16], 347, 22, "min");
      if (max == null) dart.nullFailed(I[16], 347, 35, "max");
      let minStorage = min.storage;
      let maxStorage = max.storage;
      this[S._v2storage][S.$_set](0, this[S._v2storage][S.$_get](0)[S.$clamp](minStorage[S.$_get](0), maxStorage[S.$_get](0))[S.$toDouble]());
      this[S._v2storage][S.$_set](1, this[S._v2storage][S.$_get](1)[S.$clamp](minStorage[S.$_get](1), maxStorage[S.$_get](1))[S.$toDouble]());
    }
    clampScalar(min, max) {
      if (min == null) dart.nullFailed(I[16], 357, 27, "min");
      if (max == null) dart.nullFailed(I[16], 357, 39, "max");
      this[S._v2storage][S.$_set](0, this[S._v2storage][S.$_get](0)[S.$clamp](min, max)[S.$toDouble]());
      this[S._v2storage][S.$_set](1, this[S._v2storage][S.$_get](1)[S.$clamp](min, max)[S.$toDouble]());
    }
    floor() {
      this[S._v2storage][S.$_set](0, this[S._v2storage][S.$_get](0)[S.$floorToDouble]());
      this[S._v2storage][S.$_set](1, this[S._v2storage][S.$_get](1)[S.$floorToDouble]());
    }
    ceil() {
      this[S._v2storage][S.$_set](0, this[S._v2storage][S.$_get](0)[S.$ceilToDouble]());
      this[S._v2storage][S.$_set](1, this[S._v2storage][S.$_get](1)[S.$ceilToDouble]());
    }
    round() {
      this[S._v2storage][S.$_set](0, this[S._v2storage][S.$_get](0)[S.$roundToDouble]());
      this[S._v2storage][S.$_set](1, this[S._v2storage][S.$_get](1)[S.$roundToDouble]());
    }
    roundToZero() {
      this[S._v2storage][S.$_set](0, dart.notNull(this[S._v2storage][S.$_get](0)) < 0.0 ? this[S._v2storage][S.$_get](0)[S.$ceilToDouble]() : this[S._v2storage][S.$_get](0)[S.$floorToDouble]());
      this[S._v2storage][S.$_set](1, dart.notNull(this[S._v2storage][S.$_get](1)) < 0.0 ? this[S._v2storage][S.$_get](1)[S.$ceilToDouble]() : this[S._v2storage][S.$_get](1)[S.$floorToDouble]());
    }
    clone() {
      return vector_math_64.Vector2.copy(this);
    }
    copyInto(arg) {
      if (arg == null) dart.nullFailed(I[16], 394, 28, "arg");
      let argStorage = arg[S._v2storage];
      argStorage[S.$_set](1, this[S._v2storage][S.$_get](1));
      argStorage[S.$_set](0, this[S._v2storage][S.$_get](0));
      return arg;
    }
    copyIntoArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[16], 402, 35, "array");
      if (offset == null) dart.nullFailed(I[16], 402, 47, "offset");
      array[S.$_set](dart.notNull(offset) + 1, this[S._v2storage][S.$_get](1));
      array[S.$_set](dart.notNull(offset) + 0, this[S._v2storage][S.$_get](0));
    }
    copyFromArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[16], 408, 35, "array");
      if (offset == null) dart.nullFailed(I[16], 408, 47, "offset");
      this[S._v2storage][S.$_set](1, array[S.$_get](dart.notNull(offset) + 1));
      this[S._v2storage][S.$_set](0, array[S.$_get](dart.notNull(offset) + 0));
    }
    set xy(arg) {
      if (arg == null) dart.nullFailed(I[16], 413, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v2storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v2storage][S.$_set](1, argStorage[S.$_get](1));
    }
    set yx(arg) {
      if (arg == null) dart.nullFailed(I[16], 419, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v2storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v2storage][S.$_set](0, argStorage[S.$_get](1));
    }
    set r(arg) {
      if (arg == null) dart.nullFailed(I[16], 425, 16, "arg");
      return this.x = arg;
    }
    set g(arg) {
      if (arg == null) dart.nullFailed(I[16], 426, 16, "arg");
      return this.y = arg;
    }
    set s(arg) {
      if (arg == null) dart.nullFailed(I[16], 427, 16, "arg");
      return this.x = arg;
    }
    set t(arg) {
      if (arg == null) dart.nullFailed(I[16], 428, 16, "arg");
      return this.y = arg;
    }
    set x(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[16], 429, 16, "arg");
      t2 = this[S._v2storage];
      t3 = 0;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set y(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[16], 430, 16, "arg");
      t2 = this[S._v2storage];
      t3 = 1;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set rg(arg) {
      if (arg == null) dart.nullFailed(I[16], 431, 18, "arg");
      return this.xy = arg;
    }
    set gr(arg) {
      if (arg == null) dart.nullFailed(I[16], 432, 18, "arg");
      return this.yx = arg;
    }
    set st(arg) {
      if (arg == null) dart.nullFailed(I[16], 433, 18, "arg");
      return this.xy = arg;
    }
    set ts(arg) {
      if (arg == null) dart.nullFailed(I[16], 434, 18, "arg");
      return this.yx = arg;
    }
    get xx() {
      return vector_math_64.Vector2.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0));
    }
    get xy() {
      return vector_math_64.Vector2.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1));
    }
    get yx() {
      return vector_math_64.Vector2.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0));
    }
    get yy() {
      return vector_math_64.Vector2.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1));
    }
    get xxx() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0));
    }
    get xxy() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1));
    }
    get xyx() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0));
    }
    get xyy() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1));
    }
    get yxx() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0));
    }
    get yxy() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1));
    }
    get yyx() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0));
    }
    get yyy() {
      return vector_math_64.Vector3.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1));
    }
    get xxxx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0));
    }
    get xxxy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1));
    }
    get xxyx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0));
    }
    get xxyy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1));
    }
    get xyxx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0));
    }
    get xyxy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1));
    }
    get xyyx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0));
    }
    get xyyy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1));
    }
    get yxxx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0));
    }
    get yxxy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1));
    }
    get yxyx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0));
    }
    get yxyy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1));
    }
    get yyxx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](0));
    }
    get yyxy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0), this[S._v2storage][S.$_get](1));
    }
    get yyyx() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](0));
    }
    get yyyy() {
      return vector_math_64.Vector4.new(this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1), this[S._v2storage][S.$_get](1));
    }
    get r() {
      return this.x;
    }
    get g() {
      return this.y;
    }
    get s() {
      return this.x;
    }
    get t() {
      return this.y;
    }
    get x() {
      return this[S._v2storage][S.$_get](0);
    }
    get y() {
      return this[S._v2storage][S.$_get](1);
    }
    get rr() {
      return this.xx;
    }
    get rg() {
      return this.xy;
    }
    get gr() {
      return this.yx;
    }
    get gg() {
      return this.yy;
    }
    get rrr() {
      return this.xxx;
    }
    get rrg() {
      return this.xxy;
    }
    get rgr() {
      return this.xyx;
    }
    get rgg() {
      return this.xyy;
    }
    get grr() {
      return this.yxx;
    }
    get grg() {
      return this.yxy;
    }
    get ggr() {
      return this.yyx;
    }
    get ggg() {
      return this.yyy;
    }
    get rrrr() {
      return this.xxxx;
    }
    get rrrg() {
      return this.xxxy;
    }
    get rrgr() {
      return this.xxyx;
    }
    get rrgg() {
      return this.xxyy;
    }
    get rgrr() {
      return this.xyxx;
    }
    get rgrg() {
      return this.xyxy;
    }
    get rggr() {
      return this.xyyx;
    }
    get rggg() {
      return this.xyyy;
    }
    get grrr() {
      return this.yxxx;
    }
    get grrg() {
      return this.yxxy;
    }
    get grgr() {
      return this.yxyx;
    }
    get grgg() {
      return this.yxyy;
    }
    get ggrr() {
      return this.yyxx;
    }
    get ggrg() {
      return this.yyxy;
    }
    get gggr() {
      return this.yyyx;
    }
    get gggg() {
      return this.yyyy;
    }
    get ss() {
      return this.xx;
    }
    get st() {
      return this.xy;
    }
    get ts() {
      return this.yx;
    }
    get tt() {
      return this.yy;
    }
    get sss() {
      return this.xxx;
    }
    get sst() {
      return this.xxy;
    }
    get sts() {
      return this.xyx;
    }
    get stt() {
      return this.xyy;
    }
    get tss() {
      return this.yxx;
    }
    get tst() {
      return this.yxy;
    }
    get tts() {
      return this.yyx;
    }
    get ttt() {
      return this.yyy;
    }
    get ssss() {
      return this.xxxx;
    }
    get ssst() {
      return this.xxxy;
    }
    get ssts() {
      return this.xxyx;
    }
    get sstt() {
      return this.xxyy;
    }
    get stss() {
      return this.xyxx;
    }
    get stst() {
      return this.xyxy;
    }
    get stts() {
      return this.xyyx;
    }
    get sttt() {
      return this.xyyy;
    }
    get tsss() {
      return this.yxxx;
    }
    get tsst() {
      return this.yxxy;
    }
    get tsts() {
      return this.yxyx;
    }
    get tstt() {
      return this.yxyy;
    }
    get ttss() {
      return this.yyxx;
    }
    get ttst() {
      return this.yyxy;
    }
    get ttts() {
      return this.yyyx;
    }
    get tttt() {
      return this.yyyy;
    }
  };
  (vector_math_64.Vector2.zero = function() {
    this[S._v2storage] = _native_typed_data.NativeFloat64List.new(2);
    ;
  }).prototype = vector_math_64.Vector2.prototype;
  (vector_math_64.Vector2.fromFloat64List = function(_v2storage) {
    if (_v2storage == null) dart.nullFailed(I[16], 54, 32, "_v2storage");
    this[S._v2storage] = _v2storage;
    ;
  }).prototype = vector_math_64.Vector2.prototype;
  (vector_math_64.Vector2.fromBuffer = function(buffer, offset) {
    if (buffer == null) dart.nullFailed(I[16], 58, 33, "buffer");
    if (offset == null) dart.nullFailed(I[16], 58, 45, "offset");
    this[S._v2storage] = typed_data.Float64List.view(buffer, offset, 2);
    ;
  }).prototype = vector_math_64.Vector2.prototype;
  dart.addTypeTests(vector_math_64.Vector2);
  dart.addTypeCaches(vector_math_64.Vector2);
  vector_math_64.Vector2[dart.implements] = () => [vector_math_64.Vector];
  dart.setMethodSignature(vector_math_64.Vector2, () => ({
    __proto__: dart.getMethods(vector_math_64.Vector2.__proto__),
    setValues: dart.fnType(dart.void, [core.double, core.double]),
    setZero: dart.fnType(dart.void, []),
    setFrom: dart.fnType(dart.void, [vector_math_64.Vector2]),
    splat: dart.fnType(dart.void, [core.double]),
    _equals: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    [S.$_equals]: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    _negate: dart.fnType(vector_math_64.Vector2, []),
    '-': dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    '+': dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    '/': dart.fnType(vector_math_64.Vector2, [core.double]),
    '*': dart.fnType(vector_math_64.Vector2, [core.double]),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    normalize: dart.fnType(core.double, []),
    normalizeLength: dart.fnType(core.double, []),
    normalized: dart.fnType(vector_math_64.Vector2, []),
    normalizeInto: dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    distanceTo: dart.fnType(core.double, [vector_math_64.Vector2]),
    distanceToSquared: dart.fnType(core.double, [vector_math_64.Vector2]),
    angleTo: dart.fnType(core.double, [vector_math_64.Vector2]),
    angleToSigned: dart.fnType(core.double, [vector_math_64.Vector2]),
    dot: dart.fnType(core.double, [vector_math_64.Vector2]),
    postmultiply: dart.fnType(dart.void, [vector_math_64.Matrix2]),
    cross: dart.fnType(core.double, [vector_math_64.Vector2]),
    scaleOrthogonalInto: dart.fnType(vector_math_64.Vector2, [core.double, vector_math_64.Vector2]),
    reflect: dart.fnType(dart.void, [vector_math_64.Vector2]),
    reflected: dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    relativeError: dart.fnType(core.double, [vector_math_64.Vector2]),
    absoluteError: dart.fnType(core.double, [vector_math_64.Vector2]),
    add: dart.fnType(dart.void, [vector_math_64.Vector2]),
    addScaled: dart.fnType(dart.void, [vector_math_64.Vector2, core.double]),
    sub: dart.fnType(dart.void, [vector_math_64.Vector2]),
    multiply: dart.fnType(dart.void, [vector_math_64.Vector2]),
    divide: dart.fnType(dart.void, [vector_math_64.Vector2]),
    scale: dart.fnType(dart.void, [core.double]),
    scaled: dart.fnType(vector_math_64.Vector2, [core.double]),
    negate: dart.fnType(dart.void, []),
    absolute: dart.fnType(dart.void, []),
    clamp: dart.fnType(dart.void, [vector_math_64.Vector2, vector_math_64.Vector2]),
    clampScalar: dart.fnType(dart.void, [core.double, core.double]),
    floor: dart.fnType(dart.void, []),
    ceil: dart.fnType(dart.void, []),
    round: dart.fnType(dart.void, []),
    roundToZero: dart.fnType(dart.void, []),
    clone: dart.fnType(vector_math_64.Vector2, []),
    copyInto: dart.fnType(vector_math_64.Vector2, [vector_math_64.Vector2]),
    copyIntoArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int]),
    copyFromArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int])
  }));
  dart.setGetterSignature(vector_math_64.Vector2, () => ({
    __proto__: dart.getGetters(vector_math_64.Vector2.__proto__),
    storage: typed_data.Float64List,
    length: core.double,
    length2: core.double,
    isInfinite: core.bool,
    isNaN: core.bool,
    xx: vector_math_64.Vector2,
    xy: vector_math_64.Vector2,
    yx: vector_math_64.Vector2,
    yy: vector_math_64.Vector2,
    xxx: vector_math_64.Vector3,
    xxy: vector_math_64.Vector3,
    xyx: vector_math_64.Vector3,
    xyy: vector_math_64.Vector3,
    yxx: vector_math_64.Vector3,
    yxy: vector_math_64.Vector3,
    yyx: vector_math_64.Vector3,
    yyy: vector_math_64.Vector3,
    xxxx: vector_math_64.Vector4,
    xxxy: vector_math_64.Vector4,
    xxyx: vector_math_64.Vector4,
    xxyy: vector_math_64.Vector4,
    xyxx: vector_math_64.Vector4,
    xyxy: vector_math_64.Vector4,
    xyyx: vector_math_64.Vector4,
    xyyy: vector_math_64.Vector4,
    yxxx: vector_math_64.Vector4,
    yxxy: vector_math_64.Vector4,
    yxyx: vector_math_64.Vector4,
    yxyy: vector_math_64.Vector4,
    yyxx: vector_math_64.Vector4,
    yyxy: vector_math_64.Vector4,
    yyyx: vector_math_64.Vector4,
    yyyy: vector_math_64.Vector4,
    r: core.double,
    g: core.double,
    s: core.double,
    t: core.double,
    x: core.double,
    y: core.double,
    rr: vector_math_64.Vector2,
    rg: vector_math_64.Vector2,
    gr: vector_math_64.Vector2,
    gg: vector_math_64.Vector2,
    rrr: vector_math_64.Vector3,
    rrg: vector_math_64.Vector3,
    rgr: vector_math_64.Vector3,
    rgg: vector_math_64.Vector3,
    grr: vector_math_64.Vector3,
    grg: vector_math_64.Vector3,
    ggr: vector_math_64.Vector3,
    ggg: vector_math_64.Vector3,
    rrrr: vector_math_64.Vector4,
    rrrg: vector_math_64.Vector4,
    rrgr: vector_math_64.Vector4,
    rrgg: vector_math_64.Vector4,
    rgrr: vector_math_64.Vector4,
    rgrg: vector_math_64.Vector4,
    rggr: vector_math_64.Vector4,
    rggg: vector_math_64.Vector4,
    grrr: vector_math_64.Vector4,
    grrg: vector_math_64.Vector4,
    grgr: vector_math_64.Vector4,
    grgg: vector_math_64.Vector4,
    ggrr: vector_math_64.Vector4,
    ggrg: vector_math_64.Vector4,
    gggr: vector_math_64.Vector4,
    gggg: vector_math_64.Vector4,
    ss: vector_math_64.Vector2,
    st: vector_math_64.Vector2,
    ts: vector_math_64.Vector2,
    tt: vector_math_64.Vector2,
    sss: vector_math_64.Vector3,
    sst: vector_math_64.Vector3,
    sts: vector_math_64.Vector3,
    stt: vector_math_64.Vector3,
    tss: vector_math_64.Vector3,
    tst: vector_math_64.Vector3,
    tts: vector_math_64.Vector3,
    ttt: vector_math_64.Vector3,
    ssss: vector_math_64.Vector4,
    ssst: vector_math_64.Vector4,
    ssts: vector_math_64.Vector4,
    sstt: vector_math_64.Vector4,
    stss: vector_math_64.Vector4,
    stst: vector_math_64.Vector4,
    stts: vector_math_64.Vector4,
    sttt: vector_math_64.Vector4,
    tsss: vector_math_64.Vector4,
    tsst: vector_math_64.Vector4,
    tsts: vector_math_64.Vector4,
    tstt: vector_math_64.Vector4,
    ttss: vector_math_64.Vector4,
    ttst: vector_math_64.Vector4,
    ttts: vector_math_64.Vector4,
    tttt: vector_math_64.Vector4
  }));
  dart.setSetterSignature(vector_math_64.Vector2, () => ({
    __proto__: dart.getSetters(vector_math_64.Vector2.__proto__),
    length: core.double,
    xy: vector_math_64.Vector2,
    yx: vector_math_64.Vector2,
    r: core.double,
    g: core.double,
    s: core.double,
    t: core.double,
    x: core.double,
    y: core.double,
    rg: vector_math_64.Vector2,
    gr: vector_math_64.Vector2,
    st: vector_math_64.Vector2,
    ts: vector_math_64.Vector2
  }));
  dart.setLibraryUri(vector_math_64.Vector2, I[1]);
  dart.setFieldSignature(vector_math_64.Vector2, () => ({
    __proto__: dart.getFields(vector_math_64.Vector2.__proto__),
    [S._v2storage]: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.defineExtensionMethods(vector_math_64.Vector2, ['toString', '_equals']);
  dart.defineExtensionAccessors(vector_math_64.Vector2, ['hashCode']);
  vector_math_64.Vector3 = class Vector3 extends core.Object {
    get storage() {
      return this[S._v3storage];
    }
    static min(a, b, result) {
      let t2;
      if (a == null) dart.nullFailed(I[17], 16, 27, "a");
      if (b == null) dart.nullFailed(I[17], 16, 38, "b");
      if (result == null) dart.nullFailed(I[17], 16, 49, "result");
      t2 = result;
      (() => {
        t2.x = math.min(core.double, a.x, b.x);
        t2.y = math.min(core.double, a.y, b.y);
        t2.z = math.min(core.double, a.z, b.z);
        return t2;
      })();
    }
    static max(a, b, result) {
      let t2;
      if (a == null) dart.nullFailed(I[17], 24, 27, "a");
      if (b == null) dart.nullFailed(I[17], 24, 38, "b");
      if (result == null) dart.nullFailed(I[17], 24, 49, "result");
      t2 = result;
      (() => {
        t2.x = math.max(core.double, a.x, b.x);
        t2.y = math.max(core.double, a.y, b.y);
        t2.z = math.max(core.double, a.z, b.z);
        return t2;
      })();
    }
    static mix(min, max, a, result) {
      let t2;
      if (min == null) dart.nullFailed(I[17], 33, 27, "min");
      if (max == null) dart.nullFailed(I[17], 33, 40, "max");
      if (a == null) dart.nullFailed(I[17], 33, 52, "a");
      if (result == null) dart.nullFailed(I[17], 33, 63, "result");
      t2 = result;
      (() => {
        t2.x = dart.notNull(min.x) + dart.notNull(a) * (dart.notNull(max.x) - dart.notNull(min.x));
        t2.y = dart.notNull(min.y) + dart.notNull(a) * (dart.notNull(max.y) - dart.notNull(min.y));
        t2.z = dart.notNull(min.z) + dart.notNull(a) * (dart.notNull(max.z) - dart.notNull(min.z));
        return t2;
      })();
    }
    static new(x, y, z) {
      let t2;
      if (x == null) dart.nullFailed(I[17], 41, 26, "x");
      if (y == null) dart.nullFailed(I[17], 41, 36, "y");
      if (z == null) dart.nullFailed(I[17], 41, 46, "z");
      t2 = new vector_math_64.Vector3.zero();
      return (() => {
        t2.setValues(x, y, z);
        return t2;
      })();
    }
    static array(array, offset = 0) {
      let t2;
      if (array == null) dart.nullFailed(I[17], 45, 38, "array");
      if (offset == null) dart.nullFailed(I[17], 45, 50, "offset");
      t2 = new vector_math_64.Vector3.zero();
      return (() => {
        t2.copyFromArray(array, offset);
        return t2;
      })();
    }
    static all(value) {
      let t2;
      if (value == null) dart.nullFailed(I[17], 52, 30, "value");
      t2 = new vector_math_64.Vector3.zero();
      return (() => {
        t2.splat(value);
        return t2;
      })();
    }
    static copy(other) {
      let t2;
      if (other == null) dart.nullFailed(I[17], 55, 32, "other");
      t2 = new vector_math_64.Vector3.zero();
      return (() => {
        t2.setFrom(other);
        return t2;
      })();
    }
    static random(rng = null) {
      rng == null ? rng = math.Random.new() : null;
      return vector_math_64.Vector3.new(rng.nextDouble(), rng.nextDouble(), rng.nextDouble());
    }
    setValues(x, y, z) {
      if (x == null) dart.nullFailed(I[17], 73, 25, "x");
      if (y == null) dart.nullFailed(I[17], 73, 35, "y");
      if (z == null) dart.nullFailed(I[17], 73, 45, "z");
      this[S._v3storage][S.$_set](0, x);
      this[S._v3storage][S.$_set](1, y);
      this[S._v3storage][S.$_set](2, z);
    }
    setZero() {
      this[S._v3storage][S.$_set](2, 0.0);
      this[S._v3storage][S.$_set](1, 0.0);
      this[S._v3storage][S.$_set](0, 0.0);
    }
    setFrom(other) {
      if (other == null) dart.nullFailed(I[17], 87, 24, "other");
      let otherStorage = other[S._v3storage];
      this[S._v3storage][S.$_set](0, otherStorage[S.$_get](0));
      this[S._v3storage][S.$_set](1, otherStorage[S.$_get](1));
      this[S._v3storage][S.$_set](2, otherStorage[S.$_get](2));
    }
    splat(arg) {
      if (arg == null) dart.nullFailed(I[17], 95, 21, "arg");
      this[S._v3storage][S.$_set](2, arg);
      this[S._v3storage][S.$_set](1, arg);
      this[S._v3storage][S.$_set](0, arg);
    }
    toString() {
      return "[" + dart.str(this.storage[S.$_get](0)) + "," + dart.str(this.storage[S.$_get](1)) + "," + dart.str(this.storage[S.$_get](2)) + "]";
    }
    _equals(other) {
      if (other == null) return false;
      return vector_math_64.Vector3.is(other) && this[S._v3storage][S.$_get](0) == other[S._v3storage][S.$_get](0) && this[S._v3storage][S.$_get](1) == other[S._v3storage][S.$_get](1) && this[S._v3storage][S.$_get](2) == other[S._v3storage][S.$_get](2);
    }
    get hashCode() {
      return hash.hashObjects(this[S._v3storage]);
    }
    _negate() {
      let t2;
      t2 = this.clone();
      return (() => {
        t2.negate();
        return t2;
      })();
    }
    ['-'](other) {
      let t2;
      if (other == null) dart.nullFailed(I[17], 120, 30, "other");
      t2 = this.clone();
      return (() => {
        t2.sub(other);
        return t2;
      })();
    }
    ['+'](other) {
      let t2;
      if (other == null) dart.nullFailed(I[17], 123, 30, "other");
      t2 = this.clone();
      return (() => {
        t2.add(other);
        return t2;
      })();
    }
    ['/'](scale) {
      if (scale == null) dart.nullFailed(I[17], 126, 29, "scale");
      return this.scaled(1.0 / dart.notNull(scale));
    }
    ['*'](scale) {
      if (scale == null) dart.nullFailed(I[17], 129, 29, "scale");
      return this.scaled(scale);
    }
    _get(i) {
      if (i == null) dart.nullFailed(I[17], 132, 26, "i");
      return this[S._v3storage][S.$_get](i);
    }
    _set(i, v$) {
      let v = v$;
      if (i == null) dart.nullFailed(I[17], 135, 25, "i");
      if (v == null) dart.nullFailed(I[17], 135, 35, "v");
      this[S._v3storage][S.$_set](i, v);
      return v$;
    }
    set length(value) {
      let t3, t2, t3$, t2$, t3$0, t2$0;
      if (value == null) dart.nullFailed(I[17], 141, 21, "value");
      if (value === 0.0) {
        this.setZero();
      } else {
        let l = this.length;
        if (l === 0.0) {
          return;
        }
        l = dart.notNull(value) / dart.notNull(l);
        t2 = this[S._v3storage];
        t3 = 0;
        t2[S.$_set](t3, dart.notNull(t2[S.$_get](t3)) * dart.notNull(l));
        t2$ = this[S._v3storage];
        t3$ = 1;
        t2$[S.$_set](t3$, dart.notNull(t2$[S.$_get](t3$)) * dart.notNull(l));
        t2$0 = this[S._v3storage];
        t3$0 = 2;
        t2$0[S.$_set](t3$0, dart.notNull(t2$0[S.$_get](t3$0)) * dart.notNull(l));
      }
    }
    get length() {
      return math.sqrt(this.length2);
    }
    get length2() {
      let sum = null;
      sum = dart.notNull(this[S._v3storage][S.$_get](0)) * dart.notNull(this[S._v3storage][S.$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[S._v3storage][S.$_get](1)) * dart.notNull(this[S._v3storage][S.$_get](1));
      sum = dart.notNull(sum) + dart.notNull(this[S._v3storage][S.$_get](2)) * dart.notNull(this[S._v3storage][S.$_get](2));
      return sum;
    }
    normalize() {
      let t3, t2, t3$, t2$, t3$0, t2$0;
      let l = this.length;
      if (l === 0.0) {
        return 0.0;
      }
      let d = 1.0 / dart.notNull(l);
      t2 = this[S._v3storage];
      t3 = 0;
      t2[S.$_set](t3, dart.notNull(t2[S.$_get](t3)) * d);
      t2$ = this[S._v3storage];
      t3$ = 1;
      t2$[S.$_set](t3$, dart.notNull(t2$[S.$_get](t3$)) * d);
      t2$0 = this[S._v3storage];
      t3$0 = 2;
      t2$0[S.$_set](t3$0, dart.notNull(t2$0[S.$_get](t3$0)) * d);
      return l;
    }
    normalizeLength() {
      return this.normalize();
    }
    normalized() {
      let t2;
      t2 = vector_math_64.Vector3.copy(this);
      return (() => {
        t2.normalize();
        return t2;
      })();
    }
    normalizeInto(out) {
      let t2;
      if (out == null) dart.nullFailed(I[17], 190, 33, "out");
      t2 = out;
      (() => {
        t2.setFrom(this);
        t2.normalize();
        return t2;
      })();
      return out;
    }
    distanceTo(arg) {
      if (arg == null) dart.nullFailed(I[17], 198, 29, "arg");
      return math.sqrt(this.distanceToSquared(arg));
    }
    distanceToSquared(arg) {
      if (arg == null) dart.nullFailed(I[17], 201, 36, "arg");
      let argStorage = arg[S._v3storage];
      let dx = dart.notNull(this[S._v3storage][S.$_get](0)) - dart.notNull(argStorage[S.$_get](0));
      let dy = dart.notNull(this[S._v3storage][S.$_get](1)) - dart.notNull(argStorage[S.$_get](1));
      let dz = dart.notNull(this[S._v3storage][S.$_get](2)) - dart.notNull(argStorage[S.$_get](2));
      return dx * dx + dy * dy + dz * dz;
    }
    angleTo(other) {
      if (other == null) dart.nullFailed(I[17], 211, 26, "other");
      let otherStorage = other[S._v3storage];
      if (this[S._v3storage][S.$_get](0) == otherStorage[S.$_get](0) && this[S._v3storage][S.$_get](1) == otherStorage[S.$_get](1) && this[S._v3storage][S.$_get](2) == otherStorage[S.$_get](2)) {
        return 0.0;
      }
      let d = dart.notNull(this.dot(other)) / (dart.notNull(this.length) * dart.notNull(other.length));
      return math.acos(d[S.$clamp](-1.0, 1.0));
    }
    angleToSigned(other, normal) {
      if (other == null) dart.nullFailed(I[17], 226, 32, "other");
      if (normal == null) dart.nullFailed(I[17], 226, 47, "normal");
      let angle = this.angleTo(other);
      let c = this.cross(other);
      let d = c.dot(normal);
      return dart.notNull(d) < 0.0 ? -dart.notNull(angle) : angle;
    }
    dot(other) {
      if (other == null) dart.nullFailed(I[17], 235, 22, "other");
      let otherStorage = other[S._v3storage];
      let sum = null;
      sum = dart.notNull(this[S._v3storage][S.$_get](0)) * dart.notNull(otherStorage[S.$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[S._v3storage][S.$_get](1)) * dart.notNull(otherStorage[S.$_get](1));
      sum = dart.notNull(sum) + dart.notNull(this[S._v3storage][S.$_get](2)) * dart.notNull(otherStorage[S.$_get](2));
      return sum;
    }
    postmultiply(arg) {
      if (arg == null) dart.nullFailed(I[17], 248, 29, "arg");
      let argStorage = arg.storage;
      let v0 = this[S._v3storage][S.$_get](0);
      let v1 = this[S._v3storage][S.$_get](1);
      let v2 = this[S._v3storage][S.$_get](2);
      this[S._v3storage][S.$_set](0, dart.notNull(v0) * dart.notNull(argStorage[S.$_get](0)) + dart.notNull(v1) * dart.notNull(argStorage[S.$_get](1)) + dart.notNull(v2) * dart.notNull(argStorage[S.$_get](2)));
      this[S._v3storage][S.$_set](1, dart.notNull(v0) * dart.notNull(argStorage[S.$_get](3)) + dart.notNull(v1) * dart.notNull(argStorage[S.$_get](4)) + dart.notNull(v2) * dart.notNull(argStorage[S.$_get](5)));
      this[S._v3storage][S.$_set](2, dart.notNull(v0) * dart.notNull(argStorage[S.$_get](6)) + dart.notNull(v1) * dart.notNull(argStorage[S.$_get](7)) + dart.notNull(v2) * dart.notNull(argStorage[S.$_get](8)));
    }
    cross(other) {
      if (other == null) dart.nullFailed(I[17], 263, 25, "other");
      let _x = this[S._v3storage][S.$_get](0);
      let _y = this[S._v3storage][S.$_get](1);
      let _z = this[S._v3storage][S.$_get](2);
      let otherStorage = other[S._v3storage];
      let ox = otherStorage[S.$_get](0);
      let oy = otherStorage[S.$_get](1);
      let oz = otherStorage[S.$_get](2);
      return vector_math_64.Vector3.new(dart.notNull(_y) * dart.notNull(oz) - dart.notNull(_z) * dart.notNull(oy), dart.notNull(_z) * dart.notNull(ox) - dart.notNull(_x) * dart.notNull(oz), dart.notNull(_x) * dart.notNull(oy) - dart.notNull(_y) * dart.notNull(ox));
    }
    crossInto(other, out) {
      if (other == null) dart.nullFailed(I[17], 275, 29, "other");
      if (out == null) dart.nullFailed(I[17], 275, 44, "out");
      let x = this[S._v3storage][S.$_get](0);
      let y = this[S._v3storage][S.$_get](1);
      let z = this[S._v3storage][S.$_get](2);
      let otherStorage = other[S._v3storage];
      let ox = otherStorage[S.$_get](0);
      let oy = otherStorage[S.$_get](1);
      let oz = otherStorage[S.$_get](2);
      let outStorage = out[S._v3storage];
      outStorage[S.$_set](0, dart.notNull(y) * dart.notNull(oz) - dart.notNull(z) * dart.notNull(oy));
      outStorage[S.$_set](1, dart.notNull(z) * dart.notNull(ox) - dart.notNull(x) * dart.notNull(oz));
      outStorage[S.$_set](2, dart.notNull(x) * dart.notNull(oy) - dart.notNull(y) * dart.notNull(ox));
      return out;
    }
    reflect(normal) {
      if (normal == null) dart.nullFailed(I[17], 291, 24, "normal");
      this.sub(normal.scaled(2.0 * dart.notNull(normal.dot(this))));
    }
    reflected(normal) {
      let t2;
      if (normal == null) dart.nullFailed(I[17], 296, 29, "normal");
      t2 = this.clone();
      return (() => {
        t2.reflect(normal);
        return t2;
      })();
    }
    applyProjection(arg) {
      if (arg == null) dart.nullFailed(I[17], 299, 32, "arg");
      let argStorage = arg.storage;
      let x = this[S._v3storage][S.$_get](0);
      let y = this[S._v3storage][S.$_get](1);
      let z = this[S._v3storage][S.$_get](2);
      let d = 1.0 / (dart.notNull(argStorage[S.$_get](3)) * dart.notNull(x) + dart.notNull(argStorage[S.$_get](7)) * dart.notNull(y) + dart.notNull(argStorage[S.$_get](11)) * dart.notNull(z) + dart.notNull(argStorage[S.$_get](15)));
      this[S._v3storage][S.$_set](0, (dart.notNull(argStorage[S.$_get](0)) * dart.notNull(x) + dart.notNull(argStorage[S.$_get](4)) * dart.notNull(y) + dart.notNull(argStorage[S.$_get](8)) * dart.notNull(z) + dart.notNull(argStorage[S.$_get](12))) * d);
      this[S._v3storage][S.$_set](1, (dart.notNull(argStorage[S.$_get](1)) * dart.notNull(x) + dart.notNull(argStorage[S.$_get](5)) * dart.notNull(y) + dart.notNull(argStorage[S.$_get](9)) * dart.notNull(z) + dart.notNull(argStorage[S.$_get](13))) * d);
      this[S._v3storage][S.$_set](2, (dart.notNull(argStorage[S.$_get](2)) * dart.notNull(x) + dart.notNull(argStorage[S.$_get](6)) * dart.notNull(y) + dart.notNull(argStorage[S.$_get](10)) * dart.notNull(z) + dart.notNull(argStorage[S.$_get](14))) * d);
    }
    applyAxisAngle(axis, angle) {
      if (axis == null) dart.nullFailed(I[17], 327, 31, "axis");
      if (angle == null) dart.nullFailed(I[17], 327, 44, "angle");
      this.applyQuaternion(vector_math_64.Quaternion.axisAngle(axis, angle));
    }
    applyQuaternion(arg) {
      if (arg == null) dart.nullFailed(I[17], 332, 35, "arg");
      let argStorage = arg[S._qStorage];
      let v0 = this[S._v3storage][S.$_get](0);
      let v1 = this[S._v3storage][S.$_get](1);
      let v2 = this[S._v3storage][S.$_get](2);
      let qx = argStorage[S.$_get](0);
      let qy = argStorage[S.$_get](1);
      let qz = argStorage[S.$_get](2);
      let qw = argStorage[S.$_get](3);
      let ix = dart.notNull(qw) * dart.notNull(v0) + dart.notNull(qy) * dart.notNull(v2) - dart.notNull(qz) * dart.notNull(v1);
      let iy = dart.notNull(qw) * dart.notNull(v1) + dart.notNull(qz) * dart.notNull(v0) - dart.notNull(qx) * dart.notNull(v2);
      let iz = dart.notNull(qw) * dart.notNull(v2) + dart.notNull(qx) * dart.notNull(v1) - dart.notNull(qy) * dart.notNull(v0);
      let iw = -dart.notNull(qx) * dart.notNull(v0) - dart.notNull(qy) * dart.notNull(v1) - dart.notNull(qz) * dart.notNull(v2);
      this[S._v3storage][S.$_set](0, ix * dart.notNull(qw) + iw * -dart.notNull(qx) + iy * -dart.notNull(qz) - iz * -dart.notNull(qy));
      this[S._v3storage][S.$_set](1, iy * dart.notNull(qw) + iw * -dart.notNull(qy) + iz * -dart.notNull(qx) - ix * -dart.notNull(qz));
      this[S._v3storage][S.$_set](2, iz * dart.notNull(qw) + iw * -dart.notNull(qz) + ix * -dart.notNull(qy) - iy * -dart.notNull(qx));
    }
    applyMatrix3(arg) {
      if (arg == null) dart.nullFailed(I[17], 351, 29, "arg");
      let argStorage = arg.storage;
      let v0 = this[S._v3storage][S.$_get](0);
      let v1 = this[S._v3storage][S.$_get](1);
      let v2 = this[S._v3storage][S.$_get](2);
      this[S._v3storage][S.$_set](0, dart.notNull(argStorage[S.$_get](0)) * dart.notNull(v0) + dart.notNull(argStorage[S.$_get](3)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](6)) * dart.notNull(v2));
      this[S._v3storage][S.$_set](1, dart.notNull(argStorage[S.$_get](1)) * dart.notNull(v0) + dart.notNull(argStorage[S.$_get](4)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](7)) * dart.notNull(v2));
      this[S._v3storage][S.$_set](2, dart.notNull(argStorage[S.$_get](2)) * dart.notNull(v0) + dart.notNull(argStorage[S.$_get](5)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](8)) * dart.notNull(v2));
    }
    applyMatrix4(arg) {
      if (arg == null) dart.nullFailed(I[17], 366, 29, "arg");
      let argStorage = arg.storage;
      let v0 = this[S._v3storage][S.$_get](0);
      let v1 = this[S._v3storage][S.$_get](1);
      let v2 = this[S._v3storage][S.$_get](2);
      this[S._v3storage][S.$_set](0, dart.notNull(argStorage[S.$_get](0)) * dart.notNull(v0) + dart.notNull(argStorage[S.$_get](4)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](8)) * dart.notNull(v2) + dart.notNull(argStorage[S.$_get](12)));
      this[S._v3storage][S.$_set](1, dart.notNull(argStorage[S.$_get](1)) * dart.notNull(v0) + dart.notNull(argStorage[S.$_get](5)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](9)) * dart.notNull(v2) + dart.notNull(argStorage[S.$_get](13)));
      this[S._v3storage][S.$_set](2, dart.notNull(argStorage[S.$_get](2)) * dart.notNull(v0) + dart.notNull(argStorage[S.$_get](6)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](10)) * dart.notNull(v2) + dart.notNull(argStorage[S.$_get](14)));
    }
    relativeError(correct) {
      if (correct == null) dart.nullFailed(I[17], 386, 32, "correct");
      let correct_norm = correct.length;
      let diff_norm = this['-'](correct).length;
      return dart.notNull(diff_norm) / dart.notNull(correct_norm);
    }
    absoluteError(correct) {
      if (correct == null) dart.nullFailed(I[17], 393, 32, "correct");
      return this['-'](correct).length;
    }
    get isInfinite() {
      let is_infinite = false;
      is_infinite = is_infinite || this[S._v3storage][S.$_get](0)[S.$isInfinite];
      is_infinite = is_infinite || this[S._v3storage][S.$_get](1)[S.$isInfinite];
      is_infinite = is_infinite || this[S._v3storage][S.$_get](2)[S.$isInfinite];
      return is_infinite;
    }
    get isNaN() {
      let isNan = false;
      isNan = isNan || this[S._v3storage][S.$_get](0)[S.$isNaN];
      isNan = isNan || this[S._v3storage][S.$_get](1)[S.$isNaN];
      isNan = isNan || this[S._v3storage][S.$_get](2)[S.$isNaN];
      return isNan;
    }
    add(arg) {
      if (arg == null) dart.nullFailed(I[17], 414, 20, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](0, dart.notNull(this[S._v3storage][S.$_get](0)) + dart.notNull(argStorage[S.$_get](0)));
      this[S._v3storage][S.$_set](1, dart.notNull(this[S._v3storage][S.$_get](1)) + dart.notNull(argStorage[S.$_get](1)));
      this[S._v3storage][S.$_set](2, dart.notNull(this[S._v3storage][S.$_get](2)) + dart.notNull(argStorage[S.$_get](2)));
    }
    addScaled(arg, factor) {
      if (arg == null) dart.nullFailed(I[17], 422, 26, "arg");
      if (factor == null) dart.nullFailed(I[17], 422, 38, "factor");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](0, dart.notNull(this[S._v3storage][S.$_get](0)) + dart.notNull(argStorage[S.$_get](0)) * dart.notNull(factor));
      this[S._v3storage][S.$_set](1, dart.notNull(this[S._v3storage][S.$_get](1)) + dart.notNull(argStorage[S.$_get](1)) * dart.notNull(factor));
      this[S._v3storage][S.$_set](2, dart.notNull(this[S._v3storage][S.$_get](2)) + dart.notNull(argStorage[S.$_get](2)) * dart.notNull(factor));
    }
    sub(arg) {
      if (arg == null) dart.nullFailed(I[17], 430, 20, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](0, dart.notNull(this[S._v3storage][S.$_get](0)) - dart.notNull(argStorage[S.$_get](0)));
      this[S._v3storage][S.$_set](1, dart.notNull(this[S._v3storage][S.$_get](1)) - dart.notNull(argStorage[S.$_get](1)));
      this[S._v3storage][S.$_set](2, dart.notNull(this[S._v3storage][S.$_get](2)) - dart.notNull(argStorage[S.$_get](2)));
    }
    multiply(arg) {
      if (arg == null) dart.nullFailed(I[17], 438, 25, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](0, dart.notNull(this[S._v3storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)));
      this[S._v3storage][S.$_set](1, dart.notNull(this[S._v3storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](1)));
      this[S._v3storage][S.$_set](2, dart.notNull(this[S._v3storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](2)));
    }
    divide(arg) {
      if (arg == null) dart.nullFailed(I[17], 446, 23, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](0, dart.notNull(this[S._v3storage][S.$_get](0)) / dart.notNull(argStorage[S.$_get](0)));
      this[S._v3storage][S.$_set](1, dart.notNull(this[S._v3storage][S.$_get](1)) / dart.notNull(argStorage[S.$_get](1)));
      this[S._v3storage][S.$_set](2, dart.notNull(this[S._v3storage][S.$_get](2)) / dart.notNull(argStorage[S.$_get](2)));
    }
    scale(arg) {
      if (arg == null) dart.nullFailed(I[17], 454, 21, "arg");
      this[S._v3storage][S.$_set](2, dart.notNull(this[S._v3storage][S.$_get](2)) * dart.notNull(arg));
      this[S._v3storage][S.$_set](1, dart.notNull(this[S._v3storage][S.$_get](1)) * dart.notNull(arg));
      this[S._v3storage][S.$_set](0, dart.notNull(this[S._v3storage][S.$_get](0)) * dart.notNull(arg));
    }
    scaled(arg) {
      let t2;
      if (arg == null) dart.nullFailed(I[17], 461, 25, "arg");
      t2 = this.clone();
      return (() => {
        t2.scale(arg);
        return t2;
      })();
    }
    negate() {
      this[S._v3storage][S.$_set](2, -dart.notNull(this[S._v3storage][S.$_get](2)));
      this[S._v3storage][S.$_set](1, -dart.notNull(this[S._v3storage][S.$_get](1)));
      this[S._v3storage][S.$_set](0, -dart.notNull(this[S._v3storage][S.$_get](0)));
    }
    absolute() {
      this[S._v3storage][S.$_set](0, this[S._v3storage][S.$_get](0)[S.$abs]());
      this[S._v3storage][S.$_set](1, this[S._v3storage][S.$_get](1)[S.$abs]());
      this[S._v3storage][S.$_set](2, this[S._v3storage][S.$_get](2)[S.$abs]());
    }
    clamp(min, max) {
      if (min == null) dart.nullFailed(I[17], 478, 22, "min");
      if (max == null) dart.nullFailed(I[17], 478, 35, "max");
      let minStorage = min.storage;
      let maxStorage = max.storage;
      this[S._v3storage][S.$_set](0, this[S._v3storage][S.$_get](0)[S.$clamp](minStorage[S.$_get](0), maxStorage[S.$_get](0))[S.$toDouble]());
      this[S._v3storage][S.$_set](1, this[S._v3storage][S.$_get](1)[S.$clamp](minStorage[S.$_get](1), maxStorage[S.$_get](1))[S.$toDouble]());
      this[S._v3storage][S.$_set](2, this[S._v3storage][S.$_get](2)[S.$clamp](minStorage[S.$_get](2), maxStorage[S.$_get](2))[S.$toDouble]());
    }
    clampScalar(min, max) {
      if (min == null) dart.nullFailed(I[17], 490, 27, "min");
      if (max == null) dart.nullFailed(I[17], 490, 39, "max");
      this[S._v3storage][S.$_set](0, this[S._v3storage][S.$_get](0)[S.$clamp](min, max)[S.$toDouble]());
      this[S._v3storage][S.$_set](1, this[S._v3storage][S.$_get](1)[S.$clamp](min, max)[S.$toDouble]());
      this[S._v3storage][S.$_set](2, this[S._v3storage][S.$_get](2)[S.$clamp](min, max)[S.$toDouble]());
    }
    floor() {
      this[S._v3storage][S.$_set](0, this[S._v3storage][S.$_get](0)[S.$floorToDouble]());
      this[S._v3storage][S.$_set](1, this[S._v3storage][S.$_get](1)[S.$floorToDouble]());
      this[S._v3storage][S.$_set](2, this[S._v3storage][S.$_get](2)[S.$floorToDouble]());
    }
    ceil() {
      this[S._v3storage][S.$_set](0, this[S._v3storage][S.$_get](0)[S.$ceilToDouble]());
      this[S._v3storage][S.$_set](1, this[S._v3storage][S.$_get](1)[S.$ceilToDouble]());
      this[S._v3storage][S.$_set](2, this[S._v3storage][S.$_get](2)[S.$ceilToDouble]());
    }
    round() {
      this[S._v3storage][S.$_set](0, this[S._v3storage][S.$_get](0)[S.$roundToDouble]());
      this[S._v3storage][S.$_set](1, this[S._v3storage][S.$_get](1)[S.$roundToDouble]());
      this[S._v3storage][S.$_set](2, this[S._v3storage][S.$_get](2)[S.$roundToDouble]());
    }
    roundToZero() {
      this[S._v3storage][S.$_set](0, dart.notNull(this[S._v3storage][S.$_get](0)) < 0.0 ? this[S._v3storage][S.$_get](0)[S.$ceilToDouble]() : this[S._v3storage][S.$_get](0)[S.$floorToDouble]());
      this[S._v3storage][S.$_set](1, dart.notNull(this[S._v3storage][S.$_get](1)) < 0.0 ? this[S._v3storage][S.$_get](1)[S.$ceilToDouble]() : this[S._v3storage][S.$_get](1)[S.$floorToDouble]());
      this[S._v3storage][S.$_set](2, dart.notNull(this[S._v3storage][S.$_get](2)) < 0.0 ? this[S._v3storage][S.$_get](2)[S.$ceilToDouble]() : this[S._v3storage][S.$_get](2)[S.$floorToDouble]());
    }
    clone() {
      return vector_math_64.Vector3.copy(this);
    }
    copyInto(arg) {
      if (arg == null) dart.nullFailed(I[17], 534, 28, "arg");
      let argStorage = arg[S._v3storage];
      argStorage[S.$_set](0, this[S._v3storage][S.$_get](0));
      argStorage[S.$_set](1, this[S._v3storage][S.$_get](1));
      argStorage[S.$_set](2, this[S._v3storage][S.$_get](2));
      return arg;
    }
    copyIntoArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[17], 543, 35, "array");
      if (offset == null) dart.nullFailed(I[17], 543, 47, "offset");
      array[S.$_set](dart.notNull(offset) + 2, this[S._v3storage][S.$_get](2));
      array[S.$_set](dart.notNull(offset) + 1, this[S._v3storage][S.$_get](1));
      array[S.$_set](dart.notNull(offset) + 0, this[S._v3storage][S.$_get](0));
    }
    copyFromArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[17], 550, 35, "array");
      if (offset == null) dart.nullFailed(I[17], 550, 47, "offset");
      this[S._v3storage][S.$_set](2, array[S.$_get](dart.notNull(offset) + 2));
      this[S._v3storage][S.$_set](1, array[S.$_get](dart.notNull(offset) + 1));
      this[S._v3storage][S.$_set](0, array[S.$_get](dart.notNull(offset) + 0));
    }
    set xy(arg) {
      if (arg == null) dart.nullFailed(I[17], 556, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](1));
    }
    set xz(arg) {
      if (arg == null) dart.nullFailed(I[17], 562, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](1));
    }
    set yx(arg) {
      if (arg == null) dart.nullFailed(I[17], 568, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](1));
    }
    set yz(arg) {
      if (arg == null) dart.nullFailed(I[17], 574, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](1));
    }
    set zx(arg) {
      if (arg == null) dart.nullFailed(I[17], 580, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](1));
    }
    set zy(arg) {
      if (arg == null) dart.nullFailed(I[17], 586, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](1));
    }
    set xyz(arg) {
      if (arg == null) dart.nullFailed(I[17], 592, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set xzy(arg) {
      if (arg == null) dart.nullFailed(I[17], 599, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set yxz(arg) {
      if (arg == null) dart.nullFailed(I[17], 606, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set yzx(arg) {
      if (arg == null) dart.nullFailed(I[17], 613, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set zxy(arg) {
      if (arg == null) dart.nullFailed(I[17], 620, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set zyx(arg) {
      if (arg == null) dart.nullFailed(I[17], 627, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v3storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v3storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v3storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set r(arg) {
      if (arg == null) dart.nullFailed(I[17], 634, 16, "arg");
      return this.x = arg;
    }
    set g(arg) {
      if (arg == null) dart.nullFailed(I[17], 635, 16, "arg");
      return this.y = arg;
    }
    set b(arg) {
      if (arg == null) dart.nullFailed(I[17], 636, 16, "arg");
      return this.z = arg;
    }
    set s(arg) {
      if (arg == null) dart.nullFailed(I[17], 637, 16, "arg");
      return this.x = arg;
    }
    set t(arg) {
      if (arg == null) dart.nullFailed(I[17], 638, 16, "arg");
      return this.y = arg;
    }
    set p(arg) {
      if (arg == null) dart.nullFailed(I[17], 639, 16, "arg");
      return this.z = arg;
    }
    set x(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[17], 640, 16, "arg");
      t2 = this[S._v3storage];
      t3 = 0;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set y(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[17], 641, 16, "arg");
      t2 = this[S._v3storage];
      t3 = 1;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set z(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[17], 642, 16, "arg");
      t2 = this[S._v3storage];
      t3 = 2;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set rg(arg) {
      if (arg == null) dart.nullFailed(I[17], 643, 18, "arg");
      return this.xy = arg;
    }
    set rb(arg) {
      if (arg == null) dart.nullFailed(I[17], 644, 18, "arg");
      return this.xz = arg;
    }
    set gr(arg) {
      if (arg == null) dart.nullFailed(I[17], 645, 18, "arg");
      return this.yx = arg;
    }
    set gb(arg) {
      if (arg == null) dart.nullFailed(I[17], 646, 18, "arg");
      return this.yz = arg;
    }
    set br(arg) {
      if (arg == null) dart.nullFailed(I[17], 647, 18, "arg");
      return this.zx = arg;
    }
    set bg(arg) {
      if (arg == null) dart.nullFailed(I[17], 648, 18, "arg");
      return this.zy = arg;
    }
    set rgb(arg) {
      if (arg == null) dart.nullFailed(I[17], 649, 19, "arg");
      return this.xyz = arg;
    }
    set rbg(arg) {
      if (arg == null) dart.nullFailed(I[17], 650, 19, "arg");
      return this.xzy = arg;
    }
    set grb(arg) {
      if (arg == null) dart.nullFailed(I[17], 651, 19, "arg");
      return this.yxz = arg;
    }
    set gbr(arg) {
      if (arg == null) dart.nullFailed(I[17], 652, 19, "arg");
      return this.yzx = arg;
    }
    set brg(arg) {
      if (arg == null) dart.nullFailed(I[17], 653, 19, "arg");
      return this.zxy = arg;
    }
    set bgr(arg) {
      if (arg == null) dart.nullFailed(I[17], 654, 19, "arg");
      return this.zyx = arg;
    }
    set st(arg) {
      if (arg == null) dart.nullFailed(I[17], 655, 18, "arg");
      return this.xy = arg;
    }
    set sp(arg) {
      if (arg == null) dart.nullFailed(I[17], 656, 18, "arg");
      return this.xz = arg;
    }
    set ts(arg) {
      if (arg == null) dart.nullFailed(I[17], 657, 18, "arg");
      return this.yx = arg;
    }
    set tp(arg) {
      if (arg == null) dart.nullFailed(I[17], 658, 18, "arg");
      return this.yz = arg;
    }
    set ps(arg) {
      if (arg == null) dart.nullFailed(I[17], 659, 18, "arg");
      return this.zx = arg;
    }
    set pt(arg) {
      if (arg == null) dart.nullFailed(I[17], 660, 18, "arg");
      return this.zy = arg;
    }
    set stp(arg) {
      if (arg == null) dart.nullFailed(I[17], 661, 19, "arg");
      return this.xyz = arg;
    }
    set spt(arg) {
      if (arg == null) dart.nullFailed(I[17], 662, 19, "arg");
      return this.xzy = arg;
    }
    set tsp(arg) {
      if (arg == null) dart.nullFailed(I[17], 663, 19, "arg");
      return this.yxz = arg;
    }
    set tps(arg) {
      if (arg == null) dart.nullFailed(I[17], 664, 19, "arg");
      return this.yzx = arg;
    }
    set pst(arg) {
      if (arg == null) dart.nullFailed(I[17], 665, 19, "arg");
      return this.zxy = arg;
    }
    set pts(arg) {
      if (arg == null) dart.nullFailed(I[17], 666, 19, "arg");
      return this.zyx = arg;
    }
    get xx() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get xy() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get xz() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get yx() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get yy() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get yz() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get zx() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get zy() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get zz() {
      return vector_math_64.Vector2.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get xxx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get xxy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get xxz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get xyx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get xyy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get xyz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get xzx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get xzy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get xzz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get yxx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get yxy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get yxz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get yyx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get yyy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get yyz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get yzx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get yzy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get yzz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get zxx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get zxy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get zxz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get zyx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get zyy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get zyz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get zzx() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get zzy() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get zzz() {
      return vector_math_64.Vector3.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get xxxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get xxxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get xxxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get xxyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get xxyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get xxyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get xxzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get xxzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get xxzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get xyxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get xyxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get xyxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get xyyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get xyyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get xyyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get xyzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get xyzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get xyzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get xzxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get xzxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get xzxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get xzyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get xzyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get xzyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get xzzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get xzzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get xzzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get yxxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get yxxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get yxxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get yxyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get yxyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get yxyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get yxzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get yxzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get yxzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get yyxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get yyxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get yyxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get yyyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get yyyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get yyyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get yyzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get yyzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get yyzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get yzxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get yzxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get yzxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get yzyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get yzyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get yzyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get yzzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get yzzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get yzzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get zxxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get zxxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get zxxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get zxyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get zxyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get zxyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get zxzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get zxzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get zxzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get zyxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get zyxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get zyxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get zyyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get zyyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get zyyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get zyzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get zyzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get zyzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get zzxx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](0));
    }
    get zzxy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](1));
    }
    get zzxz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0), this[S._v3storage][S.$_get](2));
    }
    get zzyx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](0));
    }
    get zzyy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](1));
    }
    get zzyz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1), this[S._v3storage][S.$_get](2));
    }
    get zzzx() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](0));
    }
    get zzzy() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](1));
    }
    get zzzz() {
      return vector_math_64.Vector4.new(this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2), this[S._v3storage][S.$_get](2));
    }
    get r() {
      return this.x;
    }
    get g() {
      return this.y;
    }
    get b() {
      return this.z;
    }
    get s() {
      return this.x;
    }
    get t() {
      return this.y;
    }
    get p() {
      return this.z;
    }
    get x() {
      return this[S._v3storage][S.$_get](0);
    }
    get y() {
      return this[S._v3storage][S.$_get](1);
    }
    get z() {
      return this[S._v3storage][S.$_get](2);
    }
    get rr() {
      return this.xx;
    }
    get rg() {
      return this.xy;
    }
    get rb() {
      return this.xz;
    }
    get gr() {
      return this.yx;
    }
    get gg() {
      return this.yy;
    }
    get gb() {
      return this.yz;
    }
    get br() {
      return this.zx;
    }
    get bg() {
      return this.zy;
    }
    get bb() {
      return this.zz;
    }
    get rrr() {
      return this.xxx;
    }
    get rrg() {
      return this.xxy;
    }
    get rrb() {
      return this.xxz;
    }
    get rgr() {
      return this.xzx;
    }
    get rgg() {
      return this.xyy;
    }
    get rgb() {
      return this.xyz;
    }
    get rbr() {
      return this.xzx;
    }
    get rbg() {
      return this.xzy;
    }
    get rbb() {
      return this.xzz;
    }
    get grr() {
      return this.yxx;
    }
    get grg() {
      return this.yxy;
    }
    get grb() {
      return this.yxz;
    }
    get ggr() {
      return this.yyx;
    }
    get ggg() {
      return this.yyy;
    }
    get ggb() {
      return this.yyz;
    }
    get gbr() {
      return this.yxz;
    }
    get gbg() {
      return this.yzy;
    }
    get gbb() {
      return this.yzz;
    }
    get brr() {
      return this.zxx;
    }
    get brg() {
      return this.zxy;
    }
    get brb() {
      return this.zxz;
    }
    get bgr() {
      return this.zyx;
    }
    get bgg() {
      return this.zyy;
    }
    get bgb() {
      return this.zyz;
    }
    get bbr() {
      return this.zzx;
    }
    get bbg() {
      return this.zzy;
    }
    get bbb() {
      return this.zzz;
    }
    get rrrr() {
      return this.xxxx;
    }
    get rrrg() {
      return this.xxxy;
    }
    get rrrb() {
      return this.xxxz;
    }
    get rrgr() {
      return this.xxyx;
    }
    get rrgg() {
      return this.xxyy;
    }
    get rrgb() {
      return this.xxyz;
    }
    get rrbr() {
      return this.xxzx;
    }
    get rrbg() {
      return this.xxzy;
    }
    get rrbb() {
      return this.xxzz;
    }
    get rgrr() {
      return this.xyxx;
    }
    get rgrg() {
      return this.xyxy;
    }
    get rgrb() {
      return this.xyxz;
    }
    get rggr() {
      return this.xyyx;
    }
    get rggg() {
      return this.xyyy;
    }
    get rggb() {
      return this.xyyz;
    }
    get rgbr() {
      return this.xyzx;
    }
    get rgbg() {
      return this.xyzy;
    }
    get rgbb() {
      return this.xyzz;
    }
    get rbrr() {
      return this.xzxx;
    }
    get rbrg() {
      return this.xzxy;
    }
    get rbrb() {
      return this.xzxz;
    }
    get rbgr() {
      return this.xzyx;
    }
    get rbgg() {
      return this.xzyy;
    }
    get rbgb() {
      return this.xzyz;
    }
    get rbbr() {
      return this.xzzx;
    }
    get rbbg() {
      return this.xzzy;
    }
    get rbbb() {
      return this.xzzz;
    }
    get grrr() {
      return this.yxxx;
    }
    get grrg() {
      return this.yxxy;
    }
    get grrb() {
      return this.yxxz;
    }
    get grgr() {
      return this.yxyx;
    }
    get grgg() {
      return this.yxyy;
    }
    get grgb() {
      return this.yxyz;
    }
    get grbr() {
      return this.yxzx;
    }
    get grbg() {
      return this.yxzy;
    }
    get grbb() {
      return this.yxzz;
    }
    get ggrr() {
      return this.yyxx;
    }
    get ggrg() {
      return this.yyxy;
    }
    get ggrb() {
      return this.yyxz;
    }
    get gggr() {
      return this.yyyx;
    }
    get gggg() {
      return this.yyyy;
    }
    get gggb() {
      return this.yyyz;
    }
    get ggbr() {
      return this.yyzx;
    }
    get ggbg() {
      return this.yyzy;
    }
    get ggbb() {
      return this.yyzz;
    }
    get gbrr() {
      return this.yzxx;
    }
    get gbrg() {
      return this.yzxy;
    }
    get gbrb() {
      return this.yzxz;
    }
    get gbgr() {
      return this.yzyx;
    }
    get gbgg() {
      return this.yzyy;
    }
    get gbgb() {
      return this.yzyz;
    }
    get gbbr() {
      return this.yzzx;
    }
    get gbbg() {
      return this.yzzy;
    }
    get gbbb() {
      return this.yzzz;
    }
    get brrr() {
      return this.zxxx;
    }
    get brrg() {
      return this.zxxy;
    }
    get brrb() {
      return this.zxxz;
    }
    get brgr() {
      return this.zxyx;
    }
    get brgg() {
      return this.zxyy;
    }
    get brgb() {
      return this.zxyz;
    }
    get brbr() {
      return this.zxzx;
    }
    get brbg() {
      return this.zxzy;
    }
    get brbb() {
      return this.zxzz;
    }
    get bgrr() {
      return this.zyxx;
    }
    get bgrg() {
      return this.zyxy;
    }
    get bgrb() {
      return this.zyxz;
    }
    get bggr() {
      return this.zyyx;
    }
    get bggg() {
      return this.zyyy;
    }
    get bggb() {
      return this.zyyz;
    }
    get bgbr() {
      return this.zyzx;
    }
    get bgbg() {
      return this.zyzy;
    }
    get bgbb() {
      return this.zyzz;
    }
    get bbrr() {
      return this.zzxx;
    }
    get bbrg() {
      return this.zzxy;
    }
    get bbrb() {
      return this.zzxz;
    }
    get bbgr() {
      return this.zzyx;
    }
    get bbgg() {
      return this.zzyy;
    }
    get bbgb() {
      return this.zzyz;
    }
    get bbbr() {
      return this.zzzx;
    }
    get bbbg() {
      return this.zzzy;
    }
    get bbbb() {
      return this.zzzz;
    }
    get ss() {
      return this.xx;
    }
    get st() {
      return this.xy;
    }
    get sp() {
      return this.xz;
    }
    get ts() {
      return this.yx;
    }
    get tt() {
      return this.yy;
    }
    get tp() {
      return this.yz;
    }
    get ps() {
      return this.zx;
    }
    get pt() {
      return this.zy;
    }
    get pp() {
      return this.zz;
    }
    get sss() {
      return this.xxx;
    }
    get sst() {
      return this.xxy;
    }
    get ssp() {
      return this.xxz;
    }
    get sts() {
      return this.xyx;
    }
    get stt() {
      return this.xyy;
    }
    get stp() {
      return this.xyz;
    }
    get sps() {
      return this.xzx;
    }
    get spt() {
      return this.xzy;
    }
    get spp() {
      return this.xzz;
    }
    get tss() {
      return this.yxx;
    }
    get tst() {
      return this.yxy;
    }
    get tsp() {
      return this.yxz;
    }
    get tts() {
      return this.yyx;
    }
    get ttt() {
      return this.yyy;
    }
    get ttp() {
      return this.yyz;
    }
    get tps() {
      return this.yzx;
    }
    get tpt() {
      return this.yzy;
    }
    get tpp() {
      return this.yzz;
    }
    get pss() {
      return this.zxx;
    }
    get pst() {
      return this.zxy;
    }
    get psp() {
      return this.zxz;
    }
    get pts() {
      return this.zyx;
    }
    get ptt() {
      return this.zyy;
    }
    get ptp() {
      return this.zyz;
    }
    get pps() {
      return this.zzx;
    }
    get ppt() {
      return this.zzy;
    }
    get ppp() {
      return this.zzz;
    }
    get ssss() {
      return this.xxxx;
    }
    get ssst() {
      return this.xxxy;
    }
    get sssp() {
      return this.xxxz;
    }
    get ssts() {
      return this.xxyx;
    }
    get sstt() {
      return this.xxyy;
    }
    get sstp() {
      return this.xxyz;
    }
    get ssps() {
      return this.xxzx;
    }
    get sspt() {
      return this.xxzy;
    }
    get sspp() {
      return this.xxzz;
    }
    get stss() {
      return this.xyxx;
    }
    get stst() {
      return this.xyxy;
    }
    get stsp() {
      return this.xyxz;
    }
    get stts() {
      return this.xyyx;
    }
    get sttt() {
      return this.xyyy;
    }
    get sttp() {
      return this.xyyz;
    }
    get stps() {
      return this.xyzx;
    }
    get stpt() {
      return this.xyzy;
    }
    get stpp() {
      return this.xyzz;
    }
    get spss() {
      return this.xzxx;
    }
    get spst() {
      return this.xzxy;
    }
    get spsp() {
      return this.xzxz;
    }
    get spts() {
      return this.xzyx;
    }
    get sptt() {
      return this.xzyy;
    }
    get sptp() {
      return this.xzyz;
    }
    get spps() {
      return this.xzzx;
    }
    get sppt() {
      return this.xzzy;
    }
    get sppp() {
      return this.xzzz;
    }
    get tsss() {
      return this.yxxx;
    }
    get tsst() {
      return this.yxxy;
    }
    get tssp() {
      return this.yxxz;
    }
    get tsts() {
      return this.yxyx;
    }
    get tstt() {
      return this.yxyy;
    }
    get tstp() {
      return this.yxyz;
    }
    get tsps() {
      return this.yxzx;
    }
    get tspt() {
      return this.yxzy;
    }
    get tspp() {
      return this.yxzz;
    }
    get ttss() {
      return this.yyxx;
    }
    get ttst() {
      return this.yyxy;
    }
    get ttsp() {
      return this.yyxz;
    }
    get ttts() {
      return this.yyyx;
    }
    get tttt() {
      return this.yyyy;
    }
    get tttp() {
      return this.yyyz;
    }
    get ttps() {
      return this.yyzx;
    }
    get ttpt() {
      return this.yyzy;
    }
    get ttpp() {
      return this.yyzz;
    }
    get tpss() {
      return this.yzxx;
    }
    get tpst() {
      return this.yzxy;
    }
    get tpsp() {
      return this.yzxz;
    }
    get tpts() {
      return this.yzyx;
    }
    get tptt() {
      return this.yzyy;
    }
    get tptp() {
      return this.yzyz;
    }
    get tpps() {
      return this.yzzx;
    }
    get tppt() {
      return this.yzzy;
    }
    get tppp() {
      return this.yzzz;
    }
    get psss() {
      return this.zxxx;
    }
    get psst() {
      return this.zxxy;
    }
    get pssp() {
      return this.zxxz;
    }
    get psts() {
      return this.zxyx;
    }
    get pstt() {
      return this.zxyy;
    }
    get pstp() {
      return this.zxyz;
    }
    get psps() {
      return this.zxzx;
    }
    get pspt() {
      return this.zxzy;
    }
    get pspp() {
      return this.zxzz;
    }
    get ptss() {
      return this.zyxx;
    }
    get ptst() {
      return this.zyxy;
    }
    get ptsp() {
      return this.zyxz;
    }
    get ptts() {
      return this.zyyx;
    }
    get pttt() {
      return this.zyyy;
    }
    get pttp() {
      return this.zyyz;
    }
    get ptps() {
      return this.zyzx;
    }
    get ptpt() {
      return this.zyzy;
    }
    get ptpp() {
      return this.zyzz;
    }
    get ppss() {
      return this.zzxx;
    }
    get ppst() {
      return this.zzxy;
    }
    get ppsp() {
      return this.zzxz;
    }
    get ppts() {
      return this.zzyx;
    }
    get pptt() {
      return this.zzyy;
    }
    get pptp() {
      return this.zzyz;
    }
    get ppps() {
      return this.zzzx;
    }
    get pppt() {
      return this.zzzy;
    }
    get pppp() {
      return this.zzzz;
    }
  };
  (vector_math_64.Vector3.zero = function() {
    this[S._v3storage] = _native_typed_data.NativeFloat64List.new(3);
    ;
  }).prototype = vector_math_64.Vector3.prototype;
  (vector_math_64.Vector3.fromFloat64List = function(_v3storage) {
    if (_v3storage == null) dart.nullFailed(I[17], 58, 32, "_v3storage");
    this[S._v3storage] = _v3storage;
    ;
  }).prototype = vector_math_64.Vector3.prototype;
  (vector_math_64.Vector3.fromBuffer = function(buffer, offset) {
    if (buffer == null) dart.nullFailed(I[17], 62, 33, "buffer");
    if (offset == null) dart.nullFailed(I[17], 62, 45, "offset");
    this[S._v3storage] = typed_data.Float64List.view(buffer, offset, 3);
    ;
  }).prototype = vector_math_64.Vector3.prototype;
  dart.addTypeTests(vector_math_64.Vector3);
  dart.addTypeCaches(vector_math_64.Vector3);
  vector_math_64.Vector3[dart.implements] = () => [vector_math_64.Vector];
  dart.setMethodSignature(vector_math_64.Vector3, () => ({
    __proto__: dart.getMethods(vector_math_64.Vector3.__proto__),
    setValues: dart.fnType(dart.void, [core.double, core.double, core.double]),
    setZero: dart.fnType(dart.void, []),
    setFrom: dart.fnType(dart.void, [vector_math_64.Vector3]),
    splat: dart.fnType(dart.void, [core.double]),
    _equals: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    [S.$_equals]: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    _negate: dart.fnType(vector_math_64.Vector3, []),
    '-': dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    '+': dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    '/': dart.fnType(vector_math_64.Vector3, [core.double]),
    '*': dart.fnType(vector_math_64.Vector3, [core.double]),
    _get: dart.fnType(core.double, [core.int]),
    _set: dart.fnType(dart.void, [core.int, core.double]),
    normalize: dart.fnType(core.double, []),
    normalizeLength: dart.fnType(core.double, []),
    normalized: dart.fnType(vector_math_64.Vector3, []),
    normalizeInto: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    distanceTo: dart.fnType(core.double, [vector_math_64.Vector3]),
    distanceToSquared: dart.fnType(core.double, [vector_math_64.Vector3]),
    angleTo: dart.fnType(core.double, [vector_math_64.Vector3]),
    angleToSigned: dart.fnType(core.double, [vector_math_64.Vector3, vector_math_64.Vector3]),
    dot: dart.fnType(core.double, [vector_math_64.Vector3]),
    postmultiply: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    cross: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    crossInto: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3, vector_math_64.Vector3]),
    reflect: dart.fnType(dart.void, [vector_math_64.Vector3]),
    reflected: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    applyProjection: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    applyAxisAngle: dart.fnType(dart.void, [vector_math_64.Vector3, core.double]),
    applyQuaternion: dart.fnType(dart.void, [vector_math_64.Quaternion]),
    applyMatrix3: dart.fnType(dart.void, [vector_math_64.Matrix3]),
    applyMatrix4: dart.fnType(dart.void, [vector_math_64.Matrix4]),
    relativeError: dart.fnType(core.double, [vector_math_64.Vector3]),
    absoluteError: dart.fnType(core.double, [vector_math_64.Vector3]),
    add: dart.fnType(dart.void, [vector_math_64.Vector3]),
    addScaled: dart.fnType(dart.void, [vector_math_64.Vector3, core.double]),
    sub: dart.fnType(dart.void, [vector_math_64.Vector3]),
    multiply: dart.fnType(dart.void, [vector_math_64.Vector3]),
    divide: dart.fnType(dart.void, [vector_math_64.Vector3]),
    scale: dart.fnType(dart.void, [core.double]),
    scaled: dart.fnType(vector_math_64.Vector3, [core.double]),
    negate: dart.fnType(dart.void, []),
    absolute: dart.fnType(dart.void, []),
    clamp: dart.fnType(dart.void, [vector_math_64.Vector3, vector_math_64.Vector3]),
    clampScalar: dart.fnType(dart.void, [core.double, core.double]),
    floor: dart.fnType(dart.void, []),
    ceil: dart.fnType(dart.void, []),
    round: dart.fnType(dart.void, []),
    roundToZero: dart.fnType(dart.void, []),
    clone: dart.fnType(vector_math_64.Vector3, []),
    copyInto: dart.fnType(vector_math_64.Vector3, [vector_math_64.Vector3]),
    copyIntoArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int]),
    copyFromArray: dart.fnType(dart.void, [core.List$(core.double)], [core.int])
  }));
  dart.setGetterSignature(vector_math_64.Vector3, () => ({
    __proto__: dart.getGetters(vector_math_64.Vector3.__proto__),
    storage: typed_data.Float64List,
    length: core.double,
    length2: core.double,
    isInfinite: core.bool,
    isNaN: core.bool,
    xx: vector_math_64.Vector2,
    xy: vector_math_64.Vector2,
    xz: vector_math_64.Vector2,
    yx: vector_math_64.Vector2,
    yy: vector_math_64.Vector2,
    yz: vector_math_64.Vector2,
    zx: vector_math_64.Vector2,
    zy: vector_math_64.Vector2,
    zz: vector_math_64.Vector2,
    xxx: vector_math_64.Vector3,
    xxy: vector_math_64.Vector3,
    xxz: vector_math_64.Vector3,
    xyx: vector_math_64.Vector3,
    xyy: vector_math_64.Vector3,
    xyz: vector_math_64.Vector3,
    xzx: vector_math_64.Vector3,
    xzy: vector_math_64.Vector3,
    xzz: vector_math_64.Vector3,
    yxx: vector_math_64.Vector3,
    yxy: vector_math_64.Vector3,
    yxz: vector_math_64.Vector3,
    yyx: vector_math_64.Vector3,
    yyy: vector_math_64.Vector3,
    yyz: vector_math_64.Vector3,
    yzx: vector_math_64.Vector3,
    yzy: vector_math_64.Vector3,
    yzz: vector_math_64.Vector3,
    zxx: vector_math_64.Vector3,
    zxy: vector_math_64.Vector3,
    zxz: vector_math_64.Vector3,
    zyx: vector_math_64.Vector3,
    zyy: vector_math_64.Vector3,
    zyz: vector_math_64.Vector3,
    zzx: vector_math_64.Vector3,
    zzy: vector_math_64.Vector3,
    zzz: vector_math_64.Vector3,
    xxxx: vector_math_64.Vector4,
    xxxy: vector_math_64.Vector4,
    xxxz: vector_math_64.Vector4,
    xxyx: vector_math_64.Vector4,
    xxyy: vector_math_64.Vector4,
    xxyz: vector_math_64.Vector4,
    xxzx: vector_math_64.Vector4,
    xxzy: vector_math_64.Vector4,
    xxzz: vector_math_64.Vector4,
    xyxx: vector_math_64.Vector4,
    xyxy: vector_math_64.Vector4,
    xyxz: vector_math_64.Vector4,
    xyyx: vector_math_64.Vector4,
    xyyy: vector_math_64.Vector4,
    xyyz: vector_math_64.Vector4,
    xyzx: vector_math_64.Vector4,
    xyzy: vector_math_64.Vector4,
    xyzz: vector_math_64.Vector4,
    xzxx: vector_math_64.Vector4,
    xzxy: vector_math_64.Vector4,
    xzxz: vector_math_64.Vector4,
    xzyx: vector_math_64.Vector4,
    xzyy: vector_math_64.Vector4,
    xzyz: vector_math_64.Vector4,
    xzzx: vector_math_64.Vector4,
    xzzy: vector_math_64.Vector4,
    xzzz: vector_math_64.Vector4,
    yxxx: vector_math_64.Vector4,
    yxxy: vector_math_64.Vector4,
    yxxz: vector_math_64.Vector4,
    yxyx: vector_math_64.Vector4,
    yxyy: vector_math_64.Vector4,
    yxyz: vector_math_64.Vector4,
    yxzx: vector_math_64.Vector4,
    yxzy: vector_math_64.Vector4,
    yxzz: vector_math_64.Vector4,
    yyxx: vector_math_64.Vector4,
    yyxy: vector_math_64.Vector4,
    yyxz: vector_math_64.Vector4,
    yyyx: vector_math_64.Vector4,
    yyyy: vector_math_64.Vector4,
    yyyz: vector_math_64.Vector4,
    yyzx: vector_math_64.Vector4,
    yyzy: vector_math_64.Vector4,
    yyzz: vector_math_64.Vector4,
    yzxx: vector_math_64.Vector4,
    yzxy: vector_math_64.Vector4,
    yzxz: vector_math_64.Vector4,
    yzyx: vector_math_64.Vector4,
    yzyy: vector_math_64.Vector4,
    yzyz: vector_math_64.Vector4,
    yzzx: vector_math_64.Vector4,
    yzzy: vector_math_64.Vector4,
    yzzz: vector_math_64.Vector4,
    zxxx: vector_math_64.Vector4,
    zxxy: vector_math_64.Vector4,
    zxxz: vector_math_64.Vector4,
    zxyx: vector_math_64.Vector4,
    zxyy: vector_math_64.Vector4,
    zxyz: vector_math_64.Vector4,
    zxzx: vector_math_64.Vector4,
    zxzy: vector_math_64.Vector4,
    zxzz: vector_math_64.Vector4,
    zyxx: vector_math_64.Vector4,
    zyxy: vector_math_64.Vector4,
    zyxz: vector_math_64.Vector4,
    zyyx: vector_math_64.Vector4,
    zyyy: vector_math_64.Vector4,
    zyyz: vector_math_64.Vector4,
    zyzx: vector_math_64.Vector4,
    zyzy: vector_math_64.Vector4,
    zyzz: vector_math_64.Vector4,
    zzxx: vector_math_64.Vector4,
    zzxy: vector_math_64.Vector4,
    zzxz: vector_math_64.Vector4,
    zzyx: vector_math_64.Vector4,
    zzyy: vector_math_64.Vector4,
    zzyz: vector_math_64.Vector4,
    zzzx: vector_math_64.Vector4,
    zzzy: vector_math_64.Vector4,
    zzzz: vector_math_64.Vector4,
    r: core.double,
    g: core.double,
    b: core.double,
    s: core.double,
    t: core.double,
    p: core.double,
    x: core.double,
    y: core.double,
    z: core.double,
    rr: vector_math_64.Vector2,
    rg: vector_math_64.Vector2,
    rb: vector_math_64.Vector2,
    gr: vector_math_64.Vector2,
    gg: vector_math_64.Vector2,
    gb: vector_math_64.Vector2,
    br: vector_math_64.Vector2,
    bg: vector_math_64.Vector2,
    bb: vector_math_64.Vector2,
    rrr: vector_math_64.Vector3,
    rrg: vector_math_64.Vector3,
    rrb: vector_math_64.Vector3,
    rgr: vector_math_64.Vector3,
    rgg: vector_math_64.Vector3,
    rgb: vector_math_64.Vector3,
    rbr: vector_math_64.Vector3,
    rbg: vector_math_64.Vector3,
    rbb: vector_math_64.Vector3,
    grr: vector_math_64.Vector3,
    grg: vector_math_64.Vector3,
    grb: vector_math_64.Vector3,
    ggr: vector_math_64.Vector3,
    ggg: vector_math_64.Vector3,
    ggb: vector_math_64.Vector3,
    gbr: vector_math_64.Vector3,
    gbg: vector_math_64.Vector3,
    gbb: vector_math_64.Vector3,
    brr: vector_math_64.Vector3,
    brg: vector_math_64.Vector3,
    brb: vector_math_64.Vector3,
    bgr: vector_math_64.Vector3,
    bgg: vector_math_64.Vector3,
    bgb: vector_math_64.Vector3,
    bbr: vector_math_64.Vector3,
    bbg: vector_math_64.Vector3,
    bbb: vector_math_64.Vector3,
    rrrr: vector_math_64.Vector4,
    rrrg: vector_math_64.Vector4,
    rrrb: vector_math_64.Vector4,
    rrgr: vector_math_64.Vector4,
    rrgg: vector_math_64.Vector4,
    rrgb: vector_math_64.Vector4,
    rrbr: vector_math_64.Vector4,
    rrbg: vector_math_64.Vector4,
    rrbb: vector_math_64.Vector4,
    rgrr: vector_math_64.Vector4,
    rgrg: vector_math_64.Vector4,
    rgrb: vector_math_64.Vector4,
    rggr: vector_math_64.Vector4,
    rggg: vector_math_64.Vector4,
    rggb: vector_math_64.Vector4,
    rgbr: vector_math_64.Vector4,
    rgbg: vector_math_64.Vector4,
    rgbb: vector_math_64.Vector4,
    rbrr: vector_math_64.Vector4,
    rbrg: vector_math_64.Vector4,
    rbrb: vector_math_64.Vector4,
    rbgr: vector_math_64.Vector4,
    rbgg: vector_math_64.Vector4,
    rbgb: vector_math_64.Vector4,
    rbbr: vector_math_64.Vector4,
    rbbg: vector_math_64.Vector4,
    rbbb: vector_math_64.Vector4,
    grrr: vector_math_64.Vector4,
    grrg: vector_math_64.Vector4,
    grrb: vector_math_64.Vector4,
    grgr: vector_math_64.Vector4,
    grgg: vector_math_64.Vector4,
    grgb: vector_math_64.Vector4,
    grbr: vector_math_64.Vector4,
    grbg: vector_math_64.Vector4,
    grbb: vector_math_64.Vector4,
    ggrr: vector_math_64.Vector4,
    ggrg: vector_math_64.Vector4,
    ggrb: vector_math_64.Vector4,
    gggr: vector_math_64.Vector4,
    gggg: vector_math_64.Vector4,
    gggb: vector_math_64.Vector4,
    ggbr: vector_math_64.Vector4,
    ggbg: vector_math_64.Vector4,
    ggbb: vector_math_64.Vector4,
    gbrr: vector_math_64.Vector4,
    gbrg: vector_math_64.Vector4,
    gbrb: vector_math_64.Vector4,
    gbgr: vector_math_64.Vector4,
    gbgg: vector_math_64.Vector4,
    gbgb: vector_math_64.Vector4,
    gbbr: vector_math_64.Vector4,
    gbbg: vector_math_64.Vector4,
    gbbb: vector_math_64.Vector4,
    brrr: vector_math_64.Vector4,
    brrg: vector_math_64.Vector4,
    brrb: vector_math_64.Vector4,
    brgr: vector_math_64.Vector4,
    brgg: vector_math_64.Vector4,
    brgb: vector_math_64.Vector4,
    brbr: vector_math_64.Vector4,
    brbg: vector_math_64.Vector4,
    brbb: vector_math_64.Vector4,
    bgrr: vector_math_64.Vector4,
    bgrg: vector_math_64.Vector4,
    bgrb: vector_math_64.Vector4,
    bggr: vector_math_64.Vector4,
    bggg: vector_math_64.Vector4,
    bggb: vector_math_64.Vector4,
    bgbr: vector_math_64.Vector4,
    bgbg: vector_math_64.Vector4,
    bgbb: vector_math_64.Vector4,
    bbrr: vector_math_64.Vector4,
    bbrg: vector_math_64.Vector4,
    bbrb: vector_math_64.Vector4,
    bbgr: vector_math_64.Vector4,
    bbgg: vector_math_64.Vector4,
    bbgb: vector_math_64.Vector4,
    bbbr: vector_math_64.Vector4,
    bbbg: vector_math_64.Vector4,
    bbbb: vector_math_64.Vector4,
    ss: vector_math_64.Vector2,
    st: vector_math_64.Vector2,
    sp: vector_math_64.Vector2,
    ts: vector_math_64.Vector2,
    tt: vector_math_64.Vector2,
    tp: vector_math_64.Vector2,
    ps: vector_math_64.Vector2,
    pt: vector_math_64.Vector2,
    pp: vector_math_64.Vector2,
    sss: vector_math_64.Vector3,
    sst: vector_math_64.Vector3,
    ssp: vector_math_64.Vector3,
    sts: vector_math_64.Vector3,
    stt: vector_math_64.Vector3,
    stp: vector_math_64.Vector3,
    sps: vector_math_64.Vector3,
    spt: vector_math_64.Vector3,
    spp: vector_math_64.Vector3,
    tss: vector_math_64.Vector3,
    tst: vector_math_64.Vector3,
    tsp: vector_math_64.Vector3,
    tts: vector_math_64.Vector3,
    ttt: vector_math_64.Vector3,
    ttp: vector_math_64.Vector3,
    tps: vector_math_64.Vector3,
    tpt: vector_math_64.Vector3,
    tpp: vector_math_64.Vector3,
    pss: vector_math_64.Vector3,
    pst: vector_math_64.Vector3,
    psp: vector_math_64.Vector3,
    pts: vector_math_64.Vector3,
    ptt: vector_math_64.Vector3,
    ptp: vector_math_64.Vector3,
    pps: vector_math_64.Vector3,
    ppt: vector_math_64.Vector3,
    ppp: vector_math_64.Vector3,
    ssss: vector_math_64.Vector4,
    ssst: vector_math_64.Vector4,
    sssp: vector_math_64.Vector4,
    ssts: vector_math_64.Vector4,
    sstt: vector_math_64.Vector4,
    sstp: vector_math_64.Vector4,
    ssps: vector_math_64.Vector4,
    sspt: vector_math_64.Vector4,
    sspp: vector_math_64.Vector4,
    stss: vector_math_64.Vector4,
    stst: vector_math_64.Vector4,
    stsp: vector_math_64.Vector4,
    stts: vector_math_64.Vector4,
    sttt: vector_math_64.Vector4,
    sttp: vector_math_64.Vector4,
    stps: vector_math_64.Vector4,
    stpt: vector_math_64.Vector4,
    stpp: vector_math_64.Vector4,
    spss: vector_math_64.Vector4,
    spst: vector_math_64.Vector4,
    spsp: vector_math_64.Vector4,
    spts: vector_math_64.Vector4,
    sptt: vector_math_64.Vector4,
    sptp: vector_math_64.Vector4,
    spps: vector_math_64.Vector4,
    sppt: vector_math_64.Vector4,
    sppp: vector_math_64.Vector4,
    tsss: vector_math_64.Vector4,
    tsst: vector_math_64.Vector4,
    tssp: vector_math_64.Vector4,
    tsts: vector_math_64.Vector4,
    tstt: vector_math_64.Vector4,
    tstp: vector_math_64.Vector4,
    tsps: vector_math_64.Vector4,
    tspt: vector_math_64.Vector4,
    tspp: vector_math_64.Vector4,
    ttss: vector_math_64.Vector4,
    ttst: vector_math_64.Vector4,
    ttsp: vector_math_64.Vector4,
    ttts: vector_math_64.Vector4,
    tttt: vector_math_64.Vector4,
    tttp: vector_math_64.Vector4,
    ttps: vector_math_64.Vector4,
    ttpt: vector_math_64.Vector4,
    ttpp: vector_math_64.Vector4,
    tpss: vector_math_64.Vector4,
    tpst: vector_math_64.Vector4,
    tpsp: vector_math_64.Vector4,
    tpts: vector_math_64.Vector4,
    tptt: vector_math_64.Vector4,
    tptp: vector_math_64.Vector4,
    tpps: vector_math_64.Vector4,
    tppt: vector_math_64.Vector4,
    tppp: vector_math_64.Vector4,
    psss: vector_math_64.Vector4,
    psst: vector_math_64.Vector4,
    pssp: vector_math_64.Vector4,
    psts: vector_math_64.Vector4,
    pstt: vector_math_64.Vector4,
    pstp: vector_math_64.Vector4,
    psps: vector_math_64.Vector4,
    pspt: vector_math_64.Vector4,
    pspp: vector_math_64.Vector4,
    ptss: vector_math_64.Vector4,
    ptst: vector_math_64.Vector4,
    ptsp: vector_math_64.Vector4,
    ptts: vector_math_64.Vector4,
    pttt: vector_math_64.Vector4,
    pttp: vector_math_64.Vector4,
    ptps: vector_math_64.Vector4,
    ptpt: vector_math_64.Vector4,
    ptpp: vector_math_64.Vector4,
    ppss: vector_math_64.Vector4,
    ppst: vector_math_64.Vector4,
    ppsp: vector_math_64.Vector4,
    ppts: vector_math_64.Vector4,
    pptt: vector_math_64.Vector4,
    pptp: vector_math_64.Vector4,
    ppps: vector_math_64.Vector4,
    pppt: vector_math_64.Vector4,
    pppp: vector_math_64.Vector4
  }));
  dart.setSetterSignature(vector_math_64.Vector3, () => ({
    __proto__: dart.getSetters(vector_math_64.Vector3.__proto__),
    length: core.double,
    xy: vector_math_64.Vector2,
    xz: vector_math_64.Vector2,
    yx: vector_math_64.Vector2,
    yz: vector_math_64.Vector2,
    zx: vector_math_64.Vector2,
    zy: vector_math_64.Vector2,
    xyz: vector_math_64.Vector3,
    xzy: vector_math_64.Vector3,
    yxz: vector_math_64.Vector3,
    yzx: vector_math_64.Vector3,
    zxy: vector_math_64.Vector3,
    zyx: vector_math_64.Vector3,
    r: core.double,
    g: core.double,
    b: core.double,
    s: core.double,
    t: core.double,
    p: core.double,
    x: core.double,
    y: core.double,
    z: core.double,
    rg: vector_math_64.Vector2,
    rb: vector_math_64.Vector2,
    gr: vector_math_64.Vector2,
    gb: vector_math_64.Vector2,
    br: vector_math_64.Vector2,
    bg: vector_math_64.Vector2,
    rgb: vector_math_64.Vector3,
    rbg: vector_math_64.Vector3,
    grb: vector_math_64.Vector3,
    gbr: vector_math_64.Vector3,
    brg: vector_math_64.Vector3,
    bgr: vector_math_64.Vector3,
    st: vector_math_64.Vector2,
    sp: vector_math_64.Vector2,
    ts: vector_math_64.Vector2,
    tp: vector_math_64.Vector2,
    ps: vector_math_64.Vector2,
    pt: vector_math_64.Vector2,
    stp: vector_math_64.Vector3,
    spt: vector_math_64.Vector3,
    tsp: vector_math_64.Vector3,
    tps: vector_math_64.Vector3,
    pst: vector_math_64.Vector3,
    pts: vector_math_64.Vector3
  }));
  dart.setLibraryUri(vector_math_64.Vector3, I[1]);
  dart.setFieldSignature(vector_math_64.Vector3, () => ({
    __proto__: dart.getFields(vector_math_64.Vector3.__proto__),
    [S._v3storage]: dart.finalFieldType(typed_data.Float64List)
  }));
  dart.defineExtensionMethods(vector_math_64.Vector3, ['toString', '_equals']);
  dart.defineExtensionAccessors(vector_math_64.Vector3, ['hashCode']);
  vector_math_64.Vector4 = class Vector4 extends core.Object {
    static min(a, b, result) {
      let t2;
      if (a == null) dart.nullFailed(I[18], 12, 27, "a");
      if (b == null) dart.nullFailed(I[18], 12, 38, "b");
      if (result == null) dart.nullFailed(I[18], 12, 49, "result");
      t2 = result;
      (() => {
        t2.x = math.min(core.double, a.x, b.x);
        t2.y = math.min(core.double, a.y, b.y);
        t2.z = math.min(core.double, a.z, b.z);
        t2.w = math.min(core.double, a.w, b.w);
        return t2;
      })();
    }
    static max(a, b, result) {
      let t2;
      if (a == null) dart.nullFailed(I[18], 21, 27, "a");
      if (b == null) dart.nullFailed(I[18], 21, 38, "b");
      if (result == null) dart.nullFailed(I[18], 21, 49, "result");
      t2 = result;
      (() => {
        t2.x = math.max(core.double, a.x, b.x);
        t2.y = math.max(core.double, a.y, b.y);
        t2.z = math.max(core.double, a.z, b.z);
        t2.w = math.max(core.double, a.w, b.w);
        return t2;
      })();
    }
    static mix(min, max, a, result) {
      let t2;
      if (min == null) dart.nullFailed(I[18], 31, 27, "min");
      if (max == null) dart.nullFailed(I[18], 31, 40, "max");
      if (a == null) dart.nullFailed(I[18], 31, 52, "a");
      if (result == null) dart.nullFailed(I[18], 31, 63, "result");
      t2 = result;
      (() => {
        t2.x = dart.notNull(min.x) + dart.notNull(a) * (dart.notNull(max.x) - dart.notNull(min.x));
        t2.y = dart.notNull(min.y) + dart.notNull(a) * (dart.notNull(max.y) - dart.notNull(min.y));
        t2.z = dart.notNull(min.z) + dart.notNull(a) * (dart.notNull(max.z) - dart.notNull(min.z));
        t2.w = dart.notNull(min.w) + dart.notNull(a) * (dart.notNull(max.w) - dart.notNull(min.w));
        return t2;
      })();
    }
    get storage() {
      return this[S._v4storage];
    }
    static new(x, y, z, w) {
      let t2;
      if (x == null) dart.nullFailed(I[18], 44, 26, "x");
      if (y == null) dart.nullFailed(I[18], 44, 36, "y");
      if (z == null) dart.nullFailed(I[18], 44, 46, "z");
      if (w == null) dart.nullFailed(I[18], 44, 56, "w");
      t2 = new vector_math_64.Vector4.zero();
      return (() => {
        t2.setValues(x, y, z, w);
        return t2;
      })();
    }
    static array(array, offset = 0) {
      let t2;
      if (array == null) dart.nullFailed(I[18], 48, 38, "array");
      if (offset == null) dart.nullFailed(I[18], 48, 50, "offset");
      t2 = new vector_math_64.Vector4.zero();
      return (() => {
        t2.copyFromArray(array, offset);
        return t2;
      })();
    }
    static identity() {
      let t2;
      t2 = new vector_math_64.Vector4.zero();
      return (() => {
        t2.setIdentity();
        return t2;
      })();
    }
    static all(value) {
      let t2;
      if (value == null) dart.nullFailed(I[18], 58, 30, "value");
      t2 = new vector_math_64.Vector4.zero();
      return (() => {
        t2.splat(value);
        return t2;
      })();
    }
    static copy(other) {
      let t2;
      if (other == null) dart.nullFailed(I[18], 61, 32, "other");
      t2 = new vector_math_64.Vector4.zero();
      return (() => {
        t2.setFrom(other);
        return t2;
      })();
    }
    static random(rng = null) {
      rng == null ? rng = math.Random.new() : null;
      return vector_math_64.Vector4.new(rng.nextDouble(), rng.nextDouble(), rng.nextDouble(), rng.nextDouble());
    }
    setValues(x_, y_, z_, w_) {
      if (x_ == null) dart.nullFailed(I[18], 80, 25, "x_");
      if (y_ == null) dart.nullFailed(I[18], 80, 36, "y_");
      if (z_ == null) dart.nullFailed(I[18], 80, 47, "z_");
      if (w_ == null) dart.nullFailed(I[18], 80, 58, "w_");
      this[S._v4storage][S.$_set](3, w_);
      this[S._v4storage][S.$_set](2, z_);
      this[S._v4storage][S.$_set](1, y_);
      this[S._v4storage][S.$_set](0, x_);
    }
    setZero() {
      this[S._v4storage][S.$_set](0, 0.0);
      this[S._v4storage][S.$_set](1, 0.0);
      this[S._v4storage][S.$_set](2, 0.0);
      this[S._v4storage][S.$_set](3, 0.0);
    }
    setIdentity() {
      this[S._v4storage][S.$_set](0, 0.0);
      this[S._v4storage][S.$_set](1, 0.0);
      this[S._v4storage][S.$_set](2, 0.0);
      this[S._v4storage][S.$_set](3, 1.0);
    }
    setFrom(other) {
      if (other == null) dart.nullFailed(I[18], 104, 24, "other");
      let otherStorage = other[S._v4storage];
      this[S._v4storage][S.$_set](3, otherStorage[S.$_get](3));
      this[S._v4storage][S.$_set](2, otherStorage[S.$_get](2));
      this[S._v4storage][S.$_set](1, otherStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, otherStorage[S.$_get](0));
    }
    splat(arg) {
      if (arg == null) dart.nullFailed(I[18], 113, 21, "arg");
      this[S._v4storage][S.$_set](3, arg);
      this[S._v4storage][S.$_set](2, arg);
      this[S._v4storage][S.$_set](1, arg);
      this[S._v4storage][S.$_set](0, arg);
    }
    toString() {
      return dart.str(this[S._v4storage][S.$_get](0)) + "," + dart.str(this[S._v4storage][S.$_get](1)) + "," + dart.str(this[S._v4storage][S.$_get](2)) + "," + dart.str(this[S._v4storage][S.$_get](3));
    }
    _equals(other) {
      if (other == null) return false;
      return vector_math_64.Vector4.is(other) && this[S._v4storage][S.$_get](0) == other[S._v4storage][S.$_get](0) && this[S._v4storage][S.$_get](1) == other[S._v4storage][S.$_get](1) && this[S._v4storage][S.$_get](2) == other[S._v4storage][S.$_get](2) && this[S._v4storage][S.$_get](3) == other[S._v4storage][S.$_get](3);
    }
    get hashCode() {
      return hash.hashObjects(this[S._v4storage]);
    }
    _negate() {
      let t2;
      t2 = this.clone();
      return (() => {
        t2.negate();
        return t2;
      })();
    }
    ['-'](other) {
      let t2;
      if (other == null) dart.nullFailed(I[18], 141, 30, "other");
      t2 = this.clone();
      return (() => {
        t2.sub(other);
        return t2;
      })();
    }
    ['+'](other) {
      let t2;
      if (other == null) dart.nullFailed(I[18], 144, 30, "other");
      t2 = this.clone();
      return (() => {
        t2.add(other);
        return t2;
      })();
    }
    ['/'](scale) {
      let t2;
      if (scale == null) dart.nullFailed(I[18], 147, 29, "scale");
      t2 = this.clone();
      return (() => {
        t2.scale(1.0 / dart.notNull(scale));
        return t2;
      })();
    }
    ['*'](scale) {
      let t2;
      if (scale == null) dart.nullFailed(I[18], 150, 29, "scale");
      t2 = this.clone();
      return (() => {
        t2.scale(scale);
        return t2;
      })();
    }
    _get(i) {
      if (i == null) dart.nullFailed(I[18], 153, 26, "i");
      return this[S._v4storage][S.$_get](i);
    }
    _set(i, v$) {
      let v = v$;
      if (i == null) dart.nullFailed(I[18], 156, 25, "i");
      if (v == null) dart.nullFailed(I[18], 156, 35, "v");
      this[S._v4storage][S.$_set](i, v);
      return v$;
    }
    set length(value) {
      let t3, t2, t3$, t2$, t3$0, t2$0, t3$1, t2$1;
      if (value == null) dart.nullFailed(I[18], 162, 21, "value");
      if (value === 0.0) {
        this.setZero();
      } else {
        let l = this.length;
        if (l === 0.0) {
          return;
        }
        l = dart.notNull(value) / dart.notNull(l);
        t2 = this[S._v4storage];
        t3 = 0;
        t2[S.$_set](t3, dart.notNull(t2[S.$_get](t3)) * dart.notNull(l));
        t2$ = this[S._v4storage];
        t3$ = 1;
        t2$[S.$_set](t3$, dart.notNull(t2$[S.$_get](t3$)) * dart.notNull(l));
        t2$0 = this[S._v4storage];
        t3$0 = 2;
        t2$0[S.$_set](t3$0, dart.notNull(t2$0[S.$_get](t3$0)) * dart.notNull(l));
        t2$1 = this[S._v4storage];
        t3$1 = 3;
        t2$1[S.$_set](t3$1, dart.notNull(t2$1[S.$_get](t3$1)) * dart.notNull(l));
      }
    }
    get length() {
      return math.sqrt(this.length2);
    }
    get length2() {
      let sum = null;
      sum = dart.notNull(this[S._v4storage][S.$_get](0)) * dart.notNull(this[S._v4storage][S.$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[S._v4storage][S.$_get](1)) * dart.notNull(this[S._v4storage][S.$_get](1));
      sum = dart.notNull(sum) + dart.notNull(this[S._v4storage][S.$_get](2)) * dart.notNull(this[S._v4storage][S.$_get](2));
      sum = dart.notNull(sum) + dart.notNull(this[S._v4storage][S.$_get](3)) * dart.notNull(this[S._v4storage][S.$_get](3));
      return sum;
    }
    normalize() {
      let t3, t2, t3$, t2$, t3$0, t2$0, t3$1, t2$1;
      let l = this.length;
      if (l === 0.0) {
        return 0.0;
      }
      let d = 1.0 / dart.notNull(l);
      t2 = this[S._v4storage];
      t3 = 0;
      t2[S.$_set](t3, dart.notNull(t2[S.$_get](t3)) * d);
      t2$ = this[S._v4storage];
      t3$ = 1;
      t2$[S.$_set](t3$, dart.notNull(t2$[S.$_get](t3$)) * d);
      t2$0 = this[S._v4storage];
      t3$0 = 2;
      t2$0[S.$_set](t3$0, dart.notNull(t2$0[S.$_get](t3$0)) * d);
      t2$1 = this[S._v4storage];
      t3$1 = 3;
      t2$1[S.$_set](t3$1, dart.notNull(t2$1[S.$_get](t3$1)) * d);
      return l;
    }
    normalizeLength() {
      return this.normalize();
    }
    normalized() {
      let t2;
      t2 = this.clone();
      return (() => {
        t2.normalize();
        return t2;
      })();
    }
    normalizeInto(out) {
      let t2;
      if (out == null) dart.nullFailed(I[18], 214, 33, "out");
      t2 = out;
      (() => {
        t2.setFrom(this);
        t2.normalize();
        return t2;
      })();
      return out;
    }
    distanceTo(arg) {
      if (arg == null) dart.nullFailed(I[18], 222, 29, "arg");
      return math.sqrt(this.distanceToSquared(arg));
    }
    distanceToSquared(arg) {
      if (arg == null) dart.nullFailed(I[18], 225, 36, "arg");
      let argStorage = arg[S._v4storage];
      let dx = dart.notNull(this[S._v4storage][S.$_get](0)) - dart.notNull(argStorage[S.$_get](0));
      let dy = dart.notNull(this[S._v4storage][S.$_get](1)) - dart.notNull(argStorage[S.$_get](1));
      let dz = dart.notNull(this[S._v4storage][S.$_get](2)) - dart.notNull(argStorage[S.$_get](2));
      let dw = dart.notNull(this[S._v4storage][S.$_get](3)) - dart.notNull(argStorage[S.$_get](3));
      return dx * dx + dy * dy + dz * dz + dw * dw;
    }
    dot(other) {
      if (other == null) dart.nullFailed(I[18], 236, 22, "other");
      let otherStorage = other[S._v4storage];
      let sum = null;
      sum = dart.notNull(this[S._v4storage][S.$_get](0)) * dart.notNull(otherStorage[S.$_get](0));
      sum = dart.notNull(sum) + dart.notNull(this[S._v4storage][S.$_get](1)) * dart.notNull(otherStorage[S.$_get](1));
      sum = dart.notNull(sum) + dart.notNull(this[S._v4storage][S.$_get](2)) * dart.notNull(otherStorage[S.$_get](2));
      sum = dart.notNull(sum) + dart.notNull(this[S._v4storage][S.$_get](3)) * dart.notNull(otherStorage[S.$_get](3));
      return sum;
    }
    applyMatrix4(arg) {
      if (arg == null) dart.nullFailed(I[18], 247, 29, "arg");
      let v1 = this[S._v4storage][S.$_get](0);
      let v2 = this[S._v4storage][S.$_get](1);
      let v3 = this[S._v4storage][S.$_get](2);
      let v4 = this[S._v4storage][S.$_get](3);
      let argStorage = arg.storage;
      this[S._v4storage][S.$_set](0, dart.notNull(argStorage[S.$_get](0)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](4)) * dart.notNull(v2) + dart.notNull(argStorage[S.$_get](8)) * dart.notNull(v3) + dart.notNull(argStorage[S.$_get](12)) * dart.notNull(v4));
      this[S._v4storage][S.$_set](1, dart.notNull(argStorage[S.$_get](1)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](5)) * dart.notNull(v2) + dart.notNull(argStorage[S.$_get](9)) * dart.notNull(v3) + dart.notNull(argStorage[S.$_get](13)) * dart.notNull(v4));
      this[S._v4storage][S.$_set](2, dart.notNull(argStorage[S.$_get](2)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](6)) * dart.notNull(v2) + dart.notNull(argStorage[S.$_get](10)) * dart.notNull(v3) + dart.notNull(argStorage[S.$_get](14)) * dart.notNull(v4));
      this[S._v4storage][S.$_set](3, dart.notNull(argStorage[S.$_get](3)) * dart.notNull(v1) + dart.notNull(argStorage[S.$_get](7)) * dart.notNull(v2) + dart.notNull(argStorage[S.$_get](11)) * dart.notNull(v3) + dart.notNull(argStorage[S.$_get](15)) * dart.notNull(v4));
    }
    relativeError(correct) {
      if (correct == null) dart.nullFailed(I[18], 272, 32, "correct");
      let correct_norm = correct.length;
      let diff_norm = this['-'](correct).length;
      return dart.notNull(diff_norm) / dart.notNull(correct_norm);
    }
    absoluteError(correct) {
      if (correct == null) dart.nullFailed(I[18], 279, 32, "correct");
      return this['-'](correct).length;
    }
    get isInfinite() {
      let is_infinite = false;
      is_infinite = is_infinite || this[S._v4storage][S.$_get](0)[S.$isInfinite];
      is_infinite = is_infinite || this[S._v4storage][S.$_get](1)[S.$isInfinite];
      is_infinite = is_infinite || this[S._v4storage][S.$_get](2)[S.$isInfinite];
      is_infinite = is_infinite || this[S._v4storage][S.$_get](3)[S.$isInfinite];
      return is_infinite;
    }
    get isNaN() {
      let is_nan = false;
      is_nan = is_nan || this[S._v4storage][S.$_get](0)[S.$isNaN];
      is_nan = is_nan || this[S._v4storage][S.$_get](1)[S.$isNaN];
      is_nan = is_nan || this[S._v4storage][S.$_get](2)[S.$isNaN];
      is_nan = is_nan || this[S._v4storage][S.$_get](3)[S.$isNaN];
      return is_nan;
    }
    add(arg) {
      if (arg == null) dart.nullFailed(I[18], 301, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, dart.notNull(this[S._v4storage][S.$_get](0)) + dart.notNull(argStorage[S.$_get](0)));
      this[S._v4storage][S.$_set](1, dart.notNull(this[S._v4storage][S.$_get](1)) + dart.notNull(argStorage[S.$_get](1)));
      this[S._v4storage][S.$_set](2, dart.notNull(this[S._v4storage][S.$_get](2)) + dart.notNull(argStorage[S.$_get](2)));
      this[S._v4storage][S.$_set](3, dart.notNull(this[S._v4storage][S.$_get](3)) + dart.notNull(argStorage[S.$_get](3)));
    }
    addScaled(arg, factor) {
      if (arg == null) dart.nullFailed(I[18], 310, 26, "arg");
      if (factor == null) dart.nullFailed(I[18], 310, 38, "factor");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, dart.notNull(this[S._v4storage][S.$_get](0)) + dart.notNull(argStorage[S.$_get](0)) * dart.notNull(factor));
      this[S._v4storage][S.$_set](1, dart.notNull(this[S._v4storage][S.$_get](1)) + dart.notNull(argStorage[S.$_get](1)) * dart.notNull(factor));
      this[S._v4storage][S.$_set](2, dart.notNull(this[S._v4storage][S.$_get](2)) + dart.notNull(argStorage[S.$_get](2)) * dart.notNull(factor));
      this[S._v4storage][S.$_set](3, dart.notNull(this[S._v4storage][S.$_get](3)) + dart.notNull(argStorage[S.$_get](3)) * dart.notNull(factor));
    }
    sub(arg) {
      if (arg == null) dart.nullFailed(I[18], 319, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, dart.notNull(this[S._v4storage][S.$_get](0)) - dart.notNull(argStorage[S.$_get](0)));
      this[S._v4storage][S.$_set](1, dart.notNull(this[S._v4storage][S.$_get](1)) - dart.notNull(argStorage[S.$_get](1)));
      this[S._v4storage][S.$_set](2, dart.notNull(this[S._v4storage][S.$_get](2)) - dart.notNull(argStorage[S.$_get](2)));
      this[S._v4storage][S.$_set](3, dart.notNull(this[S._v4storage][S.$_get](3)) - dart.notNull(argStorage[S.$_get](3)));
    }
    multiply(arg) {
      if (arg == null) dart.nullFailed(I[18], 328, 25, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, dart.notNull(this[S._v4storage][S.$_get](0)) * dart.notNull(argStorage[S.$_get](0)));
      this[S._v4storage][S.$_set](1, dart.notNull(this[S._v4storage][S.$_get](1)) * dart.notNull(argStorage[S.$_get](1)));
      this[S._v4storage][S.$_set](2, dart.notNull(this[S._v4storage][S.$_get](2)) * dart.notNull(argStorage[S.$_get](2)));
      this[S._v4storage][S.$_set](3, dart.notNull(this[S._v4storage][S.$_get](3)) * dart.notNull(argStorage[S.$_get](3)));
    }
    div(arg) {
      if (arg == null) dart.nullFailed(I[18], 337, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, dart.notNull(this[S._v4storage][S.$_get](0)) / dart.notNull(argStorage[S.$_get](0)));
      this[S._v4storage][S.$_set](1, dart.notNull(this[S._v4storage][S.$_get](1)) / dart.notNull(argStorage[S.$_get](1)));
      this[S._v4storage][S.$_set](2, dart.notNull(this[S._v4storage][S.$_get](2)) / dart.notNull(argStorage[S.$_get](2)));
      this[S._v4storage][S.$_set](3, dart.notNull(this[S._v4storage][S.$_get](3)) / dart.notNull(argStorage[S.$_get](3)));
    }
    scale(arg) {
      if (arg == null) dart.nullFailed(I[18], 346, 21, "arg");
      this[S._v4storage][S.$_set](0, dart.notNull(this[S._v4storage][S.$_get](0)) * dart.notNull(arg));
      this[S._v4storage][S.$_set](1, dart.notNull(this[S._v4storage][S.$_get](1)) * dart.notNull(arg));
      this[S._v4storage][S.$_set](2, dart.notNull(this[S._v4storage][S.$_get](2)) * dart.notNull(arg));
      this[S._v4storage][S.$_set](3, dart.notNull(this[S._v4storage][S.$_get](3)) * dart.notNull(arg));
    }
    scaled(arg) {
      let t2;
      if (arg == null) dart.nullFailed(I[18], 354, 25, "arg");
      t2 = this.clone();
      return (() => {
        t2.scale(arg);
        return t2;
      })();
    }
    negate() {
      this[S._v4storage][S.$_set](0, -dart.notNull(this[S._v4storage][S.$_get](0)));
      this[S._v4storage][S.$_set](1, -dart.notNull(this[S._v4storage][S.$_get](1)));
      this[S._v4storage][S.$_set](2, -dart.notNull(this[S._v4storage][S.$_get](2)));
      this[S._v4storage][S.$_set](3, -dart.notNull(this[S._v4storage][S.$_get](3)));
    }
    absolute() {
      this[S._v4storage][S.$_set](3, this[S._v4storage][S.$_get](3)[S.$abs]());
      this[S._v4storage][S.$_set](2, this[S._v4storage][S.$_get](2)[S.$abs]());
      this[S._v4storage][S.$_set](1, this[S._v4storage][S.$_get](1)[S.$abs]());
      this[S._v4storage][S.$_set](0, this[S._v4storage][S.$_get](0)[S.$abs]());
    }
    clamp(min, max) {
      if (min == null) dart.nullFailed(I[18], 373, 22, "min");
      if (max == null) dart.nullFailed(I[18], 373, 35, "max");
      let minStorage = min.storage;
      let maxStorage = max.storage;
      this[S._v4storage][S.$_set](0, this[S._v4storage][S.$_get](0)[S.$clamp](minStorage[S.$_get](0), maxStorage[S.$_get](0))[S.$toDouble]());
      this[S._v4storage][S.$_set](1, this[S._v4storage][S.$_get](1)[S.$clamp](minStorage[S.$_get](1), maxStorage[S.$_get](1))[S.$toDouble]());
      this[S._v4storage][S.$_set](2, this[S._v4storage][S.$_get](2)[S.$clamp](minStorage[S.$_get](2), maxStorage[S.$_get](2))[S.$toDouble]());
      this[S._v4storage][S.$_set](3, this[S._v4storage][S.$_get](3)[S.$clamp](minStorage[S.$_get](3), maxStorage[S.$_get](3))[S.$toDouble]());
    }
    clampScalar(min, max) {
      if (min == null) dart.nullFailed(I[18], 387, 27, "min");
      if (max == null) dart.nullFailed(I[18], 387, 39, "max");
      this[S._v4storage][S.$_set](0, this[S._v4storage][S.$_get](0)[S.$clamp](min, max)[S.$toDouble]());
      this[S._v4storage][S.$_set](1, this[S._v4storage][S.$_get](1)[S.$clamp](min, max)[S.$toDouble]());
      this[S._v4storage][S.$_set](2, this[S._v4storage][S.$_get](2)[S.$clamp](min, max)[S.$toDouble]());
      this[S._v4storage][S.$_set](3, this[S._v4storage][S.$_get](3)[S.$clamp](min, max)[S.$toDouble]());
    }
    floor() {
      this[S._v4storage][S.$_set](0, this[S._v4storage][S.$_get](0)[S.$floorToDouble]());
      this[S._v4storage][S.$_set](1, this[S._v4storage][S.$_get](1)[S.$floorToDouble]());
      this[S._v4storage][S.$_set](2, this[S._v4storage][S.$_get](2)[S.$floorToDouble]());
      this[S._v4storage][S.$_set](3, this[S._v4storage][S.$_get](3)[S.$floorToDouble]());
    }
    ceil() {
      this[S._v4storage][S.$_set](0, this[S._v4storage][S.$_get](0)[S.$ceilToDouble]());
      this[S._v4storage][S.$_set](1, this[S._v4storage][S.$_get](1)[S.$ceilToDouble]());
      this[S._v4storage][S.$_set](2, this[S._v4storage][S.$_get](2)[S.$ceilToDouble]());
      this[S._v4storage][S.$_set](3, this[S._v4storage][S.$_get](3)[S.$ceilToDouble]());
    }
    round() {
      this[S._v4storage][S.$_set](0, this[S._v4storage][S.$_get](0)[S.$roundToDouble]());
      this[S._v4storage][S.$_set](1, this[S._v4storage][S.$_get](1)[S.$roundToDouble]());
      this[S._v4storage][S.$_set](2, this[S._v4storage][S.$_get](2)[S.$roundToDouble]());
      this[S._v4storage][S.$_set](3, this[S._v4storage][S.$_get](3)[S.$roundToDouble]());
    }
    roundToZero() {
      this[S._v4storage][S.$_set](0, dart.notNull(this[S._v4storage][S.$_get](0)) < 0.0 ? this[S._v4storage][S.$_get](0)[S.$ceilToDouble]() : this[S._v4storage][S.$_get](0)[S.$floorToDouble]());
      this[S._v4storage][S.$_set](1, dart.notNull(this[S._v4storage][S.$_get](1)) < 0.0 ? this[S._v4storage][S.$_get](1)[S.$ceilToDouble]() : this[S._v4storage][S.$_get](1)[S.$floorToDouble]());
      this[S._v4storage][S.$_set](2, dart.notNull(this[S._v4storage][S.$_get](2)) < 0.0 ? this[S._v4storage][S.$_get](2)[S.$ceilToDouble]() : this[S._v4storage][S.$_get](2)[S.$floorToDouble]());
      this[S._v4storage][S.$_set](3, dart.notNull(this[S._v4storage][S.$_get](3)) < 0.0 ? this[S._v4storage][S.$_get](3)[S.$ceilToDouble]() : this[S._v4storage][S.$_get](3)[S.$floorToDouble]());
    }
    clone() {
      return vector_math_64.Vector4.copy(this);
    }
    copyInto(arg) {
      if (arg == null) dart.nullFailed(I[18], 438, 28, "arg");
      let argStorage = arg[S._v4storage];
      argStorage[S.$_set](0, this[S._v4storage][S.$_get](0));
      argStorage[S.$_set](1, this[S._v4storage][S.$_get](1));
      argStorage[S.$_set](2, this[S._v4storage][S.$_get](2));
      argStorage[S.$_set](3, this[S._v4storage][S.$_get](3));
      return arg;
    }
    copyIntoArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[18], 448, 35, "array");
      if (offset == null) dart.nullFailed(I[18], 448, 47, "offset");
      array[S.$_set](dart.notNull(offset) + 0, this[S._v4storage][S.$_get](0));
      array[S.$_set](dart.notNull(offset) + 1, this[S._v4storage][S.$_get](1));
      array[S.$_set](dart.notNull(offset) + 2, this[S._v4storage][S.$_get](2));
      array[S.$_set](dart.notNull(offset) + 3, this[S._v4storage][S.$_get](3));
    }
    copyFromArray(array, offset = 0) {
      if (array == null) dart.nullFailed(I[18], 456, 35, "array");
      if (offset == null) dart.nullFailed(I[18], 456, 47, "offset");
      this[S._v4storage][S.$_set](0, array[S.$_get](dart.notNull(offset) + 0));
      this[S._v4storage][S.$_set](1, array[S.$_get](dart.notNull(offset) + 1));
      this[S._v4storage][S.$_set](2, array[S.$_get](dart.notNull(offset) + 2));
      this[S._v4storage][S.$_set](3, array[S.$_get](dart.notNull(offset) + 3));
    }
    set xy(arg) {
      if (arg == null) dart.nullFailed(I[18], 463, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
    }
    set xz(arg) {
      if (arg == null) dart.nullFailed(I[18], 469, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
    }
    set xw(arg) {
      if (arg == null) dart.nullFailed(I[18], 475, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
    }
    set yx(arg) {
      if (arg == null) dart.nullFailed(I[18], 481, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
    }
    set yz(arg) {
      if (arg == null) dart.nullFailed(I[18], 487, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
    }
    set yw(arg) {
      if (arg == null) dart.nullFailed(I[18], 493, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
    }
    set zx(arg) {
      if (arg == null) dart.nullFailed(I[18], 499, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
    }
    set zy(arg) {
      if (arg == null) dart.nullFailed(I[18], 505, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
    }
    set zw(arg) {
      if (arg == null) dart.nullFailed(I[18], 511, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
    }
    set wx(arg) {
      if (arg == null) dart.nullFailed(I[18], 517, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
    }
    set wy(arg) {
      if (arg == null) dart.nullFailed(I[18], 523, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
    }
    set wz(arg) {
      if (arg == null) dart.nullFailed(I[18], 529, 18, "arg");
      let argStorage = arg[S._v2storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
    }
    set xyz(arg) {
      if (arg == null) dart.nullFailed(I[18], 535, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set xyw(arg) {
      if (arg == null) dart.nullFailed(I[18], 542, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
    }
    set xzy(arg) {
      if (arg == null) dart.nullFailed(I[18], 549, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set xzw(arg) {
      if (arg == null) dart.nullFailed(I[18], 556, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
    }
    set xwy(arg) {
      if (arg == null) dart.nullFailed(I[18], 563, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set xwz(arg) {
      if (arg == null) dart.nullFailed(I[18], 570, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set yxz(arg) {
      if (arg == null) dart.nullFailed(I[18], 577, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set yxw(arg) {
      if (arg == null) dart.nullFailed(I[18], 584, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
    }
    set yzx(arg) {
      if (arg == null) dart.nullFailed(I[18], 591, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set yzw(arg) {
      if (arg == null) dart.nullFailed(I[18], 598, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
    }
    set ywx(arg) {
      if (arg == null) dart.nullFailed(I[18], 605, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set ywz(arg) {
      if (arg == null) dart.nullFailed(I[18], 612, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set zxy(arg) {
      if (arg == null) dart.nullFailed(I[18], 619, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set zxw(arg) {
      if (arg == null) dart.nullFailed(I[18], 626, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
    }
    set zyx(arg) {
      if (arg == null) dart.nullFailed(I[18], 633, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set zyw(arg) {
      if (arg == null) dart.nullFailed(I[18], 640, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
    }
    set zwx(arg) {
      if (arg == null) dart.nullFailed(I[18], 647, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set zwy(arg) {
      if (arg == null) dart.nullFailed(I[18], 654, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set wxy(arg) {
      if (arg == null) dart.nullFailed(I[18], 661, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set wxz(arg) {
      if (arg == null) dart.nullFailed(I[18], 668, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set wyx(arg) {
      if (arg == null) dart.nullFailed(I[18], 675, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set wyz(arg) {
      if (arg == null) dart.nullFailed(I[18], 682, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
    }
    set wzx(arg) {
      if (arg == null) dart.nullFailed(I[18], 689, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
    }
    set wzy(arg) {
      if (arg == null) dart.nullFailed(I[18], 696, 19, "arg");
      let argStorage = arg[S._v3storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
    }
    set xyzw(arg) {
      if (arg == null) dart.nullFailed(I[18], 703, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](3));
    }
    set xywz(arg) {
      if (arg == null) dart.nullFailed(I[18], 711, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](3));
    }
    set xzyw(arg) {
      if (arg == null) dart.nullFailed(I[18], 719, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](3));
    }
    set xzwy(arg) {
      if (arg == null) dart.nullFailed(I[18], 727, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](3));
    }
    set xwyz(arg) {
      if (arg == null) dart.nullFailed(I[18], 735, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](3));
    }
    set xwzy(arg) {
      if (arg == null) dart.nullFailed(I[18], 743, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](3));
    }
    set yxzw(arg) {
      if (arg == null) dart.nullFailed(I[18], 751, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](3));
    }
    set yxwz(arg) {
      if (arg == null) dart.nullFailed(I[18], 759, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](3));
    }
    set yzxw(arg) {
      if (arg == null) dart.nullFailed(I[18], 767, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](3));
    }
    set yzwx(arg) {
      if (arg == null) dart.nullFailed(I[18], 775, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](3));
    }
    set ywxz(arg) {
      if (arg == null) dart.nullFailed(I[18], 783, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](3));
    }
    set ywzx(arg) {
      if (arg == null) dart.nullFailed(I[18], 791, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](3));
    }
    set zxyw(arg) {
      if (arg == null) dart.nullFailed(I[18], 799, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](3));
    }
    set zxwy(arg) {
      if (arg == null) dart.nullFailed(I[18], 807, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](3));
    }
    set zyxw(arg) {
      if (arg == null) dart.nullFailed(I[18], 815, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](3));
    }
    set zywx(arg) {
      if (arg == null) dart.nullFailed(I[18], 823, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](3));
    }
    set zwxy(arg) {
      if (arg == null) dart.nullFailed(I[18], 831, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](3));
    }
    set zwyx(arg) {
      if (arg == null) dart.nullFailed(I[18], 839, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](3));
    }
    set wxyz(arg) {
      if (arg == null) dart.nullFailed(I[18], 847, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](3));
    }
    set wxzy(arg) {
      if (arg == null) dart.nullFailed(I[18], 855, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](3));
    }
    set wyxz(arg) {
      if (arg == null) dart.nullFailed(I[18], 863, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](3));
    }
    set wyzx(arg) {
      if (arg == null) dart.nullFailed(I[18], 871, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](3));
    }
    set wzxy(arg) {
      if (arg == null) dart.nullFailed(I[18], 879, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](3));
    }
    set wzyx(arg) {
      if (arg == null) dart.nullFailed(I[18], 887, 20, "arg");
      let argStorage = arg[S._v4storage];
      this[S._v4storage][S.$_set](3, argStorage[S.$_get](0));
      this[S._v4storage][S.$_set](2, argStorage[S.$_get](1));
      this[S._v4storage][S.$_set](1, argStorage[S.$_get](2));
      this[S._v4storage][S.$_set](0, argStorage[S.$_get](3));
    }
    set r(arg) {
      if (arg == null) dart.nullFailed(I[18], 895, 16, "arg");
      return this.x = arg;
    }
    set g(arg) {
      if (arg == null) dart.nullFailed(I[18], 896, 16, "arg");
      return this.y = arg;
    }
    set b(arg) {
      if (arg == null) dart.nullFailed(I[18], 897, 16, "arg");
      return this.z = arg;
    }
    set a(arg) {
      if (arg == null) dart.nullFailed(I[18], 898, 16, "arg");
      return this.w = arg;
    }
    set s(arg) {
      if (arg == null) dart.nullFailed(I[18], 899, 16, "arg");
      return this.x = arg;
    }
    set t(arg) {
      if (arg == null) dart.nullFailed(I[18], 900, 16, "arg");
      return this.y = arg;
    }
    set p(arg) {
      if (arg == null) dart.nullFailed(I[18], 901, 16, "arg");
      return this.z = arg;
    }
    set q(arg) {
      if (arg == null) dart.nullFailed(I[18], 902, 16, "arg");
      return this.w = arg;
    }
    set x(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[18], 903, 16, "arg");
      t2 = this[S._v4storage];
      t3 = 0;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set y(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[18], 904, 16, "arg");
      t2 = this[S._v4storage];
      t3 = 1;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set z(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[18], 905, 16, "arg");
      t2 = this[S._v4storage];
      t3 = 2;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set w(arg) {
      let t4, t3, t2;
      if (arg == null) dart.nullFailed(I[18], 906, 16, "arg");
      t2 = this[S._v4storage];
      t3 = 3;
      t4 = arg;
      t2[S.$_set](t3, t4);
      return t4;
    }
    set rg(arg) {
      if (arg == null) dart.nullFailed(I[18], 907, 18, "arg");
      return this.xy = arg;
    }
    set rb(arg) {
      if (arg == null) dart.nullFailed(I[18], 908, 18, "arg");
      return this.xz = arg;
    }
    set ra(arg) {
      if (arg == null) dart.nullFailed(I[18], 909, 18, "arg");
      return this.xw = arg;
    }
    set gr(arg) {
      if (arg == null) dart.nullFailed(I[18], 910, 18, "arg");
      return this.yx = arg;
    }
    set gb(arg) {
      if (arg == null) dart.nullFailed(I[18], 911, 18, "arg");
      return this.yz = arg;
    }
    set ga(arg) {
      if (arg == null) dart.nullFailed(I[18], 912, 18, "arg");
      return this.yw = arg;
    }
    set br(arg) {
      if (arg == null) dart.nullFailed(I[18], 913, 18, "arg");
      return this.zx = arg;
    }
    set bg(arg) {
      if (arg == null) dart.nullFailed(I[18], 914, 18, "arg");
      return this.zy = arg;
    }
    set ba(arg) {
      if (arg == null) dart.nullFailed(I[18], 915, 18, "arg");
      return this.zw = arg;
    }
    set ar(arg) {
      if (arg == null) dart.nullFailed(I[18], 916, 18, "arg");
      return this.wx = arg;
    }
    set ag(arg) {
      if (arg == null) dart.nullFailed(I[18], 917, 18, "arg");
      return this.wy = arg;
    }
    set ab(arg) {
      if (arg == null) dart.nullFailed(I[18], 918, 18, "arg");
      return this.wz = arg;
    }
    set rgb(arg) {
      if (arg == null) dart.nullFailed(I[18], 919, 19, "arg");
      return this.xyz = arg;
    }
    set rga(arg) {
      if (arg == null) dart.nullFailed(I[18], 920, 19, "arg");
      return this.xyw = arg;
    }
    set rbg(arg) {
      if (arg == null) dart.nullFailed(I[18], 921, 19, "arg");
      return this.xzy = arg;
    }
    set rba(arg) {
      if (arg == null) dart.nullFailed(I[18], 922, 19, "arg");
      return this.xzw = arg;
    }
    set rag(arg) {
      if (arg == null) dart.nullFailed(I[18], 923, 19, "arg");
      return this.xwy = arg;
    }
    set rab(arg) {
      if (arg == null) dart.nullFailed(I[18], 924, 19, "arg");
      return this.xwz = arg;
    }
    set grb(arg) {
      if (arg == null) dart.nullFailed(I[18], 925, 19, "arg");
      return this.yxz = arg;
    }
    set gra(arg) {
      if (arg == null) dart.nullFailed(I[18], 926, 19, "arg");
      return this.yxw = arg;
    }
    set gbr(arg) {
      if (arg == null) dart.nullFailed(I[18], 927, 19, "arg");
      return this.yzx = arg;
    }
    set gba(arg) {
      if (arg == null) dart.nullFailed(I[18], 928, 19, "arg");
      return this.yzw = arg;
    }
    set gar(arg) {
      if (arg == null) dart.nullFailed(I[18], 929, 19, "arg");
      return this.ywx = arg;
    }
    set gab(arg) {
      if (arg == null) dart.nullFailed(I[18], 930, 19, "arg");
      return this.ywz = arg;
    }
    set brg(arg) {
      if (arg == null) dart.nullFailed(I[18], 931, 19, "arg");
      return this.zxy = arg;
    }
    set bra(arg) {
      if (arg == null) dart.nullFailed(I[18], 932, 19, "arg");
      return this.zxw = arg;
    }
    set bgr(arg) {
      if (arg == null) dart.nullFailed(I[18], 933, 19, "arg");
      return this.zyx = arg;
    }
    set bga(arg) {
      if (arg == null) dart.nullFailed(I[18], 934, 19, "arg");
      return this.zyw = arg;
    }
    set bar(arg) {
      if (arg == null) dart.nullFailed(I[18], 935, 19, "arg");
      return this.zwx = arg;
    }
    set bag(arg) {
      if (arg == null) dart.nullFailed(I[18], 936, 19, "arg");
      return this.zwy = arg;
    }
    set arg(arg) {
      if (arg == null) dart.nullFailed(I[18], 937, 19, "arg");
      return this.wxy = arg;
    }
    set arb(arg) {
      if (arg == null) dart.nullFailed(I[18], 938, 19, "arg");
      return this.wxz = arg;
    }
    set agr(arg) {
      if (arg == null) dart.nullFailed(I[18], 939, 19, "arg");
      return this.wyx = arg;
    }
    set agb(arg) {
      if (arg == null) dart.nullFailed(I[18], 940, 19, "arg");
      return this.wyz = arg;
    }
    set abr(arg) {
      if (arg == null) dart.nullFailed(I[18], 941, 19, "arg");
      return this.wzx = arg;
    }
    set abg(arg) {
      if (arg == null) dart.nullFailed(I[18], 942, 19, "arg");
      return this.wzy = arg;
    }
    set rgba(arg) {
      if (arg == null) dart.nullFailed(I[18], 943, 20, "arg");
      return this.xyzw = arg;
    }
    set rgab(arg) {
      if (arg == null) dart.nullFailed(I[18], 944, 20, "arg");
      return this.xywz = arg;
    }
    set rbga(arg) {
      if (arg == null) dart.nullFailed(I[18], 945, 20, "arg");
      return this.xzyw = arg;
    }
    set rbag(arg) {
      if (arg == null) dart.nullFailed(I[18], 946, 20, "arg");
      return this.xzwy = arg;
    }
    set ragb(arg) {
      if (arg == null) dart.nullFailed(I[18], 947, 20, "arg");
      return this.xwyz = arg;
    }
    set rabg(arg) {
      if (arg == null) dart.nullFailed(I[18], 948, 20, "arg");
      return this.xwzy = arg;
    }
    set grba(arg) {
      if (arg == null) dart.nullFailed(I[18], 949, 20, "arg");
      return this.yxzw = arg;
    }
    set grab(arg) {
      if (arg == null) dart.nullFailed(I[18], 950, 20, "arg");
      return this.yxwz = arg;
    }
    set gbra(arg) {
      if (arg == null) dart.nullFailed(I[18], 951, 20, "arg");
      return this.yzxw = arg;
    }
    set gbar(arg) {
      if (arg == null) dart.nullFailed(I[18], 952, 20, "arg");
      return this.yzwx = arg;
    }
    set garb(arg) {
      if (arg == null) dart.nullFailed(I[18], 953, 20, "arg");
      return this.ywxz = arg;
    }
    set gabr(arg) {
      if (arg == null) dart.nullFailed(I[18], 954, 20, "arg");
      return this.ywzx = arg;
    }
    set brga(arg) {
      if (arg == null) dart.nullFailed(I[18], 955, 20, "arg");
      return this.zxyw = arg;
    }
    set brag(arg) {
      if (arg == null) dart.nullFailed(I[18], 956, 20, "arg");
      return this.zxwy = arg;
    }
    set bgra(arg) {
      if (arg == null) dart.nullFailed(I[18], 957, 20, "arg");
      return this.zyxw = arg;
    }
    set bgar(arg) {
      if (arg == null) dart.nullFailed(I[18], 958, 20, "arg");
      return this.zywx = arg;
    }
    set barg(arg) {
      if (arg == null) dart.nullFailed(I[18], 959, 20, "arg");
      return this.zwxy = arg;
    }
    set bagr(arg) {
      if (arg == null) dart.nullFailed(I[18], 960, 20, "arg");
      return this.zwyx = arg;
    }
    set argb(arg) {
      if (arg == null) dart.nullFailed(I[18], 961, 20, "arg");
      return this.wxyz = arg;
    }
    set arbg(arg) {
      if (arg == null) dart.nullFailed(I[18], 962, 20, "arg");
      return this.wxzy = arg;
    }
    set agrb(arg) {
      if (arg == null) dart.nullFailed(I[18], 963, 20, "arg");
      return this.wyxz = arg;
    }
    set agbr(arg) {
      if (arg == null) dart.nullFailed(I[18], 964, 20, "arg");
      return this.wyzx = arg;
    }
    set abrg(arg) {
      if (arg == null) dart.nullFailed(I[18], 965, 20, "arg");
      return this.wzxy = arg;
    }
    set abgr(arg) {
      if (arg == null) dart.nullFailed(I[18], 966, 20, "arg");
      return this.wzyx = arg;
    }
    set st(arg) {
      if (arg == null) dart.nullFailed(I[18], 967, 18, "arg");
      return this.xy = arg;
    }
    set sp(arg) {
      if (arg == null) dart.nullFailed(I[18], 968, 18, "arg");
      return this.xz = arg;
    }
    set sq(arg) {
      if (arg == null) dart.nullFailed(I[18], 969, 18, "arg");
      return this.xw = arg;
    }
    set ts(arg) {
      if (arg == null) dart.nullFailed(I[18], 970, 18, "arg");
      return this.yx = arg;
    }
    set tp(arg) {
      if (arg == null) dart.nullFailed(I[18], 971, 18, "arg");
      return this.yz = arg;
    }
    set tq(arg) {
      if (arg == null) dart.nullFailed(I[18], 972, 18, "arg");
      return this.yw = arg;
    }
    set ps(arg) {
      if (arg == null) dart.nullFailed(I[18], 973, 18, "arg");
      return this.zx = arg;
    }
    set pt(arg) {
      if (arg == null) dart.nullFailed(I[18], 974, 18, "arg");
      return this.zy = arg;
    }
    set pq(arg) {
      if (arg == null) dart.nullFailed(I[18], 975, 18, "arg");
      return this.zw = arg;
    }
    set qs(arg) {
      if (arg == null) dart.nullFailed(I[18], 976, 18, "arg");
      return this.wx = arg;
    }
    set qt(arg) {
      if (arg == null) dart.nullFailed(I[18], 977, 18, "arg");
      return this.wy = arg;
    }
    set qp(arg) {
      if (arg == null) dart.nullFailed(I[18], 978, 18, "arg");
      return this.wz = arg;
    }
    set stp(arg) {
      if (arg == null) dart.nullFailed(I[18], 979, 19, "arg");
      return this.xyz = arg;
    }
    set stq(arg) {
      if (arg == null) dart.nullFailed(I[18], 980, 19, "arg");
      return this.xyw = arg;
    }
    set spt(arg) {
      if (arg == null) dart.nullFailed(I[18], 981, 19, "arg");
      return this.xzy = arg;
    }
    set spq(arg) {
      if (arg == null) dart.nullFailed(I[18], 982, 19, "arg");
      return this.xzw = arg;
    }
    set sqt(arg) {
      if (arg == null) dart.nullFailed(I[18], 983, 19, "arg");
      return this.xwy = arg;
    }
    set sqp(arg) {
      if (arg == null) dart.nullFailed(I[18], 984, 19, "arg");
      return this.xwz = arg;
    }
    set tsp(arg) {
      if (arg == null) dart.nullFailed(I[18], 985, 19, "arg");
      return this.yxz = arg;
    }
    set tsq(arg) {
      if (arg == null) dart.nullFailed(I[18], 986, 19, "arg");
      return this.yxw = arg;
    }
    set tps(arg) {
      if (arg == null) dart.nullFailed(I[18], 987, 19, "arg");
      return this.yzx = arg;
    }
    set tpq(arg) {
      if (arg == null) dart.nullFailed(I[18], 988, 19, "arg");
      return this.yzw = arg;
    }
    set tqs(arg) {
      if (arg == null) dart.nullFailed(I[18], 989, 19, "arg");
      return this.ywx = arg;
    }
    set tqp(arg) {
      if (arg == null) dart.nullFailed(I[18], 990, 19, "arg");
      return this.ywz = arg;
    }
    set pst(arg) {
      if (arg == null) dart.nullFailed(I[18], 991, 19, "arg");
      return this.zxy = arg;
    }
    set psq(arg) {
      if (arg == null) dart.nullFailed(I[18], 992, 19, "arg");
      return this.zxw = arg;
    }
    set pts(arg) {
      if (arg == null) dart.nullFailed(I[18], 993, 19, "arg");
      return this.zyx = arg;
    }
    set ptq(arg) {
      if (arg == null) dart.nullFailed(I[18], 994, 19, "arg");
      return this.zyw = arg;
    }
    set pqs(arg) {
      if (arg == null) dart.nullFailed(I[18], 995, 19, "arg");
      return this.zwx = arg;
    }
    set pqt(arg) {
      if (arg == null) dart.nullFailed(I[18], 996, 19, "arg");
      return this.zwy = arg;
    }
    set qst(arg) {
      if (arg == null) dart.nullFailed(I[18], 997, 19, "arg");
      return this.wxy = arg;
    }
    set qsp(arg) {
      if (arg == null) dart.nullFailed(I[18], 998, 19, "arg");
      return this.wxz = arg;
    }
    set qts(arg) {
      if (arg == null) dart.nullFailed(I[18], 999, 19, "arg");
      return this.wyx = arg;
    }
    set qtp(arg) {
      if (arg == null) dart.nullFailed(I[18], 1000, 19, "arg");
      return this.wyz = arg;
    }
    set qps(arg) {
      if (arg == null) dart.nullFailed(I[18], 1001, 19, "arg");
      return this.wzx = arg;
    }
    set qpt(arg) {
      if (arg == null) dart.nullFailed(I[18], 1002, 19, "arg");
      return this.wzy = arg;
    }
    set stpq(arg) {
      if (arg == null) dart.nullFailed(I[18], 1003, 20, "arg");
      return this.xyzw = arg;
    }
    set stqp(arg) {
      if (arg == null) dart.nullFailed(I[18], 1004, 20, "arg");
      return this.xywz = arg;
    }
    set sptq(arg) {
      if (arg == null) dart.nullFailed(I[18], 1005, 20, "arg");
      return this.xzyw = arg;
    }
    set spqt(arg) {
      if (arg == null) dart.nullFailed(I[18], 1006, 20, "arg");
      return this.xzwy = arg;
    }
    set sqtp(arg) {
      if (arg == null) dart.nullFailed(I[18], 1007, 20, "arg");
      return this.xwyz = arg;
    }
    set sqpt(arg) {
      if (arg == null) dart.nullFailed(I[18], 1008, 20, "arg");
      return this.xwzy = arg;
    }
    set tspq(arg) {
      if (arg == null) dart.nullFailed(I[18], 1009, 20, "arg");
      return this.yxzw = arg;
    }
    set tsqp(arg) {
      if (arg == null) dart.nullFailed(I[18], 1010, 20, "arg");
      return this.yxwz = arg;
    }
    set tpsq(arg) {
      if (arg == null) dart.nullFailed(I[18], 1011, 20, "arg");
      return this.yzxw = arg;
    }
    set tpqs(arg) {
      if (arg == null) dart.nullFailed(I[18], 1012, 20, "arg");
      return this.yzwx = arg;
    }
    set tqsp(arg) {
      if (arg == null) dart.nullFailed(I[18], 1013, 20, "arg");
      return this.ywxz = arg;
    }
    set tqps(arg) {
      if (arg == null) dart.nullFailed(I[18], 1014, 20, "arg");
      return this.ywzx = arg;
    }
    set pstq(arg) {
      if (arg == null) dart.nullFailed(I[18], 1015, 20, "arg");
      return this.zxyw = arg;
    }
    set psqt(arg) {
      if (arg == null) dart.nullFailed(I[18], 1016, 20, "arg");
      return this.zxwy = arg;
    }
    set ptsq(arg) {
      if (arg == null) dart.nullFailed(I[18], 1017, 20, "arg");
      return this.zyxw = arg;
    }
    set ptqs(arg) {
      if (arg == null) dart.nullFailed(I[18], 1018, 20, "arg");
      return this.zywx = arg;
    }
    set pqst(arg) {
      if (arg == null) dart.nullFailed(I[18], 1019, 20, "arg");
      return this.zwxy = arg;
    }
    set pqts(arg) {
      if (arg == null) dart.nullFailed(I[18], 1020, 20, "arg");
      return this.zwyx = arg;
    }
    set qstp(arg) {
      if (arg == null) dart.nullFailed(I[18], 1021, 20, "arg");
      return this.wxyz = arg;
    }
    set qspt(arg) {
      if (arg == null) dart.nullFailed(I[18], 1022, 20, "arg");
      return this.wxzy = arg;
    }
    set qtsp(arg) {
      if (arg == null) dart.nullFailed(I[18], 1023, 20, "arg");
      return this.wyxz = arg;
    }
    set qtps(arg) {
      if (arg == null) dart.nullFailed(I[18], 1024, 20, "arg");
      return this.wyzx = arg;
    }
    set qpst(arg) {
      if (arg == null) dart.nullFailed(I[18], 1025, 20, "arg");
      return this.wzxy = arg;
    }
    set qpts(arg) {
      if (arg == null) dart.nullFailed(I[18], 1026, 20, "arg");
      return this.wzyx = arg;
    }
    get xx() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0));
    }
    get xy() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1));
    }
    get xz() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2));
    }
    get xw() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3));
    }
    get yx() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0));
    }
    get yy() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1));
    }
    get yz() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2));
    }
    get yw() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3));
    }
    get zx() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0));
    }
    get zy() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1));
    }
    get zz() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2));
    }
    get zw() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3));
    }
    get wx() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0));
    }
    get wy() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1));
    }
    get wz() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](2));
    }
    get ww() {
      return vector_math_64.Vector2.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](3));
    }
    get xxx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0));
    }
    get xxy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1));
    }
    get xxz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2));
    }
    get xxw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3));
    }
    get xyx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0));
    }
    get xyy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1));
    }
    get xyz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2));
    }
    get xyw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3));
    }
    get xzx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0));
    }
    get xzy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1));
    }
    get xzz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2));
    }
    get xzw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3));
    }
    get xwx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0));
    }
    get xwy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1));
    }
    get xwz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](2));
    }
    get xww() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](3));
    }
    get yxx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0));
    }
    get yxy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1));
    }
    get yxz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2));
    }
    get yxw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3));
    }
    get yyx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0));
    }
    get yyy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1));
    }
    get yyz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2));
    }
    get yyw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3));
    }
    get yzx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0));
    }
    get yzy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1));
    }
    get yzz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2));
    }
    get yzw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3));
    }
    get ywx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0));
    }
    get ywy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1));
    }
    get ywz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](2));
    }
    get yww() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](3));
    }
    get zxx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0));
    }
    get zxy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1));
    }
    get zxz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2));
    }
    get zxw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3));
    }
    get zyx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0));
    }
    get zyy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1));
    }
    get zyz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2));
    }
    get zyw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3));
    }
    get zzx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](0));
    }
    get zzy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](1));
    }
    get zzz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2));
    }
    get zzw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3));
    }
    get zwx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0));
    }
    get zwy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1));
    }
    get zwz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](2));
    }
    get zww() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](2), this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](3));
    }
    get wxx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](0));
    }
    get wxy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](1));
    }
    get wxz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](2));
    }
    get wxw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](0), this[S._v4storage][S.$_get](3));
    }
    get wyx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](0));
    }
    get wyy() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](1));
    }
    get wyz() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](2));
    }
    get wyw() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$_get](3), this[S._v4storage][S.$_get](1), this[S._v4storage][S.$_get](3));
    }
    get wzx() {
      return vector_math_64.Vector3.new(this[S._v4storage][S.$